{"version":3,"sources":["context/auth/authContext.js","context/auth/authReducer.js","constants/index.js","api/api.js","api/auth.api.js","context/auth/authState.js","components/routes/AnonRoute.jsx","components/routes/PrivateRoute.jsx","config/token.js","pages/Navbar.js","pages/Home.js","pages/Login.js","pages/Signup.js","pages/SignUpMssg.js","pages/UserDashboard.js","pages/UserCompanyCompleteProfile.js","pages/ConfirmationToken.js","pages/CompanyLogin.js","pages/CompanySignup.js","pages/CompanySignUpMssg.js","pages/CompanyDashboard.js","pages/CompanyConfirmationToken.js","pages/PreLogin.js","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","state","action","type","localStorage","setItem","payload","token","user","loading","removeItem","message","axiosInstance","axios","create","baseURL","process","withCredentials","logout","post","companyLogout","companyPostConfirmationToken","id","confirmationToken","email","AuthState","props","initialState","getItem","useReducer","AuthReducer","dispatch","history","useHistory","Provider","value","authenticate","data","login","then","res","console","log","push","catch","err","authenticateCompany","companyLogin","children","AnonRoute","useContext","AuthContext","Component","component","rest","to","render","PrivateRoute","tokenAuth","defaults","headers","common","Navbar","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","alt","style","textDecoration","Home","Login","useForm","register","handleSubmit","errors","onSubmit","autoComplete","name","placeholder","ref","required","pattern","password","disabled","Signup","watch","useState","isCompany","setisCompany","setInfoSent","error","setError","signup","result","status","server","response","repeatPassword","validate","onClick","SignUpMssg","infoSent","React","isOpen","setIsOpen","setData","hideModal","defaultValue","fontWeight","Modal","show","onHide","Header","Title","Body","Footer","borderRadius","UserDashboard","UserCompanyCompleteProfile","document","sector","countries","map","country","cca3","countryCode","countryNameState","match","params","hasExp","setHasexp","docType","sectorType","countryCodeNumber","countryName","handleCountryCodeType","e","handleCountryName","userCompleteProfile","userId","onChange","doc","key","persist","ConfirmationToken","handleFormSubmit","preventDefault","postConfirmationToken","userToken","setState","handleChange","target","handleClick","this","height","CompanyLogin","CompanySignup","companySignup","CompanySignUpMssg","CompanyDashboard","event","a","companyToken","companyId","PreLogin","App","exact","path","CompanyConfirmationToken","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.715276a2.chunk.js","sourcesContent":["  \r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import { LOGIN_SUCCESS, LOGIN_ERROR,} from '../../constants/index';\r\n\r\nexport default (state, action) => {\r\n\tswitch(action.type) {\r\n       \r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.payload.token);\r\n\t\t\tlocalStorage.setItem('user', action.payload.user);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n\t\t\t\tuser: action.payload.user,\r\n\t\t\t\tloading: false\r\n            }\t\t\r\n \r\n\t\tcase LOGIN_ERROR:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoken: null,\r\n\t\t\t\t\tuser: null,\r\n\t\t\t\t\tmessage: action.payload, \r\n\t\t\t\t\tloading: false\r\n\t\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import { \r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  USER_REQUEST,\r\n  LOGOUT\r\n} from '../../constants';\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n      case LOGIN_SUCCESS:\r\n          localStorage.setItem('token', action.payload.token);\r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              loading: false\r\n          }\r\n      case USER_REQUEST: \r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              user: action.payload, \r\n              loading: false\r\n          }\r\n      case LOGOUT:\r\n      case LOGIN_ERROR:\r\n          localStorage.removeItem('token');\r\n          return {\r\n              ...state,\r\n              token: null,\r\n              user: null,\r\n              auth: null,\r\n              message: action.payload, \r\n              loading: false\r\n          }\r\n      \r\n      default:\r\n          return state;\r\n  }\r\n} */","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URI}`,\r\n\twithCredentials: true\r\n});\r\n\r\n/*  axiosInstance.interceptors.response.use(response => {\r\n\treturn response.data;\r\n}, error => {\r\n\treturn Promise.reject(error);\r\n}); \r\n */","import { axiosInstance } from './api';\r\n\r\n\r\nexport const signup = (data) => {\r\n    return axiosInstance.post('/auth/user/signup', data)\r\n};\r\n\r\nexport const login = (data) => {\r\n\treturn axiosInstance.post('/auth/user/login', data);\r\n};\r\n\r\nexport const logout = () => {\r\n    return axiosInstance.post(\"/auth/user/logout\", {});\r\n  }\r\n\r\nexport const postConfirmationToken = (id, confirmationToken, isCompany, email) => {\r\n    return axiosInstance.post(`/auth/confirmation/${id}/${confirmationToken}/${isCompany}`, {email})\r\n}\r\n\r\nexport const resendToken = (email) => {\r\n    return axiosInstance.post(`auth/resend`, {email})\r\n}\r\n\r\nexport const companySignup = (data) => {\r\n    return axiosInstance.post('/auth-co/company/signup', data)\r\n};\r\n\r\nexport const companyLogin = (data) => {\r\n\treturn axiosInstance.post('/auth-co/company/login', data);\r\n};\r\n\r\nexport const companyLogout = () => {\r\n    return axiosInstance.post(\"/auth-co/company/logout\", {});\r\n  }\r\n\r\nexport const companyPostConfirmationToken = (id, confirmationToken, email) => {\r\n    return axiosInstance.post(`/auth-co/confirmation/${id}/${confirmationToken}`, {email})\r\n}\r\n\r\nexport const companyResendToken = (email) => {\r\n    return axiosInstance.post(`/auth-co/resend`, {email})\r\n}\r\n\r\nexport const userCompleteProfile = (id, isCompany, data) => {\r\n    return axiosInstance.post(`/auth/user/${id}/${isCompany}/complete-profile`, data)\r\n};\r\n\r\nexport const companyCompleteProfile = (id, data) => {\r\n    return axiosInstance.post(`/auth-co/company/${id}/complete-profile`, data)\r\n};","import React, { useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport {login, companyLogin} from '../../api/auth.api';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from '../../constants/index';\r\n\r\nexport const AuthState = props => {\r\n\r\n  const initialState = {\r\n    user: localStorage.getItem(\"userId\"),\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: true\r\n   }\r\n\r\n\r\n  const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n  const history = useHistory();\r\n\r\n  const authenticate = (data) => {  \r\n    login(data)\r\n    .then(res=> {\r\n      console.log(res)\r\n      console.log(res)\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data })\r\n      history.push('/')\r\n    })\r\n    .catch(err => { \r\n      dispatch({ type: LOGIN_ERROR, payload: err }) \r\n    })\r\n  }\r\n\r\n  const authenticateCompany = (data) =>{\r\n    companyLogin(data)\r\n    .then(res => {\r\n      dispatch({type: LOGIN_SUCCESS, payload: res.data})\r\n    })\r\n    .catch(err => {\r\n      dispatch({type:LOGIN_ERROR, payload: err})\r\n    })\r\n  }\r\n\r\n  return( \r\n    <AuthContext.Provider\r\n      value={{ \r\n        token: state.token,\r\n        user: state.user,\r\n        loading:state.loading,\r\n        authenticate,\r\n        authenticateCompany\r\n      }}\r\n    >\r\n   \r\n    {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nexport const AnonRoute = props => { \r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props; \r\n\r\n  return (\r\n    <>\r\n      {!authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} /> \r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nexport const PrivateRoute = props => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <>\r\n      {authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} />\r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {axiosInstance} from '../api/api';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        axiosInstance.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React from \"react\";\r\nimport '../CSS/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavDropdown\"\r\n          aria-controls=\"navbarNavDropdown\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n\r\n            <img className='mt-4 ml-5'src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy'/>\r\n          <ul className=\"navbar-nav mt-3\">\r\n            <li className=\"nav-item active \">\r\n            <b><a  className=\"nav-link text-light mr-4\"  href=\"/\">\r\n                ¿Cómo funciona?<span className=\"sr-only\">(current)</span>\r\n              </a></b>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n              \r\n                 Soy influencer\r\n               \r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n                \r\n                 Soy una empresa\r\n                \r\n              </a>\r\n            </li>\r\n             <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n                Blog\r\n              </a>\r\n            </li> \r\n            <li className=\"nav-item\">\r\n              <a href='/auth/login' style = {{textDecoration:'underline'}} className=\"nav-link text-light\">\r\n                Login\r\n              </a>\r\n            </li> \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","\r\nimport React, { Component } from 'react'\r\nimport Navbar from './Navbar';\r\nimport '../CSS/homePage.css';\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-container'>\r\n                <Navbar />\r\n                <section>\r\n                    <div>\r\n                        <h1 className='mt-4'>Crea tu cuenta y empieza a<br /> descubrir el mejor talento</h1>\r\n                    </div>\r\n                    <hr className='hr-left' /> <p>En muy pocos pasos tendrás todo listo para comenzar </p> <hr className='hr-right' />\r\n\r\n                    <div>\r\n                        <h2>Para empezar, elige tu perfil</h2>\r\n                    </div>\r\n                    <div className='d-flex justify-content-center'>\r\n                        <div className='mr-5 homeContainer'>\r\n                            <h3>Soy influencer</h3>\r\n                            <p className='homeContainer-text'>Quiero ayudar a mis amigos y conocidos a conseguir trabajo</p>\r\n                            <p className='p-cacc'><a className='btn-cacc' href='/auth/user/signup'>Crear cuenta de influencer   <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                        </div>\r\n\r\n                        <div className=' ml-5 homeContainer'>\r\n                            <h3>Soy empresa</h3>\r\n                            <p className='homeContainer-text'>Quiero publicar ofertas de empleo y econtrar al candidato ideal</p>\r\n\r\n                            <p className='p-cacc'> <a className='btn-cacc mx-auto' href='/auth-co/company/signup'>Crear cuenta de empresa   <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport React, { useContext} from 'react';\r\nimport AuthContext from '../context/auth/authContext';\r\nimport '../CSS/signupForm.css';\r\n\r\nexport const Login = () => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { authenticate } = authContext;\r\n \r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    authenticate(data)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n      <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n      <h3>Login</h3>\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder='Email'\r\n            ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'invalid email adress' } })} />\r\n          {errors.email && <span> {errors.email.message ? errors.email.message : 'This field is required'} </span>}\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            ref={register({ required: true })}\r\n            placeholder='Password' />\r\n          {errors.password && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            <input className='checkbox-label' disabled />\r\n            <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n        </div>\r\n\r\n        <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Entrar en mi cuenta' /> </p>\r\n      </form>\r\n\r\n      \r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logout } from '../api/auth.api.js';\r\nimport { signup } from '../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport '../CSS/signupForm.css';\r\n\r\n\r\nexport const Signup = () => {\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const [isCompany, setisCompany] = useState(false);\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [error, setError] = useState('')\r\n  const handleClick = () => setisCompany(!isCompany)\r\n\r\n  const onSubmit = data => {\r\n    signup(data)\r\n      .then(function (result) {\r\n        // console.log('resolved', result)       \r\n        if (result.status === 200) {\r\n          history.push('/auth/user/token-sent')\r\n        } else {\r\n          setInfoSent(false)\r\n        }\r\n      })\r\n      .catch(function (server) {\r\n\r\n        if (server.response.status !== 200) {\r\n\r\n          setError('Este email ya está en uso');\r\n          //console.log(error);\r\n          return;\r\n        }\r\n\r\n      })\r\n    return error\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para crear tu cuenta, completa este formulario<br />con tus datos de contacto.\r\n\r\n        </p>\r\n              <p className='p-signup'>No te preocupes, más adelante podrás añadir <br /> los datos de tu empresa.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Apellidos' />\r\n            </div>\r\n\r\n            {<span>{error}</span>}\r\n            <div>\r\n              {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                })} />\r\n            </div>\r\n\r\n            <div>\r\n              {errors.password && <span>Este campo es obligatorio</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Contraseña' />\r\n            </div>\r\n\r\n            <div>\r\n\r\n              {errors.repeatPassword && <span>{errors.repeatPassword.message ? errors.repeatPassword.message : 'Este campo es obligatorio'}</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"repeatPassword\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  validate: (value) => value === watch('password') || 'Las contraseñas deben coincidir'\r\n                })}\r\n                placeholder='Repite la Contraseña'\r\n\r\n              />\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <label >\r\n              <input className='checkbox-label' disabled/>\r\n                <input className='checkbox-round' type=\"checkbox\" name=\"isCompany\" onClick={handleClick} ref={register} /> Eres una empresa de selección (Headhunter) ?\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n              <input className='checkbox-label' disabled/>\r\n              <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='user-terms'>\r\n                Al pulsar el botón de 'Crear mi cuenta' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Crear mi cuenta' /> </p>\r\n            \r\n          </form>\r\n          <button type=\"button\" className=\"btn btn-lg btn-block  text-uppercase btn-danger text-light \" onClick={logout}>Desconectar</button>\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { resendToken } from '../api/auth.api';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../CSS/signupmssg.css'\r\nimport '../CSS/signupForm.css'\r\n\r\n\r\nexport const SignUpMssg = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false)\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [data, setData] = useState({})\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        resendToken(data.email).then(setData(data.email)).then(setInfoSent(true))\r\n    };\r\n\r\n    return (\r\n        <div className='container d-lg-flex h-100'>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            {!infoSent ?\r\n                <div className='card row justify-content-center align-self-center col-lg-6 col-sm-3'>\r\n                    <img className='tick-logo' src='/Anotación 2020-06-03 114022.png' alt='logo-gamanfy' />\r\n\r\n                    <div>\r\n                        <p className=' card-body p-signup mr-5 ml-5' style={{ fontWeight: '700' }}>Acabamos de crear tu cuenta</p>\r\n                        <p className=' dar-body p-signup mr-5 ml-5'> Para empezar a ver las mejores ofertas de empleo, verifica tu bandeja den entrada y haz click en el link que te hemos enviado para completar la validación.</p>\r\n                    </div>\r\n\r\n                    <p className='card-body user-terms mt-5'>¿No ves nuestro correo en tu bandeja de entrada? Prueba a <u>\r\n                        <input className='email-resend' type=\"submit\" onClick={showModal} value='Reenviar el email de verificación' /></u>\r\n                    </p>\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Header>\r\n                            <Modal.Title> <p className='p-signup'>Escriba su dirección de correo</p> </Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}> <input className='signup-fields ml-5 mt-3' type='email' name='email' placeholder='Email' ref={register({ required: true })} autoComplete='off' />\r\n                            <Modal.Body>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button onClick={hideModal} className='btn-danger p-1' style={{ borderRadius: '3px' }}>Cancel</button>\r\n                                <input type='submit' className='btn-cacc-su' value='Reenviar' />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n\r\n\r\n                </div> : <p >Nuevo email de confirmación enviado correctamente a {<input className='resend-email' type='text' name='userEmail' defaultValue={data} />}</p>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const UserDashboard = () => {\r\n \r\n\r\n    return (\r\n        <div>\r\n            <h1>Hello this is a private route</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { userCompleteProfile } from '../api/auth.api';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { useState, useEffect } from 'react';\r\nimport '../CSS/signupForm.css';\r\nimport countries from '../countries.json'\r\n\r\n\r\nexport const UserCompanyCompleteProfile = (props) => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [document, setDocument] = useState([\"CIF\", \"NIF\"]);\r\n  const [sector, setSector] = useState([\". . .\", \"Administración Gubernamental\", \"Aeronáutica y aviación\", \"Agricultura\", \"Alimentación y bebidas\", \"Almacenamiento\", \"Arquitectura y planificación\", \"Artes escénicas\", \"Artesanía\", \"Artículos de consumo\", \"Artículos de lujo y joyas\", \"Artículos deportivos\", \"Atención a la salud mental\", \"Atención sanitaria y hospitalaria\", \"Automación industrial\", \"Banca\", \"Bellas artes\", \"Bienes inmobiliarios\", \"Biotecnología\", \"Construcción\", \"Consultoría\", \"Contabilidad\", \"Cosmética\", \"Deportes\", \"Derecho\", \"Desarrollo de programación\", \"Diseño\", \"Diseño gráfico\", \"Dotación y selección de personal\", \"Educación primaria/secundaria\", \"Energía renovable y medioambiente\", \"Enseñanza superior\", \"Entretenimiento\", \"Equipos informáticos\"]);\r\n  const [countryCode, setCountryCode] = useState(countries.map(country => country.cca3))\r\n  const [countryNameState, setCountryNameState] = useState(countries.map(country => country.name.common));\r\n  const [isCompany, setIsCompany] = useState(props.match.params)\r\n  const [hasExp, setHasexp] = useState(false);\r\n\r\n  const docType = document.map(docType => docType);\r\n  const sectorType = sector.map(sectorType => sectorType);\r\n  const countryCodeNumber = countryCode.map(countryCodeNumber => countryCodeNumber);\r\n  const countryName = countryNameState.map(countryName => countryName);\r\n\r\n  const handleDocType = (e) => console.log(('handleDocumentTypes'));\r\n  const handleSector = (e) => console.log(('handleSectors'));\r\n  const handleCountryCodeType = (e) => console.log(('handleCountryType'));\r\n  const handleCountryName = (e) => console.log(('handleCountryName'));\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    userCompleteProfile(props.match.params.userId, props.match.params.isCompany, data)\r\n      .then(function (result) {\r\n\r\n        if (result.status === 200) {\r\n          setInfoSent(true)\r\n        } else {\r\n          setInfoSent(false)\r\n        }\r\n        history.push('/auth/user/login')\r\n      })\r\n      .catch(function (error) {\r\n\r\n        if (error.response.status !== 200) {\r\n\r\n          setInfoSent(false)\r\n          return;\r\n        }\r\n\r\n      })\r\n  };\r\n\r\n  const handleClick = () => setHasexp(!hasExp);\r\n  \r\n  const handleSubmitCompleteProf = (e) => {\r\n    onSubmit(e.persist())\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      {isCompany.isCompany === 'true' ?\r\n        (\r\n          <>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            <div>\r\n              <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n                <div>\r\n                  <p className='p-signup'>\r\n                    Para completar tu cuenta, completa este formulario<br />con tus datos.</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"companyName\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Nombre de la empresa' />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"taxId\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Razón Social' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Teléfono de contacto' />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"contactPerson\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Persona de Contacto' />\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Seleccione su tipo de documento\r\n              <select\r\n                      name='documentType'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleDocType(e)}\r\n                    >\r\n                      {\r\n                        docType.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"documentNumber\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número de Documento' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Cógido de país\r\n              <select\r\n                      name='countryCode'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleCountryCodeType(e)}\r\n                    >\r\n                      {\r\n                        countryCodeNumber.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"numberOfEmployees\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número de empleados' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    País\r\n              <select\r\n                      name='countryName'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleCountryName(e)}\r\n                    >\r\n                      {\r\n                        countryName.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='ciudad' />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"website\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Página web' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Seleccione su sector\r\n              <select\r\n                      name='sector'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleSector(e)}\r\n                    >\r\n                      {\r\n                        sectorType.map((doc, key) => {\r\n\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Dirección\r\n                </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Calle' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"number\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zip\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Código postal' />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <p className='user-terms'>\r\n                    Al pulsar el botón de 'Completar mi perfil' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n                  </p>\r\n                </div>\r\n                <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Completar mi perfil' /> </p>\r\n\r\n              </form>\r\n            </div>\r\n          </>\r\n        ) : (\r\n\r\n          <>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            <div>\r\n              <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n                <div>\r\n                  <p className='p-signup'>\r\n                    Para completar tu cuenta, completa este formulario<br />con tus datos.\r\n</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Teléfono de contacto' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"urlLinkedin\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='URL Linkedin' />\r\n                </div>\r\n                <div>\r\n                  <label>Fecha de Nacimiento\r\n                </label>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"birthDate\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Fecha de Nacimiento' />\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Cógido de país\r\n              <select\r\n                      name='countryCode'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleCountryCodeType(e)}\r\n                    >\r\n                      {\r\n                        countryCodeNumber.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    País\r\n              <select\r\n                      name='countryName'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleCountryName(e)}\r\n                    >\r\n                      {\r\n                        countryName.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Ciudad' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Dirección\r\n                </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Calle' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"number\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zip\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Código postal' />\r\n                </div>\r\n                <div>\r\n                  <label >\r\n                    <input className='checkbox-label' disabled />\r\n                    <input className='checkbox-round' type=\"checkbox\" name=\"hasExp\" onClick={handleClick} ref={register} /> Tiene experiencia?\r\n              </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <p className='user-terms'>\r\n                    Al pulsar el botón de 'Completar mi perfil' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n                  </p>\r\n                </div>\r\n              \r\n                  <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Completar mi perfil' name='/auth/user/login' onClick={handleSubmitCompleteProf}/> </p>\r\n\r\n              </form>\r\n            </div>\r\n          </>\r\n\r\n\r\n        )}\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { postConfirmationToken } from '../api/auth.api';\r\nimport './UserCompanyCompleteProfile'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass ConfirmationToken extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props)\r\n     \r\n\r\n        this.state = {\r\n            email: '',\r\n            userToken: this.props.match.params.userToken,\r\n            userId: this.props.match.params.userId,\r\n            isCompany:this.props.match.params.isCompany,\r\n            infoSent: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { userId, email, userToken, isCompany } = this.state;\r\n\r\n        postConfirmationToken(userId, userToken, isCompany, email)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    infoSent: true\r\n                })\r\n                    .then(this.history.push(`/auth/${this.state.userId}/${this.state.isCompany}/complete-profile`))\r\n            })\r\n    };\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        this.handleFormSubmit(e)\r\n        this.setState({\r\n            infoSent: true\r\n        })\r\n    }\r\n    render() {\r\n        const { email, userToken, userId, isCompany, infoSent } = this.state;\r\n        return (\r\n\r\n            <div className='background-color'>\r\n                {infoSent === false ? (\r\n\r\n                    <div className=\"col-sm-12 my-auto\">\r\n\r\n                        <div className='col-sm-12 h-100 d-lg-flex'>\r\n                            <div className=\"mx-auto mt-5\" style={{ height: '40vh' }}>\r\n\r\n                                <form className=\"form-group col-sm-12 d-table\" onSubmit={this.handleFormSubmit}>\r\n                                    <div>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput\"\r\n                                            placeholder=\"E-mail @\"\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n\r\n\r\n\r\n                                        <input\r\n                                            type=\"hidden\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput2\"\r\n                                            name='userToken'\r\n                                            defaultValue={userToken}\r\n\r\n                                        />\r\n                                        <input\r\n                                            type=\"hidden\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput2\"\r\n                                            name='userId'\r\n                                            defaultValue={userId}\r\n\r\n                                        />\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <>\r\n                                        <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Verificar mi cuenta' onClick={this.handleClick} /> </p>\r\n\r\n                                    </>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div className='d-flex justify-content-center mt-5'>\r\n                            <Link className='p-cacc' to={`/auth/user/${this.state.userId}/${isCompany}/complete-profile`}>\r\n                                <button className='btn-cacc-su w-100'> \r\n                                Tu cuenta ha sido verificada, por favor haz click en <u>link</u> para completar tu perfil\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n\r\n\r\n                    )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmationToken","import { useForm } from \"react-hook-form\";\r\nimport React, { useContext } from 'react';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\n\r\nexport const CompanyLogin = () => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { authenticateCompany } = authContext;\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    authenticateCompany(data)\r\n    history.push('/');\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n    <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n    <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n    <h3>Login</h3>\r\n      <div>\r\n        <input\r\n          className='form-control signup-fields mx-auto'\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder='Email'\r\n          ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'invalid email adress' } })} />\r\n        {errors.email && <span> {errors.email.message ? errors.email.message : 'This field is required'} </span>}\r\n      </div>\r\n\r\n      <div>\r\n        <input\r\n          className='form-control signup-fields mx-auto'\r\n          type=\"password\"\r\n          name=\"password\"\r\n          ref={register({ required: true })}\r\n          placeholder='Password' />\r\n        {errors.password && <span>This field is required</span>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          <input className='checkbox-label' disabled />\r\n          <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n      </div>\r\n\r\n      <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Entrar en mi cuenta' /> </p>\r\n    </form>\r\n\r\n    \r\n  </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { companyLogout } from '../api/auth.api.js';\r\nimport { companySignup } from '../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport '../CSS/signupForm.css';\r\n\r\n\r\nexport const CompanySignup = () => {\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const onSubmit = data => {\r\n    companySignup(data)\r\n      .then(function (result) {\r\n        // console.log('resolved', result)       \r\n        if (result.status === 200) {\r\n          history.push('/auth-co/company/token-sent')\r\n        } else {\r\n          setInfoSent(false)\r\n        }\r\n      })\r\n      .catch(function (server) {\r\n\r\n        if (server.response.status !== 200) {\r\n\r\n            console.log(server.response);\r\n          setError('Este email ya está en uso');\r\n          return;\r\n        }\r\n\r\n      })\r\n    return error\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para crear tu cuenta, completa este formulario<br />con tus datos de contacto.\r\n\r\n        </p>\r\n              <p className='p-signup'>No te preocupes, más adelante podrás añadir <br /> los datos de tu empresa.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Apellidos' />\r\n            </div>\r\n\r\n            {<span>{error}</span>}\r\n            <div>\r\n              {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                })} />\r\n            </div>\r\n\r\n            <div>\r\n              {errors.password && <span>Este campo es obligatorio</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Contraseña' />\r\n            </div>\r\n\r\n            <div>\r\n\r\n              {errors.repeatPassword && <span>{errors.repeatPassword.message ? errors.repeatPassword.message : 'Este campo es obligatorio'}</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"repeatPassword\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  validate: (value) => value === watch('password') || 'Las contraseñas deben coincidir'\r\n                })}\r\n                placeholder='Repite la Contraseña'\r\n\r\n              />\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n              <input className='checkbox-label' disabled/>\r\n              <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='user-terms'>\r\n                Al pulsar el botón de 'Crear mi cuenta' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Crear mi cuenta' /> </p>\r\n            \r\n          </form>\r\n          <button type=\"button\" className=\"btn btn-lg btn-block  text-uppercase btn-danger text-light \" onClick={companyLogout}>Desconectar</button>\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { companyResendToken } from '../api/auth.api';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../CSS/signupmssg.css'\r\nimport '../CSS/signupForm.css'\r\n\r\n\r\nexport const CompanySignUpMssg = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false)\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [data, setData] = useState({})\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        companyResendToken(data.email).then(setData(data.email)).then(setInfoSent(true))\r\n    };\r\n\r\n    return (\r\n        <div className='container d-lg-flex h-100'>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            {!infoSent ?\r\n                <div className='card row justify-content-center align-self-center col-lg-6 col-sm-3'>\r\n                    <img className='tick-logo' src='/Anotación 2020-06-03 114022.png' alt='logo-gamanfy' />\r\n\r\n                    <div>\r\n                        <p className=' card-body p-signup mr-5 ml-5' style={{ fontWeight: '700' }}>Acabamos de crear tu cuenta</p>\r\n                        <p className=' dar-body p-signup mr-5 ml-5'> Para empezar a encontrar el mejor talento, verifica tu bandeja de entrada y haz click en el link que te hemos enviado para completar la validación.</p>\r\n                    </div>\r\n\r\n                    <p className='card-body user-terms mt-5'>¿No ves nuestro correo en tu bandeja de entrada? Prueba a <u>\r\n                        <input className='email-resend' type=\"submit\" onClick={showModal} value='Reenviar el email de verificación' /></u>\r\n                    </p>\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Header>\r\n                            <Modal.Title> <p className='p-signup'>Escriba su dirección de correo</p> </Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}> <input className='signup-fields ml-5 mt-3' type='email' name='email' placeholder='Email' ref={register({ required: true })} autoComplete='off' />\r\n                            <Modal.Body>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button onClick={hideModal} className='btn-danger p-1' style={{ borderRadius: '3px' }}>Cancel</button>\r\n                                <input type='submit' className='btn-cacc-su' value='Reenviar' />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n\r\n\r\n                </div> : <p >Nuevo email de confirmación enviado correctamente a {<input className='resend-email' type='text' name='userEmail' defaultValue={data} />}</p>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const CompanyDashboard = () => {\r\n \r\n\r\n    return (\r\n        <div>\r\n            <h1>Hello this is a private route</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { companyPostConfirmationToken } from '../api/auth.api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ConfirmationToken extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            companyToken: this.props.match.params.companyToken,\r\n            companyId: this.props.match.params.companyId,\r\n            infoSent: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, companyToken, companyId } = this.state;\r\n\r\n        companyPostConfirmationToken(companyId, companyToken, email)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    infoSent: true\r\n                })\r\n            })\r\n\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        this.handleFormSubmit(e);\r\n        this.setState({\r\n            infoSent: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { companyId, email, companyToken, infoSent } = this.state;\r\n        return (\r\n            <div className='background-color'>\r\n\r\n                {infoSent === false ? (\r\n                <div className=\"col-sm-12 my-auto\">\r\n\r\n                    <div className='col-sm-12 h-100 d-table'>\r\n                        <div className=\"mx-auto mt-5\" style={{ height: '40vh' }}>\r\n\r\n                            <form className=\"form-group col-sm-12 d-table\" onSubmit={this.handleFormSubmit}>\r\n                                <div>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                        placeholder=\"E-mail @\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"hidden\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput2\"\r\n                                        name='companyToken'\r\n                                        defaultValue={companyToken}\r\n\r\n                                    />\r\n                                    <input\r\n                                        type=\"hidden\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput2\"\r\n                                        name='companyId'\r\n                                        defaultValue={companyId}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <>\r\n                                    <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Verificar mi cuenta' onClick={this.handleClick} /> </p>\r\n\r\n                                </>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                ): (\r\n                <div className='d-flex justify-content-center mt-5'>\r\n                    <Link className='p-cacc' to={`/auth/user/${this.state.userId}/complete-profile`}>\r\n                    <button className='btn-cacc-su w-100'>\r\n                     Tu cuenta ha sido verificada, por favor haz click en <u>link</u> para completar tu perfil\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n                    )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmationToken","import React from 'react'\r\n\r\nexport const PreLogin = () => {\r\n    return (\r\n        <div>\r\n            <div className='d-flex justify-content-center'>\r\n                <div className='mr-5 homeContainer'>\r\n                    <h3>Soy influencer</h3>\r\n\r\n                    <p className='p-cacc'><a className='btn-cacc' href='/auth/user/login'>Login <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                </div>\r\n\r\n                <div className=' ml-5 homeContainer'>\r\n                    <h3>Soy empresa</h3>\r\n\r\n                    <p className='p-cacc'> <a className='btn-cacc mx-auto' href='/auth-co/company/login'>Login <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthState } from \"./context/auth/authState\";\r\nimport { AnonRoute } from \"./components/routes/AnonRoute\";\r\nimport { PrivateRoute } from \"./components/routes/PrivateRoute\";\r\nimport { Route } from \"react-router-dom\";\r\nimport tokenAuth from './config/token';\r\nimport Home from './pages/Home';\r\nimport {Login} from \"./pages/Login\";\r\nimport {Signup} from \"./pages/Signup\";\r\nimport {SignUpMssg} from './pages/SignUpMssg';\r\nimport {UserDashboard} from './pages/UserDashboard';\r\nimport ConfirmationToken from './pages/ConfirmationToken';\r\nimport {CompanyLogin} from './pages/CompanyLogin';\r\nimport {CompanySignup} from './pages/CompanySignup';\r\nimport {CompanySignUpMssg} from './pages/CompanySignUpMssg'\r\nimport {CompanyDashboard} from './pages/CompanyDashboard';\r\nimport CompanyConfirmationToken from './pages/CompanyConfirmationToken';\r\nimport {UserCompanyCompleteProfile } from \"./pages/UserCompanyCompleteProfile\";\r\nimport {PreLogin} from './pages/PreLogin';\r\n\r\nconst token = localStorage.getItem('token');\r\nif(token) tokenAuth(token)\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <AuthState>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <AnonRoute exact path=\"/auth/user/signup\" component={Signup} />  \r\n            <AnonRoute exact path='/auth/user/token-sent' component ={SignUpMssg}/> \r\n            <AnonRoute exact path='/auth/login' component={PreLogin}/>\r\n            <AnonRoute exact path=\"/auth/user/login\" component={Login} />   \r\n            <AnonRoute exact path=\"/auth/confirmation/:userId/:userToken/:isCompany\" component={ConfirmationToken} />  \r\n            <PrivateRoute exact path='/user/:userId/dashboard' component={UserDashboard}/>\r\n            <AnonRoute exact path=\"/auth-co/company/signup\" component={CompanySignup} />  \r\n            <AnonRoute exact path='/auth-co/company/token-sent' component ={CompanySignUpMssg}/> \r\n            <AnonRoute exact path=\"/auth-co/company/login\" component={CompanyLogin} /> \r\n            <AnonRoute exact path=\"/auth/user/:userId/:isCompany/complete-profile\" component={UserCompanyCompleteProfile}/>\r\n            <AnonRoute exact path=\"/auth-co/confirmation/:companyId/:companyToken\" component={CompanyConfirmationToken} />  \r\n            <PrivateRoute exact path='/company/:companyId/dashboard' component={CompanyDashboard}/>     \r\n          </Switch>\r\n      </AuthState>\r\n    </Router>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}