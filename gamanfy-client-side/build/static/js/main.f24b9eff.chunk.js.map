{"version":3,"sources":["context/auth/authContext.js","context/auth/authReducer.js","constants/index.js","api/api.js","api/auth.api.js","context/auth/authState.js","components/routes/AnonRoute.jsx","components/routes/PrivateRoute.jsx","config/token.js","pages/Navbar.js","pages/Home.js","pages/Login.js","pages/Signup.js","pages/SignUpMssg.js","pages/UserDashboard.js","pages/ConfirmationToken.js","pages/CompanyLogin.js","pages/CompanySignup.js","pages/CompanySignUpMssg.js","pages/CompanyDashboard.js","pages/CompanyConfirmationToken.js","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","state","action","type","localStorage","setItem","payload","token","user","loading","removeItem","message","axiosInstance","axios","create","baseURL","process","withCredentials","logout","post","postConfirmationToken","confirmationToken","email","companyLogout","companyPostConfirmationToken","AuthState","props","initialState","getItem","useReducer","AuthReducer","dispatch","Provider","value","authenticate","data","login","then","res","catch","err","authenticateCompany","companyLogin","children","AnonRoute","useContext","AuthContext","Component","component","rest","to","render","PrivateRoute","tokenAuth","defaults","headers","common","Navbar","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","src","alt","style","textDecoration","Home","Login","history","useHistory","useForm","register","handleSubmit","errors","onSubmit","push","autoComplete","name","placeholder","ref","required","pattern","password","disabled","Signup","watch","useState","isCompany","setisCompany","error","signup","repeatPassword","validate","onClick","SignUpMssg","infoSent","setInfoSent","React","isOpen","setIsOpen","setData","hideModal","defaultValue","fontWeight","Modal","show","onHide","Header","Title","Body","Footer","borderRadius","UserDashboard","ConfirmationToken","handleFormSubmit","event","a","preventDefault","userToken","response","console","log","setState","handleChange","target","match","params","this","height","onChange","role","CompanyLogin","CompanySignup","setError","companySignup","result","status","server","CompanySignUpMssg","CompanyDashboard","companyToken","App","exact","path","CompanyConfirmationToken","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f24b9eff.chunk.js","sourcesContent":["  \r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import { LOGIN_SUCCESS, LOGIN_ERROR } from '../../constants/index';\r\n\r\nexport default (state, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.payload.token);\r\n\t\t\tlocalStorage.setItem('user', action.payload.user);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n\t\t\t\tuser: action.payload.user,\r\n\t\t\t\tloading: false\r\n\t\t\t}\t\t\r\n\t\tcase LOGIN_ERROR:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoken: null,\r\n\t\t\t\t\tuser: null,\r\n\t\t\t\t\tmessage: action.payload, \r\n\t\t\t\t\tloading: false\r\n\t\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import { \r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  USER_REQUEST,\r\n  LOGOUT\r\n} from '../../constants';\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n      case LOGIN_SUCCESS:\r\n          localStorage.setItem('token', action.payload.token);\r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              loading: false\r\n          }\r\n      case USER_REQUEST: \r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              user: action.payload, \r\n              loading: false\r\n          }\r\n      case LOGOUT:\r\n      case LOGIN_ERROR:\r\n          localStorage.removeItem('token');\r\n          return {\r\n              ...state,\r\n              token: null,\r\n              user: null,\r\n              auth: null,\r\n              message: action.payload, \r\n              loading: false\r\n          }\r\n      \r\n      default:\r\n          return state;\r\n  }\r\n} */","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URI}`,\r\n\twithCredentials: true\r\n});\r\n\r\n/*  axiosInstance.interceptors.response.use(response => {\r\n\treturn response.data;\r\n}, error => {\r\n\treturn Promise.reject(error);\r\n}); \r\n */","import { axiosInstance } from './api';\r\n\r\n\r\nexport const signup = (data) => {\r\n    return axiosInstance.post('/auth/user/signup', data)\r\n};\r\n\r\nexport const login = (data) => {\r\n\treturn axiosInstance.post('/auth/user/login', data);\r\n};\r\n\r\nexport const logout = () => {\r\n    return axiosInstance.post(\"/auth/user/logout\", {});\r\n  }\r\n\r\nexport const postConfirmationToken = (confirmationToken, email) => {\r\n    return axiosInstance.post(`/auth/confirmation/${confirmationToken}`, {email})\r\n}\r\n\r\nexport const resendToken = (email) => {\r\n    return axiosInstance.post(`auth/resend`, {email})\r\n}\r\n\r\nexport const companySignup = (data) => {\r\n    return axiosInstance.post('/auth-co/company/signup', data)\r\n};\r\n\r\nexport const companyLogin = (data) => {\r\n\treturn axiosInstance.post('/auth-co/company/login', data);\r\n};\r\n\r\nexport const companyLogout = () => {\r\n    return axiosInstance.post(\"/auth-co/company/logout\", {});\r\n  }\r\n\r\nexport const companyPostConfirmationToken = (confirmationToken, email) => {\r\n    return axiosInstance.post(`/auth-co/confirmation/${confirmationToken}`, {email})\r\n}\r\n\r\nexport const companyResendToken = (email) => {\r\n    return axiosInstance.post(`/auth-co/resend`, {email})\r\n}","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport {login} from '../../api/auth.api';\r\nimport {companyLogin} from '../../api/auth.api';\r\n\r\n\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from '../../constants/index';\r\n\r\nexport const AuthState = props => {\r\n  const initialState = {\r\n    user: localStorage.getItem(\"user\"),\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: true\r\n   }\r\n\r\n  \r\n  const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n  const authenticate = (data) => {\r\n    login(data)\r\n    .then(res=> {\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => { \r\n      dispatch({ type: LOGIN_ERROR, payload: err }) \r\n    })\r\n  }\r\n\r\n  const authenticateCompany = (data) =>{\r\n    companyLogin(data)\r\n    .then(res => {\r\n      dispatch({type: LOGIN_SUCCESS, payload: res.data})\r\n    })\r\n    .catch(err => {\r\n      dispatch({type:LOGIN_ERROR, payload: err})\r\n    })\r\n  }\r\n\r\n  return(\r\n    <AuthContext.Provider\r\n      value={{ \r\n        token: state.token,\r\n        user: state.user,\r\n        authenticate,\r\n        authenticateCompany\r\n      }}\r\n    >\r\n   \r\n    {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nexport const AnonRoute = props => { \r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props; \r\n\r\n  return (\r\n    <>\r\n      {!authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} /> \r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nexport const PrivateRoute = props => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <>\r\n      {authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} />\r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {axiosInstance} from '../api/api';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        axiosInstance.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React from \"react\";\r\nimport '../CSS/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavDropdown\"\r\n          aria-controls=\"navbarNavDropdown\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n\r\n            <img className='mt-4 ml-5'src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy'/>\r\n          <ul className=\"navbar-nav mt-3\">\r\n            <li className=\"nav-item active \">\r\n            <b><a  className=\"nav-link text-light mr-4\"  href=\"/\">\r\n                ¿Cómo funciona?<span className=\"sr-only\">(current)</span>\r\n              </a></b>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n              \r\n                 Soy influencer\r\n               \r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n                \r\n                 Soy una empresa\r\n                \r\n              </a>\r\n            </li>\r\n             <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n                Blog\r\n              </a>\r\n            </li> \r\n            <li className=\"nav-item\">\r\n              <a href='/auth/user/login' style = {{textDecoration:'underline'}} className=\"nav-link text-light\">\r\n                Login\r\n              </a>\r\n            </li> \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","\r\nimport React, { Component } from 'react'\r\nimport Navbar from './Navbar';\r\nimport '../CSS/homePage.css';\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-container'>\r\n                <Navbar />\r\n                <section>\r\n                    <div>\r\n                        <h1 className='mt-4'>Crea tu cuenta y empieza a<br /> descubrir el mejor talento</h1>\r\n                    </div>\r\n                    <hr className='hr-left' /> <p>En muy pocos pasos tendrás todo listo para comenzar </p> <hr className='hr-right' />\r\n\r\n                    <div>\r\n                        <h2>Para empezar, elige tu perfil</h2>\r\n                    </div>\r\n                    <div className='d-flex justify-content-center'>\r\n                        <div className='mr-5 homeContainer'>\r\n                            <h3>Soy influencer</h3>\r\n                            <p className='homeContainer-text'>Quiero ayudar a mis amigos y conocidos a conseguir trabajo</p>\r\n                            <p className='p-cacc'><a className='btn-cacc' href='/auth/user/signup'>Crear cuenta de influencer   <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                        </div>\r\n\r\n                        <div className=' ml-5 homeContainer'>\r\n                            <h3>Soy empresa</h3>\r\n                            <p className='homeContainer-text'>Quiero publicar ofertas de empleo y econtrar al candidato ideal</p>\r\n\r\n                            <p className='p-cacc'> <a className='btn-cacc mx-auto' href='/auth-co/company/signup'>Crear cuenta de empresa   <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport AuthContext from '../context/auth/authContext';\r\nimport '../CSS/signupForm.css';\r\n\r\nexport const Login = () => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { authenticate } = authContext;\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    authenticate(data)\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n      <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder='Email'\r\n            ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'invalid email adress' } })} />\r\n          {errors.email && <span> {errors.email.message ? errors.email.message : 'This field is required'} </span>}\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            ref={register({ required: true })}\r\n            placeholder='Password' />\r\n          {errors.password && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            <input className='checkbox-label' disabled />\r\n            <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n        </div>\r\n\r\n        <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Entrar en mi cuenta' /> </p>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logout } from '../api/auth.api.js';\r\nimport { signup } from '../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport '../CSS/signupForm.css';\r\n\r\n\r\nexport const Signup = () => {\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const [isCompany, setisCompany] = useState(false);\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [error, setError] = useState('')\r\n  const handleClick = () => setisCompany(!isCompany)\r\n\r\n  const onSubmit = (data) => {\r\n    signup(data)\r\n    /*   .then(function (result) {\r\n        console.log('resolved', result)       \r\n        if (result.status === 200) {\r\n          return history.push('/auth/user/token-sent')\r\n        } else {\r\n          return setInfoSent(false)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n\r\n        if (error.response.status == 400) {\r\n          setError('Este email ya está en uso');\r\n           console.log(error.response);\r\n        }\r\n\r\n      }) */\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para crear tu cuenta, completa este formulario<br />con tus datos de contacto.\r\n\r\n        </p>\r\n              <p className='p-signup'>No te preocupes, más adelante podrás añadir <br /> los datos de tu empresa.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Apellidos' />\r\n            </div>\r\n\r\n            {<span>{error}</span>}\r\n            <div>\r\n              {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                })} />\r\n            </div>\r\n\r\n            <div>\r\n              {errors.password && <span>Este campo es obligatorio</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Contraseña' />\r\n            </div>\r\n\r\n            <div>\r\n\r\n              {errors.repeatPassword && <span>{errors.repeatPassword.message ? errors.repeatPassword.message : 'Este campo es obligatorio'}</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"repeatPassword\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  validate: (value) => value === watch('password') || 'Las contraseñas deben coincidir'\r\n                })}\r\n                placeholder='Repite la Contraseña'\r\n\r\n              />\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <label >\r\n              <input className='checkbox-label' disabled/>\r\n                <input className='checkbox-round' type=\"checkbox\" name=\"isCompany\" onClick={handleClick} ref={register} /> Eres una empresa de selección (Headhunter) ?\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n              <input className='checkbox-label' disabled/>\r\n              <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='user-terms'>\r\n                Al pulsar el botón de 'Crear mi cuenta' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Crear mi cuenta' /> </p>\r\n            \r\n          </form>\r\n          <button type=\"button\" className=\"btn btn-lg btn-block  text-uppercase btn-danger text-light \" onClick={logout}>Desconectar</button>\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { resendToken } from '../api/auth.api';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../CSS/signupmssg.css'\r\nimport '../CSS/signupForm.css'\r\n\r\n\r\nexport const SignUpMssg = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false)\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [data, setData] = useState({})\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        resendToken(data.email).then(setData(data.email)).then(setInfoSent(true))\r\n    };\r\n\r\n    return (\r\n        <div className='container d-lg-flex h-100'>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            {!infoSent ?\r\n                <div className='card row justify-content-center align-self-center col-lg-6 col-sm-3'>\r\n                    <img className='tick-logo' src='/Anotación 2020-06-03 114022.png' alt='logo-gamanfy' />\r\n\r\n                    <div>\r\n                        <p className=' card-body p-signup mr-5 ml-5' style={{ fontWeight: '700' }}>Acabamos de crear tu cuenta</p>\r\n                        <p className=' dar-body p-signup mr-5 ml-5'> Para empezar a ver las mejores ofertas de empleo, verifica tu bandeja den entrada y haz click en el link que te hemos enviado para completar la validación.</p>\r\n                    </div>\r\n\r\n                    <p className='card-body user-terms mt-5'>¿No ves nuestro correo en tu bandeja de entrada? Prueba a <u>\r\n                        <input className='email-resend' type=\"submit\" onClick={showModal} value='Reenviar el email de verificación' /></u>\r\n                    </p>\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Header>\r\n                            <Modal.Title> <p className='p-signup'>Escriba su dirección de correo</p> </Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}> <input className='signup-fields ml-5 mt-3' type='email' name='email' placeholder='Email' ref={register({ required: true })} autoComplete='off' />\r\n                            <Modal.Body>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button onClick={hideModal} className='btn-danger p-1' style={{ borderRadius: '3px' }}>Cancel</button>\r\n                                <input type='submit' className='btn-cacc-su' value='Reenviar' />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n\r\n\r\n                </div> : <p >Nuevo email de confirmación enviado correctamente a {<input className='resend-email' type='text' name='userEmail' defaultValue={data} />}</p>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const UserDashboard = () => {\r\n \r\n\r\n    return (\r\n        <div>\r\n            <h1>Hello this is a private route</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { postConfirmationToken } from '../api/auth.api';\r\n\r\n\r\n\r\nclass ConfirmationToken extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            userToken: this.props.match.params.userToken\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, userToken } = this.state;\r\n\r\n        postConfirmationToken(userToken, email)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    infoSent: true\r\n                })\r\n                this.history.push('/auth/user/login')\r\n            })\r\n    /*     console.log(userToken)\r\n        console.log(email); */\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n    render() {\r\n        const { email, userToken } = this.state;\r\n        return (\r\n            <div className='background-color'>\r\n                <div className=\"col-sm-12 my-auto\">\r\n\r\n                    <div className='col-sm-12 h-100 d-lg-flex'>\r\n                        <div className=\"mx-auto mt-5\" style={{ height: '40vh' }}>\r\n\r\n                            <form className=\"form-group col-sm-12 d-table\" onSubmit={this.handleFormSubmit}>\r\n                                <div>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                        placeholder=\"E-mail @\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n\r\n\r\n\r\n                                    <input\r\n                                        type=\"hidden\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput2\"\r\n                                        name='userToken'\r\n                                        defaultValue={userToken}\r\n\r\n                                    />\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                                <>\r\n                                <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Verificar mi cuenta' /> </p>\r\n\r\n                                </>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\" col-md-4 text-center\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n                </div>\r\n                <div className=\"col-md-4 text-center\">\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmationToken","import { useForm } from \"react-hook-form\";\r\nimport React, { useContext } from 'react';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\nexport const CompanyLogin = () => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { authenticate } = authContext;\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    authenticate(data)\r\n    history.push('/');\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <form  onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n\r\n        <div>  \r\n          <input \r\n            type=\"text\" \r\n            name=\"email\" \r\n            placeholder='Email'\r\n            ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'invalid email adress'} })}/>\r\n            {errors.email && <span> {errors.email.message? errors.email.message : 'This field is required'} </span>}\r\n        </div>\r\n\r\n        <div>\r\n          <input \r\n            type=\"password\" \r\n            name=\"password\" \r\n            ref={register({ required: true })} \r\n            placeholder='Password'/>\r\n          {errors.password && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label><input type=\"checkbox\" name=\"remember\" ref={register}/> Remember me</label>\r\n        </div>\r\n\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { companyLogout } from '../api/auth.api.js';\r\nimport { companySignup } from '../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport '../CSS/signupForm.css';\r\n\r\n\r\nexport const CompanySignup = () => {\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const onSubmit = data => {\r\n    companySignup(data)\r\n      .then(function (result) {\r\n        // console.log('resolved', result)       \r\n        if (result.status === 200) {\r\n          return history.push('/auth-co/company/token-sent')\r\n        } else {\r\n          return setInfoSent(false)\r\n        }\r\n      })\r\n      .catch(function (server) {\r\n\r\n        if (server.response.status !== 200) {\r\n\r\n            console.log(server.response);\r\n          setError('Este email ya está en uso');\r\n          return;\r\n        }\r\n\r\n      })\r\n    return error\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para crear tu cuenta, completa este formulario<br />con tus datos de contacto.\r\n\r\n        </p>\r\n              <p className='p-signup'>No te preocupes, más adelante podrás añadir <br /> los datos de tu empresa.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Apellidos' />\r\n            </div>\r\n\r\n            {<span>{error}</span>}\r\n            <div>\r\n              {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                })} />\r\n            </div>\r\n\r\n            <div>\r\n              {errors.password && <span>Este campo es obligatorio</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Contraseña' />\r\n            </div>\r\n\r\n            <div>\r\n\r\n              {errors.repeatPassword && <span>{errors.repeatPassword.message ? errors.repeatPassword.message : 'Este campo es obligatorio'}</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"repeatPassword\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  validate: (value) => value === watch('password') || 'Las contraseñas deben coincidir'\r\n                })}\r\n                placeholder='Repite la Contraseña'\r\n\r\n              />\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n              <input className='checkbox-label' disabled/>\r\n              <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='user-terms'>\r\n                Al pulsar el botón de 'Crear mi cuenta' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Crear mi cuenta' /> </p>\r\n            \r\n          </form>\r\n          <button type=\"button\" className=\"btn btn-lg btn-block  text-uppercase btn-danger text-light \" onClick={companyLogout}>Desconectar</button>\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { companyResendToken } from '../api/auth.api';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../CSS/signupmssg.css'\r\nimport '../CSS/signupForm.css'\r\n\r\n\r\nexport const CompanySignUpMssg = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false)\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [data, setData] = useState({})\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        companyResendToken(data.email).then(setData(data.email)).then(setInfoSent(true))\r\n    };\r\n\r\n    return (\r\n        <div className='container d-lg-flex h-100'>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            {!infoSent ?\r\n                <div className='card row justify-content-center align-self-center col-lg-6 col-sm-3'>\r\n                    <img className='tick-logo' src='/Anotación 2020-06-03 114022.png' alt='logo-gamanfy' />\r\n\r\n                    <div>\r\n                        <p className=' card-body p-signup mr-5 ml-5' style={{ fontWeight: '700' }}>Acabamos de crear tu cuenta</p>\r\n                        <p className=' dar-body p-signup mr-5 ml-5'> Para empezar a encontrar el mejor talento, verifica tu bandeja de entrada y haz click en el link que te hemos enviado para completar la validación.</p>\r\n                    </div>\r\n\r\n                    <p className='card-body user-terms mt-5'>¿No ves nuestro correo en tu bandeja de entrada? Prueba a <u>\r\n                        <input className='email-resend' type=\"submit\" onClick={showModal} value='Reenviar el email de verificación' /></u>\r\n                    </p>\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Header>\r\n                            <Modal.Title> <p className='p-signup'>Escriba su dirección de correo</p> </Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}> <input className='signup-fields ml-5 mt-3' type='email' name='email' placeholder='Email' ref={register({ required: true })} autoComplete='off' />\r\n                            <Modal.Body>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button onClick={hideModal} className='btn-danger p-1' style={{ borderRadius: '3px' }}>Cancel</button>\r\n                                <input type='submit' className='btn-cacc-su' value='Reenviar' />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n\r\n\r\n                </div> : <p >Nuevo email de confirmación enviado correctamente a {<input className='resend-email' type='text' name='userEmail' defaultValue={data} />}</p>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const CompanyDashboard = () => {\r\n \r\n\r\n    return (\r\n        <div>\r\n            <h1>Hello this is a private route</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { companyPostConfirmationToken } from '../api/auth.api';\r\n\r\n\r\n\r\nclass ConfirmationToken extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            companyToken: this.props.match.params.companyToken\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, companyToken } = this.state;\r\n\r\n        companyPostConfirmationToken(companyToken, email)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    infoSent: true\r\n                })\r\n                this.props.history.push('/auth/user/login')\r\n            })\r\n        // console.log(companyToken)\r\n        // console.log(email);\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n    render() {\r\n        const { email, companyToken } = this.state;\r\n        return (\r\n            <div className='background-color'>\r\n                <div className=\"col-sm-12 my-auto\">\r\n\r\n                    <div className='col-sm-12 h-100 d-table'>\r\n                        <div className=\"mx-auto mt-5\" style={{ height: '40vh' }}>\r\n\r\n                            <form className=\"form-group col-sm-12 d-table\" onSubmit={this.handleFormSubmit}>\r\n                                <div>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput\"\r\n                                        placeholder=\"E-mail @\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n\r\n\r\n\r\n                                    <input\r\n                                        type=\"hidden\"\r\n                                        className=\"form-control mb-3\"\r\n                                        id=\"formGroupExampleInput2\"\r\n                                        name='companyToken'\r\n                                        defaultValue={companyToken}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <>\r\n                                <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Verificar mi cuenta' /> </p>\r\n\r\n                                </>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\" col-md-4 text-center\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n                </div>\r\n                <div className=\"col-md-4 text-center\">\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmationToken","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthState } from \"./context/auth/authState\";\r\nimport { AnonRoute } from \"./components/routes/AnonRoute\";\r\nimport { PrivateRoute } from \"./components/routes/PrivateRoute\";\r\nimport { Route } from \"react-router-dom\";\r\nimport tokenAuth from './config/token';\r\nimport Home from './pages/Home';\r\nimport {Login} from \"./pages/Login\";\r\nimport {Signup} from \"./pages/Signup\";\r\nimport {SignUpMssg} from './pages/SignUpMssg';\r\nimport {UserDashboard} from './pages/UserDashboard';\r\nimport ConfirmationToken from './pages/ConfirmationToken';\r\nimport {CompanyLogin} from './pages/CompanyLogin';\r\nimport {CompanySignup} from './pages/CompanySignup';\r\nimport {CompanySignUpMssg} from './pages/CompanySignUpMssg'\r\nimport {CompanyDashboard} from './pages/CompanyDashboard';\r\nimport CompanyConfirmationToken from './pages/CompanyConfirmationToken';\r\n\r\n\r\nconst token = localStorage.getItem('token');\r\nif(token) tokenAuth(token)\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <AuthState>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <AnonRoute exact path=\"/auth/user/signup\" component={Signup} />  \r\n            <AnonRoute exact path='/auth/user/token-sent' component ={SignUpMssg}/> \r\n            <AnonRoute exact path=\"/auth/user/login\" component={Login} />   \r\n            <AnonRoute exact path=\"/auth/confirmation/:userToken\" component={ConfirmationToken} />  \r\n            <PrivateRoute exact path='/user/:userId/dashboard' component={UserDashboard}/>\r\n            <AnonRoute exact path=\"/auth-co/company/signup\" component={CompanySignup} />  \r\n            <AnonRoute exact path='/auth-co/company/token-sent' component ={CompanySignUpMssg}/> \r\n            <AnonRoute exact path=\"/auth-co/company/login\" component={CompanyLogin} />  \r\n            <AnonRoute exact path=\"/auth-co/confirmation/:companyToken\" component={CompanyConfirmationToken} />  \r\n            <PrivateRoute exact path='/company/:companyId/dashboard' component={CompanyDashboard}/>     \r\n          </Switch>\r\n      </AuthState>\r\n    </Router>\r\n  );\r\n};\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}