{"version":3,"sources":["context/auth/authContext.js","context/auth/authReducer.js","constants/index.js","api/api.js","api/auth.api.js","context/auth/authState.js","components/routes/AnonRoute.jsx","components/routes/PrivateRoute.jsx","config/token.js","pages/Navbar.js","pages/Home.js","pages/PreLogin.js","pages/UserPages/Login.js","pages/UserPages/Signup.js","pages/UserPages/SignUpMssg.js","FolderForSelects/htmlSelects.js","pages/UserPages/UserCompleteProfile.js","pages/UserPages/ConfirmationToken.js","api/offers.js","api/users.js","FolderForSelects/languageOptions.js","pages/UserPages/SendRecommendation.js","api/recommendations.js","pages/Offers/OffersDashboard.js","pages/UserPages/UserEditProfile.js","pages/UserPages/Recommendations.js","pages/UserPages/UserDashboard.js","pages/CompanyPages/CompanySignup.js","pages/CompanyPages/CompanySignUpMssg.js","pages/CompanyPages/CompanyConfirmationToken.js","pages/CompanyPages/CompanyLogin.js","pages/CompanyPages/CompanyCompleteProfile.js","pages/Offers/CompanyOffers.js","pages/CompanyPages/CompanyEditProfile.js","pages/CompanyPages/SelecProcess.js","pages/CompanyPages/CompanyDashboard.js","FolderForSelects/competencesJS.js","FolderForSelects/userBenefits.js","pages/Offers/PostJobOffer.js","pages/Offers/OfferDetails.js","pages/CompanyPages/Candidates.js","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","state","action","type","localStorage","setItem","payload","token","JSON","stringify","user","loading","removeItem","message","axiosInstance","axios","create","baseURL","process","withCredentials","logout","post","companyPostConfirmationToken","id","confirmationToken","email","userCompleteProfile","isCompany","data","AuthState","props","initialState","getItem","useReducer","AuthReducer","dispatch","history","useHistory","Provider","value","isVerified","isCompleted","authenticate","login","then","res","push","userId","catch","err","authenticateCompany","companyLogin","toCompleteCompany","myComp","companyCompleteProfile","window","location","pathname","slice","lastIndexOf","toCompleteUser","error","toCompleteCompanyUser","children","AnonRoute","useContext","AuthContext","Component","component","rest","to","render","PrivateRoute","tokenAuth","defaults","headers","common","Navbar","currentUserId","parse","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","alt","style","textDecoration","Home","PreLogin","Login","useState","isLoading","setisLoading","useForm","register","handleSubmit","errors","onSubmit","autoComplete","name","placeholder","ref","required","pattern","password","disabled","color","height","width","Signup","watch","setisCompany","infoSent","setInfoSent","setError","signup","result","status","server","response","repeatPassword","validate","onClick","SignUpMssg","React","isOpen","setIsOpen","setData","hideModal","marginTop","defaultValue","fontWeight","Modal","show","onHide","Header","Title","Body","Footer","borderRadius","sectors","categories","contracts","experience","studies","numberOfEmployees","howFoundCandidate","availability","currentSituation","UserCompleteProfile","countries","map","country","countryNameState","setCountryNameState","match","params","setIsCompany","hasExp","setHasexp","document","setDocument","sector","setSector","employees","setEmployees","handler","setHandler","docType","sectorType","countryName","employeesMap","handleCountryName","e","handleTrueOrFalse","onSubmitCompanyUser","onChange","doc","key","persist","ConfirmationToken","handleFormSubmit","preventDefault","postConfirmationToken","userToken","console","log","setState","handleChange","target","handleClick","this","getOffersDashBoard","get","getUserData","getCompanyData","languageOptions","label","SendRecommendation","wholeProps","animatedComponents","makeAnimated","foundCandidate","setHowFoundCandidate","availab","setAvailab","currentSit","setCurrentSit","language","setLanguage","copySuccess","setCopysuccess","inputToCopy","setInputToCopy","foundCandidateMap","availabilityMap","currentSitMap","languageOptionsToSet","lang","index","useEffect","a","apiRes","any","companyId","offerId","sendRecommendation","maxLength","closeMenuOnSelect","theme","colors","primary25","primary","components","isMulti","isSearchable","options","noOptionsMessage","onClickCapture","fontSize","select","execCommand","centered","OffersDashboard","offers","setOffers","query","setQuery","city","setCity","dataFiltered","setDataFiltered","setIsLoading","allOffers","offer","addressId","cityForOffer","charAt","toUpperCase","showModal","noRepCities","Set","filterActive","filter","jobOfferData","jobName","toLocaleLowerCase","includes","filterAllAndActiveFilter","sectorId","handleEvent","length","companyData","_id","imgPath","moneyPerRec","scorePerRec","companyName","showMoney","contractId","contract","retribution","minGrossSalary","scrollable","undefined","UserEditProfile","date","setDate","firstName","setFirstName","lastName","setLastName","compUserCity","setCompUserCity","setEmail","companyUser","birthDate","substring","Recommendations","updateState","setUpdateState","companiesData","setCompaniesData","recommendedPeople","handleClickDeleteRecommendation","recommendationId","deleteRecommendation","recommendationAccepted","inProcess","hired","recommendedFirstName","recommendedLastName","UserDashboard","profile","setProfile","recommendations","setRecommendations","setName","defaultContent","setDefaultContent","menuOpen","setMenuOpen","handleClickLogout","closeMenu","onStateChange","handleStateChange","disableCloseOnEsc","disableAutoFocus","customBurgerIcon","CompanySignup","companySignup","CompanySignUpMssg","event","companyToken","CompanyLogin","CompanyCompleteProfile","CompanyOffers","companyPostedOffers","setPostedOffers","postedOffers","handleClickDeleteOffer","deleteOffer","CompanyEditProfile","setCompanyName","setNumberOfEmployees","description","setDescription","setCountry","address","setAddress","phoneNumber","setPhoneNumber","website","setWebsite","taxId","setTaxId","taxCountry","setTaxCountry","taxAddress","setTaxAddress","street","number","zip","Authorization","editCompanyProfile","SelecProcess","filteredProcess","recommendedTimes","item","filteredHired","filteredStill","stillInProcess","onDate","find","CompanyDashboard","showPostedOffers","setShowPostedOffers","processes","setShowProcesses","sendCompanyRecommendation","competencesJS","userBenefits","PostJobOffer","category","setCategory","setContract","minExp","setMinExp","minStudies","setMinStudies","competences","setCompetences","benefits","setBenefits","inputValue","setInputValue","setValue","sectorTypeMap","categoryNameMap","contractNameMap","minExpMap","minStudiesMap","handleKeyDown","competencesToSet","comp","socialBenefits","ben","fetchData","$","click","is","hide","customTheme","postOffer","htmlFor","display","onInputChange","onKeyDown","DropdownIndicator","isClearable","menuIsOpen","val","OfferDetails","company","setCompany","companyID","setCompanyID","jobDescription","mainMission","toString","replace","split","minRequirements","minReqDescription","keyKnowledge","Candidates","candidate","createdAt","App","exact","path","CompanyConfirmationToken","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02ffbdc6.chunk.js","sourcesContent":["  \r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import { LOGIN_SUCCESS, LOGIN_ERROR, COMPLETE_PROFILE_SUCCESS, COMPLETE_PROFILE_ERROR} from '../../constants/index';\r\n\r\nexport default (state, action) => {\r\n\tswitch(action.type) {\r\n        case COMPLETE_PROFILE_SUCCESS:\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.payload.token);\r\n            localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n        \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n                user: action.payload.user,\r\n\t\t\t\tloading: false\r\n            }\t\t\r\n        case COMPLETE_PROFILE_ERROR:\r\n\t\tcase LOGIN_ERROR:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoken: null,\r\n                    user: null,\r\n\t\t\t\t\tmessage: action.payload, \r\n\t\t\t\t\tloading: false\r\n\t\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import { \r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  USER_REQUEST,\r\n  LOGOUT\r\n} from '../../constants';\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n      case LOGIN_SUCCESS:\r\n          localStorage.setItem('token', action.payload.token);\r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              loading: false\r\n          }\r\n      case USER_REQUEST: \r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              user: action.payload, \r\n              loading: false\r\n          }\r\n      case LOGOUT:\r\n      case LOGIN_ERROR:\r\n          localStorage.removeItem('token');\r\n          return {\r\n              ...state,\r\n              token: null,\r\n              user: null,\r\n              auth: null,\r\n              message: action.payload, \r\n              loading: false\r\n          }\r\n      \r\n      default:\r\n          return state;\r\n  }\r\n} */","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const COMPLETE_PROFILE_SUCCESS = 'COMPLETE_PROFILE_SUCCESS';\r\nexport const COMPLETE_PROFILE_ERROR = 'COMPLETE_PROFILE_ERROR'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URI}`,\r\n\twithCredentials: true\r\n});\r\n\r\n/*  axiosInstance.interceptors.response.use(response => {\r\n\treturn response.data;\r\n}, error => {\r\n\treturn Promise.reject(error);\r\n}); \r\n */","import { axiosInstance } from './api';\r\n\r\n\r\nexport const signup = (data) => {\r\n    return axiosInstance.post('/auth/user/signup', data)\r\n};\r\n\r\nexport const login = (data) => {\r\n\treturn axiosInstance.post('/auth/user/login', data);\r\n};\r\n\r\nexport const logout = () => {\r\n    return axiosInstance.post(\"/auth/user/logout\", {});\r\n  }\r\n\r\nexport const postConfirmationToken = (id, confirmationToken, isCompany, email) => {\r\n    return axiosInstance.post(`/auth/confirmation/${id}/${confirmationToken}/${isCompany}`, {email})\r\n}\r\n\r\nexport const resendToken = (email) => {\r\n    return axiosInstance.post(`/auth/resend`, {email})\r\n}\r\n\r\nexport const companySignup = (data) => {\r\n    return axiosInstance.post('/auth-co/company/signup', data)\r\n};\r\n\r\nexport const companyLogin = (data) => {\r\n\treturn axiosInstance.post('/auth-co/company/login', data);\r\n};\r\n\r\nexport const companyLogout = () => {\r\n    return axiosInstance.post(\"/auth-co/company/logout\", {});\r\n  }\r\n\r\nexport const companyPostConfirmationToken = (id, confirmationToken, email) => {\r\n    return axiosInstance.post(`/auth-co/confirmation/${id}/${confirmationToken}`, {email})\r\n}\r\n\r\nexport const companyResendToken = (email) => {\r\n    return axiosInstance.post(`/auth-co/resend`, {email})\r\n}\r\n\r\nexport const userCompleteProfile = (id, isCompany, data) => {\r\n    return axiosInstance.post(`/auth/user/${id}/${isCompany}/complete-profile`, data)\r\n};\r\n\r\nexport const companyCompleteProfile = (id, data) => {\r\n    return axiosInstance.post(`/auth-co/company/${id}/complete-profile`, data)\r\n};\r\n\r\nexport const getCompanyData = (id) => {\r\n    return axiosInstance.get(`offers/getData/${id}`)\r\n}","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport { login, companyLogin, companyCompleteProfile, userCompleteProfile } from '../../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR, COMPLETE_PROFILE_SUCCESS, COMPLETE_PROFILE_ERROR } from '../../constants/index';\r\n\r\nexport const AuthState = props => {\r\n  \r\n  const initialState = {\r\n    user: localStorage.getItem(\"user\") ,\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: true\r\n  }\r\n  \r\n  \r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n  const history = useHistory();\r\n\r\n\r\n  const authenticate = (data) => {\r\n    login(data)\r\n    .then(res => {\r\n      \r\n      if (res.data.user.isCompleted === false) {\r\n         history.push(`/auth/user/${res.data.user.userId}/${res.data.user.isCompany}/complete-profile`);\r\n          \r\n \r\n         } else {\r\n           dispatch({ type: LOGIN_SUCCESS, payload: res.data })\r\n           history.push(`/user/${res.data.user.userId}/dashboard`);\r\n \r\n         }\r\n      })\r\n\r\n      .catch(err => {\r\n        dispatch({ type: LOGIN_ERROR, payload: err })\r\n         \r\n      })\r\n  }\r\n\r\n  const authenticateCompany = (data) => {\r\n    companyLogin(data)\r\n      .then(res => {\r\n      \r\n        dispatch({ type: LOGIN_SUCCESS, payload: res.data })\r\n        if (!res.data.user.isCompleted) {\r\n\r\n         history.push(`auth-co/company/${res.data.user.userId}/complete-profile`)\r\n\r\n        } else {\r\n          history.push(`/company/${res.data.user.userId}/dashboard`);\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: LOGIN_ERROR, payload: err })\r\n      })\r\n  }\r\n\r\n  const toCompleteCompany = (myComp, data) => {\r\n     myComp = window.location.pathname.slice(17, window.location.pathname.lastIndexOf('/'));\r\n   \r\n     companyCompleteProfile(myComp, data)\r\n    .then(res => {\r\n      dispatch({type: COMPLETE_PROFILE_SUCCESS, payload: res.data})\r\n      history.push(`/company/${res.data.user.userId}/dashboard`) \r\n    })\r\n    .catch(err => {\r\n      dispatch({type:COMPLETE_PROFILE_ERROR, payload: err})\r\n    })\r\n  }\r\n\r\n  const toCompleteUser = (myComp, isCompany, data) =>{\r\n    myComp = window.location.pathname.slice(11, 35, window.location.pathname.lastIndexOf('/'));\r\n    isCompany = window.location.pathname.slice(36,41, window.location.pathname.lastIndexOf('/'));\r\n\r\n    userCompleteProfile(myComp, isCompany, data)\r\n    .then(res => {\r\n      dispatch({type: COMPLETE_PROFILE_SUCCESS, payload: res.data})\r\n      history.push(`/user/${res.data.user.userId}}/dashboard`);\r\n    })\r\n    .catch(error => {\r\n      dispatch({type: COMPLETE_PROFILE_ERROR, payload: error})\r\n    });\r\n\r\n  };\r\n  const toCompleteCompanyUser = (myComp, isCompany, data) =>{\r\n    myComp = window.location.pathname.slice(11, 35, window.location.pathname.lastIndexOf('/'));\r\n    isCompany = window.location.pathname.slice(36,40, window.location.pathname.lastIndexOf('/'));\r\n\r\n    userCompleteProfile(myComp, isCompany, data)\r\n    .then(res => {\r\n      dispatch({type: COMPLETE_PROFILE_SUCCESS, payload: res.data})\r\n      history.push(`/user/${res.data.user.userId}/dashboard`);\r\n    })\r\n    .catch(error => {\r\n      dispatch({type: COMPLETE_PROFILE_ERROR, payload: error})\r\n    });\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        user: state.user,\r\n        isVerified: state.isVerified,\r\n        isCompleted: state.isCompleted,\r\n        loading: state.loading,\r\n        authenticate,\r\n        authenticateCompany,\r\n        toCompleteCompany,\r\n        toCompleteUser,\r\n        toCompleteCompanyUser\r\n      }}\r\n    >\r\n\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nexport const AnonRoute = props => { \r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props; \r\n\r\n  return (\r\n    <>\r\n      {!authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} /> \r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nexport const PrivateRoute = props => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <>\r\n      {authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} />\r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {axiosInstance} from '../api/api';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        axiosInstance.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React from \"react\";\r\nimport '../CSS/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n\r\n  let token = localStorage.getItem('user');\r\n  let currentUserId\r\n  if (token !== null) {\r\n    let parsedCurrentUserId = JSON.parse(token);\r\n    currentUserId = parsedCurrentUserId.userId;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavDropdown\"\r\n          aria-controls=\"navbarNavDropdown\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon text-white\">G</span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n\r\n          <img className='mt-4  home-img' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n          <ul className=\"navbar-nav mt-3\">\r\n            <li className=\"nav-item active \">\r\n              <b><a className=\"nav-link text-light mr-4\" href=\"/\">\r\n                ¿Cómo funciona?<span className=\"sr-only\">(current)</span>\r\n              </a></b>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {currentUserId ? <a className=\"nav-link text-light mr-4\" href={`/user/${currentUserId}/dashboard`} > Soy influencer </a>\r\n                : <a className=\"nav-link text-light mr-4\" href='/auth/user/login'> Soy influencer </a>}\r\n\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              {currentUserId ? <a className=\"nav-link text-light mr-4\" href={`/company/${currentUserId}/dashboard`} > Soy una empresa </a>\r\n                : <a className=\"nav-link text-light mr-4\" href='/auth-co/company/login'> Soy una empresa </a>}\r\n\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-light mr-4\" href=\"/\">\r\n                Blog\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href='/auth/login' style={{ textDecoration: 'underline' }} className=\"nav-link text-light\">\r\n                Login\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import {Link} from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\nimport '../CSS/homePage.css';\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-container container-fluid'>\r\n                <Navbar />\r\n                <section>\r\n                    <div>\r\n                        <h1 className='mt-4'>Crea tu cuenta y empieza a<br /> descubrir el mejor talento</h1>\r\n                    </div>\r\n                    <div className='hr-wrapper'><div className='d-flex hr-right'></div><div className='hr-left'></div></div> \r\n                    \r\n                    <p className='p-homepage'>En muy pocos pasos tendrás todo listo para comenzar </p>  \r\n\r\n                    <div>\r\n                        <h2 className='h2-homepage'>Para empezar, elige tu perfil</h2>\r\n                    </div>\r\n                    <div className='d-lg-flex container-fluid justify-content-center p-0'>\r\n                        <div className='homeContainer-left mx-auto'>\r\n                            <h3>Soy influencer</h3>\r\n                            <p className='homeContainer-text'>Quiero ayudar a mis amigos y conocidos a conseguir trabajo</p>\r\n                            <Link to='/auth/user/signup' className='p-cacc'><p className='btn-cacc mx-auto'>Crear cuenta de influencer <i className=\"fas fa-arrow-right\"></i></p></Link>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=' homeContainer-right mx-auto'>\r\n                            <h3>Soy empresa</h3>\r\n                            <p className='homeContainer-text'>Quiero publicar ofertas de empleo y econtrar al candidato ideal</p>\r\n\r\n                           <Link to='/auth-co/company/signup' className='p-cacc'><p className='btn-cacc p-cacc mx-auto'>Crear cuenta de empresa   <i className=\"fas fa-arrow-right\"></i></p></Link>\r\n                        </div>\r\n                    </div>  \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport const PreLogin = () => {\r\n    return (\r\n        <div className='div-wrapper'>\r\n            <div className='d-lg-flex justify-content-center p-0'>\r\n                <div className=' ml-4 homeContainer-left'>\r\n                    <h3>Soy influencer</h3>\r\n\r\n                    <p className='p-cacc'><a className='btn-cacc' href='/auth/user/login'>Login <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                </div>\r\n\r\n                <div className=' ml-4 homeContainer-right'>\r\n                    <h3>Soy empresa</h3>\r\n\r\n                    <p className='p-cacc'> <a className='btn-cacc mx-auto' href='/auth-co/company/login'>Login <i className=\"fas fa-arrow-right\"></i></a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport React, { useContext, useState } from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport '../../CSS/signupForm.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const Login = () => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { authenticate } = authContext;\r\n  const [isLoading, setisLoading] = useState(false)\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n\r\n  const onSubmit = data => {\r\n    authenticate(data)\r\n    setisLoading(true);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='div-wrapper'>\r\n      <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n      <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n        <h3>Login</h3>\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder='Email'\r\n            ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'invalid email adress' } })} />\r\n          {errors.email && <span> {errors.email.message ? errors.email.message : 'This field is required'} </span>}\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            ref={register({ required: true })}\r\n            placeholder='Password' />\r\n          {errors.password && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            <input className='checkbox-label' disabled />\r\n            <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n        </div>\r\n\r\n        {isLoading ? <Loader type=\"ThreeDots\" color=\"rgb(255, 188, 73)\" height={80} width={80} /> : <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Entrar en mi cuenta' /> </p>  }\r\n      </form>\r\n\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { signup } from '../../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../../CSS/signupForm.css';\r\n\r\n\r\nexport const Signup = () => {\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const [isCompany, setisCompany] = useState(false);\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const handleClick = () => setisCompany(!isCompany);\r\n\r\n  const onSubmit = data => {\r\n    signup(data)\r\n      .then(function (result) {\r\n            \r\n        if (result.status === 200) {\r\n          history.push('/auth/user/token-sent')\r\n        } else {\r\n          setInfoSent(infoSent)\r\n        }\r\n      })\r\n      .catch(function (server) {\r\n\r\n        if (server.response.status !== 200) {\r\n\r\n          setError('Este email ya está en uso');\r\n          \r\n          return;\r\n        }\r\n\r\n      })\r\n    return error\r\n  };\r\n\r\n  return (\r\n    <div className='div-wrapper'>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para crear tu cuenta, completa este formulario<br />con tus datos de contacto.\r\n\r\n        </p>\r\n              <p className='p-signup'>No te preocupes, más adelante podrás añadir <br /> los datos de tu empresa.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Apellidos' />\r\n            </div>\r\n\r\n            {<span>{error}</span>}\r\n            <div>\r\n              {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                })} />\r\n            </div>\r\n\r\n            <div>\r\n              {errors.password && <span>Este campo es obligatorio</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Contraseña' />\r\n            </div>\r\n\r\n            <div>\r\n\r\n              {errors.repeatPassword && <span>{errors.repeatPassword.message ? errors.repeatPassword.message : 'Este campo es obligatorio'}</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"repeatPassword\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  validate: (value) => value === watch('password') || 'Las contraseñas deben coincidir'\r\n                })}\r\n                placeholder='Repite la Contraseña'\r\n\r\n              />\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <label >\r\n                <input className='checkbox-label' disabled />\r\n                <input className='checkbox-round' type=\"checkbox\" name=\"isCompany\" onClick={handleClick} ref={register} /> Eres una empresa de selección (Headhunter) ?\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <input className='checkbox-label' disabled />\r\n                <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='user-terms'>\r\n                Al pulsar el botón de 'Crear mi cuenta' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Crear mi cuenta' /> </p>\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { resendToken } from '../../api/auth.api';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../../CSS/signupmssg.css'\r\nimport '../../CSS/signupForm.css'\r\n\r\n\r\nexport const SignUpMssg = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false)\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [data, setData] = useState({})\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        resendToken(data.email).then(setData(data.email)).then(setInfoSent(true))\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid div-wrapper'>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            {!infoSent ?\r\n                <div className='card card-signupMssg col-lg-4 mx-auto'>\r\n                    <img className='tick-logo' src='/Anotación 2020-06-03 114022.png' alt='logo-gamanfy' />\r\n\r\n                    <div>\r\n                        <p className=' card-body p-signup mr-5 ml-5' style={{ fontWeight: '700' }}>Acabamos de crear tu cuenta</p>\r\n                        <p className=' dar-body p-signup mr-5 ml-5'> Para empezar a ver las mejores ofertas de empleo, verifica tu bandeja den entrada y haz click en el link que te hemos enviado para completar la validación.</p>\r\n                    </div>\r\n\r\n                    <p className='card-body p-signup user-terms-signupMssg mt-5'>¿No ves nuestro correo en tu bandeja de entrada? Prueba a <u>\r\n                        <input className='email-resend' type=\"submit\" onClick={showModal} value='Reenviar el email de verificación' /></u>\r\n                    </p>\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Header>\r\n                            <Modal.Title> <p className='p-signup'>Escriba su dirección de correo</p> </Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}> <input className='signup-fields ml-5 mt-3' type='email' name='email' placeholder='Email' ref={register({ required: true })} autoComplete='off' />\r\n                            <Modal.Body>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button onClick={hideModal} className='btn-danger p-1' style={{ borderRadius: '3px' }}>Cancel</button>\r\n                                <input type='submit' className='btn-cacc-su' value='Reenviar' />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n\r\n\r\n                </div> : <p style={{marginTop:'4em'}}>Nuevo email de confirmación enviado correctamente a {<input className='resend-email' type='text' name='userEmail' defaultValue={data} />}</p>}\r\n        </div>\r\n    )\r\n}\r\n","export const sectors = [\r\n    \r\n\"Seleccionar\", \"Administración Gubernamental\", \"Aeronáutica y aviación\", \"Agricultura\", \"Alimentación y bebidas\", \r\n\"Almacenamiento\", \"Arquitectura y planificación\", \"Artes escénicas\", \"Artesanía\", \"Artículos de consumo\", \"Artículos de lujo y joyas\", \r\n\"Artículos deportivos\", \"Atención a la salud mental\", \"Atención sanitaria y hospitalaria\", \"Automación industrial\", \"Banca\", \"Bellas artes\", \"Bienes inmobiliarios\", \"Biotecnología\", \"Construcción\", \"Consultoría\", \"Contabilidad\", \"Cosmética\", \"Deportes\", \"Derecho\", \"Desarrollo de programación\", \"Diseño\", \"Diseño gráfico\", \"Dotación y selección de personal\", \"Educación primaria/secundaria\", \"Energía renovable y medioambiente\", \"Enseñanza superior\", \"Entretenimiento\", \"Equipos informáticos\", \r\n'Filantropía', 'Fotografía', 'Ganadería'\r\n,'Gestión de inversiones'\r\n,'Gestión de organizaciones sin ánimo de lucro'\r\n,'Gestión educativa'\r\n,'Hostelería'\r\n,'Importación y exportación'\r\n,'Industria farmacéutica'\r\n,'Industria textil y moda'\r\n,'Ingeniería civil'\r\n,'Ingeniería industrial o mecánica'\r\n,'Internet'\r\n,'Investigación'\r\n,'Investigación de mercado'\r\n,'Judicial'\r\n,'Logística y cadena de suministro'\r\n,'Maquinaria'\r\n,'Marketing y publicidad'\r\n,'Materiales de construcción'\r\n,'Medicina alternativa'\r\n,'Minería y metalurgia'\r\n,'Museos e instituciones'\r\n,'Música'\r\n,'Nanotecnología'\r\n,'Ocio, viajes y turismo'\r\n,'Oficina legislativa'\r\n,'Organización política'\r\n,'Periódicos'\r\n,'Piscicultura'\r\n,'Plásticos'\r\n,'Producción alimentaria'\r\n,'Producción multimedia'\r\n,'Productos de papel y forestales'\r\n,'Productos químicos'\r\n,'Profesiones médicas'\r\n,'Recursos humanos'\r\n,'Relaciones públicas y comunicaciones'\r\n,'Resolución de conflictos por terceras partes'\r\n,'Restaurantes'\r\n,'Sanidad, bienestar y ejercicio'\r\n,'Sector automovilístico'\r\n,'Sector textil'\r\n,'Seguridad del ordenador y de las redes'\r\n,'Seguros'\r\n,'Servicio al consumidor'\r\n,'Servicio de información'\r\n,'Servicios de eventos'\r\n,'Servicios financieros'\r\n,'Servicios infraestructurales'\r\n,'Servicios jurídicos'\r\n,'Servicios médicos'\r\n,'Servicios medioambientales'\r\n,'Servicios para el individuo y la familia'\r\n,'Servicios públicos'\r\n,'Servicios y tecnologías de la información'\r\n, 'Software'\r\n,'Supermercados'\r\n,'Tecnología inalámbrica'\r\n,'Telecomunicaciones'\r\n,'Traducción y localización'\r\n,'Transporte por carretera o ferrocarril'\r\n,'Venta al por mayor'\r\n,'Venta al por menor'\r\n,'Veterinaria'\r\n,'Videojuegos'\r\n,'Vinos y licores'\r\n];\r\n\r\nexport const categories = ['Seleccionar', 'Empleado/a', 'Especialista', 'Mando intermedio', 'Dirección/ Gerencia', 'Consejo directivo', 'Socio/ Co-founder'];\r\n\r\nexport const contracts = ['Seleccionar', 'Autónomo', 'Contrato de duración determinada', 'De relevo', 'Fijo discontinuo', 'Formativo', 'Indefinido', 'A tiempo parcial', 'Otros contratos'];\r\n\r\nexport const experience = ['Seleccionar', 'No requerida', 'Al menos 1 año', 'Entre 1 - 2 años', 'Entre 2 - 3 años', 'Ente 3 - 4 años', 'Entre 4 - 5 años', 'Más de 5 años', 'Más de 10 años'];\r\n\r\nexport const studies = ['Seleccionar', 'Sin estudios', 'Educación Secundaria Obligatoria', 'Formación Profesional Grado Medio', 'Ciclo formativo Grado Medio', 'Bachillerato,', 'Formación Profesional Grado Superior', 'Ciclo formativo Grado Superior', 'Diplomatura', 'Ingienería técnica', 'Grado', 'Licenciatura', 'Ingienería superior', 'Postagrado', 'Doctorado'];\r\n\r\nexport const numberOfEmployees = ['0-1 empleados', '2-10 empleados', '11-50 empleados', '51-200 empleados', '201-500 empleados', '501-1000 empleados', '1001-5000 empleados', '1001-5000 empleados', '5001-10.000 empleados', 'Más de 10.1001 empleados'];\r\n\r\nexport const howFoundCandidate = [\r\n    'Seleccionar',\r\n    'Tengo o he tenido relación laboral con el candidato (compañero, superior, reporte, cliente o proveedor).',\r\n    'Es un contacto de mi networking al que conozco personalmente.', 'Es un contacto de mi networking al que conozco personalmente.',\r\n    'Es un contacto de mi networking al que no conozco personalmente, pero he validado su encaje.',\r\n    'Es un contacto de mi networking al que no conozco personalmente, pero he validado su encaje.',\r\n    'Lo he buscado por Linkedin o otra pagina y he validado su encaje.', 'Lo he buscado por Linkedin o otra pagina y he validado su encaje.'\r\n\r\n]\r\n\r\nexport const availability = ['Seleccionar', 'Inmediato', '15 días', '1 mes', '2 meses', '3 meses', 'Otra'];\r\nexport const currentSituation = ['Seleccionar', 'Empleado', 'Desempleado']","import React, { useState, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { sectors, numberOfEmployees } from '../../FolderForSelects/htmlSelects';\r\nimport countries from '../../countries.json';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport '../../CSS/signupForm.css';\r\n\r\n\r\nexport const UserCompleteProfile = (props) => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { toCompleteUser, toCompleteCompanyUser } = authContext;\r\n  const { register, handleSubmit } = useForm();\r\n  const [countryNameState, setCountryNameState] = useState(countries.map(country => country.name.common));\r\n  const [isCompany, setIsCompany] = useState(props.match.params)\r\n  const [hasExp, setHasexp] = useState(false);\r\n  const [document, setDocument] = useState([\"CIF\", \"NIF\"]);\r\n  const [sector, setSector] = useState(sectors);\r\n  const [employees, setEmployees] = useState(numberOfEmployees);\r\n  const [handler, setHandler] = useState(false);\r\n\r\n\r\n  const docType = document.map(docType => docType);\r\n  const sectorType = sector.map(sectorType => sectorType);\r\n  const countryName = countryNameState.map(countryName => countryName);\r\n  const employeesMap = employees.map(employeesMap => employeesMap);\r\n\r\n  const handleDocType = (e) => setDocument(docType);\r\n  const handleSector = (e) => setSector(sectorType);\r\n  const handleNumberOfEmployees = (e) => setEmployees(employeesMap);\r\n  const handleCountryName = (e) => setCountryNameState(countryName);\r\n  const handleTrueOrFalse = () => setHandler(!handler);\r\n\r\n  const onSubmit = (data) => {\r\n   toCompleteUser(props.match.params.userId, props.match.params.isCompany, data )\r\n  };\r\n\r\n  const onSubmitCompanyUser = (data) => {\r\n    toCompleteCompanyUser(props.match.params.userId, props.match.params.isCompany, data)\r\n    setIsCompany(true);\r\n  }\r\n  const handleClick = () => setHasexp(!hasExp);\r\n\r\n  const handleSubmitCompleteProf = (e) => {\r\n    onSubmit(e.persist())\r\n    onSubmitCompanyUser(e.persist())\r\n  };\r\n\r\n  return (\r\n    <div className='div-wrapper'>\r\n      {isCompany.isCompany === 'true' ?\r\n        (\r\n          <>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            <div>\r\n              <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmitCompanyUser)} autoComplete='off'>\r\n              \r\n              <div>\r\n                  <p className='p-signup'>\r\n                    Para completar tu cuenta, completa este formulario<br />con tus datos.</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"companyName\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Nombre de la empresa' />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"taxId\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Razón Social' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Teléfono de contacto' />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"contactPerson\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Persona de Contacto' />\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Seleccione su tipo de documento\r\n              <select\r\n                      name='documentType'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleDocType(e)}\r\n                    >\r\n                      {\r\n                        docType.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"documentNumber\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número de Documento' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Número de trabajadores\r\n              <select\r\n                      name='numberOfEmployees'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleNumberOfEmployees(e)}\r\n                    >\r\n                      {\r\n                        employeesMap.map((doc, key) => {\r\n                          return <option key={key} value={key}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    País\r\n              <select\r\n                      name='countryName'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleCountryName(e)}\r\n                    >\r\n                      {\r\n                        countryName.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"province\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Provincia' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"municipality\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Población' />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='ciudad' />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"website\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Página web' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Seleccione su sector\r\n              <select\r\n                      name='sector'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleSector(e)}\r\n                    >\r\n                      {\r\n                        sectorType.map((doc, key) => {\r\n\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Dirección\r\n                </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Calle' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"number\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zip\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Código postal' />\r\n                </div>\r\n\r\n                <div>\r\n              <p className='user-terms'>\r\n               <input type='checkbox' name='isCompleted' onClick={handleTrueOrFalse} ref={register({required: true})}/> Al pulsar el botón de 'Completar mi perfil' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n                <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Completar mi perfil' /> </p>\r\n\r\n              </form>\r\n            </div>\r\n          </>\r\n        ) : (\r\n\r\n          <>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            <div>\r\n              <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n              \r\n                <div>\r\n                  <p className='p-signup'>\r\n                    Para completar tu cuenta, completa este formulario<br />con tus datos.\r\n</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Teléfono de contacto' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"urlLinkedin\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='URL Linkedin' />\r\n                </div>\r\n                <div>\r\n                  <label>Fecha de Nacimiento\r\n                </label>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"birthDate\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Fecha de Nacimiento' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    País\r\n              <select\r\n                      name='countryName'\r\n                      className='form-control signup-fields mx-auto'\r\n                      ref={register({ required: true })}\r\n                      onChange={e => handleCountryName(e)}\r\n                    >\r\n                      {\r\n                        countryName.map((doc, key) => {\r\n                          return <option key={key} value={doc}>{doc}</option>;\r\n                        })\r\n\r\n                      }\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Ciudad' />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>\r\n                    Dirección\r\n                </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Calle' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"number\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Número' />\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zip\"\r\n                    className='form-control signup-fields mx-auto'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Código postal' />\r\n                </div>\r\n                <div>\r\n                  <label >\r\n                    <input className='checkbox-label' disabled />\r\n                    <input className='checkbox-round' type=\"checkbox\" name=\"hasExp\" onClick={handleClick} ref={register} /> Tiene experiencia?\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n              <p className='user-terms'>\r\n               <input type='checkbox' name='isCompleted' onClick={handleTrueOrFalse} ref={register({required: true})}/> Al pulsar el botón de 'Completar mi perfil' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n                <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Completar mi perfil' onClick={handleSubmitCompleteProf} /> </p>\r\n\r\n              </form>\r\n            </div>\r\n          </>\r\n\r\n\r\n        )}\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { postConfirmationToken } from '../../api/auth.api';\r\nimport './UserCompleteProfile'\r\nimport { Link } from 'react-router-dom';\r\nimport '../../CSS/signupmssg.css'\r\n\r\nclass ConfirmationToken extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props)\r\n\r\n\r\n        this.state = {\r\n            email: '',\r\n            userToken: this.props.match.params.userToken,\r\n            userId: this.props.match.params.userId,\r\n            isCompany: this.props.match.params.isCompany,\r\n            infoSent: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { userId, email, userToken, isCompany } = this.state;\r\n\r\n        postConfirmationToken(userId, userToken, isCompany, email)\r\n            .then(response => {\r\n                console.log(response)\r\n                this.setState({\r\n                    infoSent: true\r\n                })\r\n                    .then(this.history.push(`/auth/${this.state.userId}/${this.state.isCompany}/complete-profile`))\r\n            })\r\n    };\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        this.handleFormSubmit(e)\r\n        this.setState({\r\n            infoSent: true\r\n        })\r\n    }\r\n    render() {\r\n        const { email, userToken, userId, isCompany, infoSent } = this.state;\r\n        return (\r\n\r\n            <div className='background-color div-wrapper'>\r\n                {infoSent === false ? (\r\n\r\n                    <div className=\"col-sm-12 my-auto\">\r\n                        <img className='gamanfy-logo mx-auto' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n                        <div className='col-sm-12 h-100 d-lg-flex'>\r\n                            <div className=\"mx-auto mt-5\" style={{ height: '40vh' }}>\r\n\r\n                                <form className=\"form-group form-token col-sm-12 d-table bg-white rounded\" onSubmit={this.handleFormSubmit}>\r\n\r\n                                    <div>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control mb-3 mt-3\"\r\n                                            id=\"formGroupExampleInput\"\r\n                                            placeholder=\"E-mail @\"\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n\r\n\r\n\r\n                                        <input\r\n                                            type=\"hidden\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput2\"\r\n                                            name='userToken'\r\n                                            defaultValue={userToken}\r\n\r\n                                        />\r\n                                        <input\r\n                                            type=\"hidden\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput2\"\r\n                                            name='userId'\r\n                                            defaultValue={userId}\r\n\r\n                                        />\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <>\r\n                                        <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Verificar mi cuenta' onClick={this.handleClick} /> </p>\r\n\r\n                                    </>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div className='d-flex justify-content-center mt-5'>\r\n\r\n                            <Link className='p-cacc' to={`/auth/user/${this.state.userId}/${isCompany}/complete-profile`}>\r\n                                <img className='gamanfy-logo mx-auto' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n                                <button className='btn-cacc-su w-100 mt-5'>\r\n                                    Accede a la plataforma después de haber rellenado los últimos datos de tu perfil (nada más que 20 segundos).\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n\r\n\r\n                    )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmationToken","import { axiosInstance } from './api';\r\n\r\nexport const getOffersDashBoard = (data) => {\r\n    return axiosInstance.get('/offers/dashboard', data)\r\n};\r\n\r\nexport const postOffer = (companyId, data) => {\r\n    return axiosInstance.post(`/offers/${companyId}/post-job-offer`, data);\r\n};\r\n\r\nexport const editOffer = (companyId, offerId, data) => {\r\n    return axiosInstance.put(`/offers/${companyId}/${offerId}/edit-offer`, data)\r\n};\r\n\r\nexport const deleteOffer = (companyId, offerId, data) => {\r\n    return axiosInstance.post(`/offers/${companyId}/${offerId}/delete-offer`, data)\r\n};\r\n\r\nexport const offerDetails = (id) => {\r\n    return axiosInstance.get(`/offers/offer-details/${id}`);\r\n}\r\n","import { axiosInstance } from './api';\r\n\r\nexport const userDashboard = (id, token) => {\r\n  return axiosInstance.get(`auth/user/${id}/dashboard`, { headers: { Authorization: token }})\r\n}\r\n\r\nexport const companyDashboard = (id, token) => {\r\n  return axiosInstance.get(`auth-co/company/${id}/dashboard`, { headers: { Authorization: token }})\r\n}\r\n\r\nexport const getUserData = (id) => {\r\n  return axiosInstance.get(`/auth/user/getData/${id}`)\r\n}\r\n\r\nexport const getCompanyData =(id) => {\r\n  return axiosInstance.get(`/offers/getData/${id}`)\r\n}\r\nexport const handleUpload = (theFile) => {\r\n    return axiosInstance.post(`/auth/upload`, theFile)  \r\n}\r\n\r\nexport const editUserProfile = (id, token) => {\r\n  return axiosInstance.put(`/auth/user/${id}/edit-profile`, { headers: { Authorization: token }})\r\n}\r\n\r\nexport const editCompanyProfile = (id, data, token) => {\r\n  return axiosInstance.post(`/auth-co/company/${id}/edit-profile`, data, { headers: { Authorization : token }})\r\n}\r\n\r\n","export const languageOptions = [\r\n/* \r\n    A1 (Basico)\r\nA2 (Basico nivel 2)\r\nB1 (intermediario)\r\nB2 (Avanzado)\r\nC1 (Profesional)\r\nC2 (Nativo) */\r\n\r\n    {\r\n        value: \"Español A1\", label:\"Español A1\"\r\n    },\r\n    {\r\n        value: \"Español A2\", label:\"Español A2\"\r\n    },\r\n    {\r\n        value: \"Español B1\", label:\"Español B1\"\r\n    },\r\n    {\r\n        value: \"Español B2\", label:\"Español B2\"\r\n    },\r\n    {\r\n        value: \"Español C1\", label:\"Español C1\"\r\n    },\r\n    {\r\n        value: \"Español C2\", label:\"Español C2\"\r\n    },\r\n    {\r\n        value: \"Catalán \", label:\"Catalán A1 \"\r\n    },\r\n    {\r\n        value: \"Catalán\", label:\"Catalán A2\"\r\n    },\r\n    {\r\n        value: \"Catalán\", label:\"Catalán B1\"\r\n    },\r\n    {\r\n        value: \"Catalán\", label:\"Catalán B2\"\r\n    },\r\n    {\r\n        value: \"Catalán\", label:\"Catalán C1\"\r\n    },\r\n    {\r\n        value: \"Catalán\", label:\"Catalán C2 \"\r\n    },\r\n    {\r\n        value: \"Inglés\", label: \"Inglés A1\"\r\n    },\r\n    {\r\n        value: \"Inglés\", label: \"Inglés A2\"\r\n    },\r\n    {\r\n        value: \"Inglés\", label: \"Inglés B1\"\r\n    },\r\n    {\r\n        value: \"Inglés\", label: \"Inglés B2\"\r\n    },\r\n    {\r\n        value: \"Inglés\", label: \"Inglés C1\"\r\n    },\r\n    {\r\n        value: \"Inglés\", label: \"Inglés C2\"\r\n    },\r\n    {\r\n        value: \"Hindi\", label: \"Hindi A1\"\r\n    },\r\n    {\r\n        value: \"Hindi\", label: \"Hindi A2\"\r\n    },\r\n    {\r\n        value: \"Hindi\", label: \"Hindi B1\"\r\n    },\r\n    {\r\n        value: \"Hindi\", label: \"Hindi B2\"\r\n    },\r\n    {\r\n        value: \"Hindi\", label: \"Hindi C1\"\r\n    },\r\n    {\r\n        value: \"Hindi\", label: \"Hindi C2\"\r\n    },\r\n    {\r\n        value: \"Árabe\", label: \"Árabe A1\"\r\n    },\r\n    {\r\n        value: \"Árabe\", label: \"Árabe A2\"\r\n    },\r\n    {\r\n        value: \"Árabe\", label: \"Árabe B1\"\r\n    },\r\n    {\r\n        value: \"Árabe\", label: \"Árabe B2\"\r\n    },\r\n    {\r\n        value: \"Árabe\", label: \"Árabe C1\"\r\n    },\r\n    {\r\n        value: \"Árabe\", label: \"Árabe C2\"\r\n    },\r\n    {\r\n        value: \"Portugués\", label: \"Portugués A1\"\r\n    },\r\n    {\r\n        value: \"Portugués\", label: \"Portugués A2\"\r\n    },\r\n    {\r\n        value: \"Portugués\", label: \"Portugués B1\"\r\n    },\r\n    {\r\n        value: \"Portugués\", label: \"Portugués B2\"\r\n    },\r\n    {\r\n        value: \"Portugués\", label: \"Portugués C1\"\r\n    },\r\n    {\r\n        value: \"Portugués\", label: \"Portugués C2\"\r\n    },\r\n    {\r\n        value: \"Ruso\", label: \"Ruso A1\"\r\n    },\r\n    {\r\n        value: \"Ruso\", label: \"Ruso A2\"\r\n    },\r\n    {\r\n        value: \"Ruso\", label: \"Ruso B1\"\r\n    },\r\n    {\r\n        value: \"Ruso\", label: \"Ruso B2\"\r\n    },\r\n    {\r\n        value: \"Ruso\", label: \"Ruso C1\"\r\n    },\r\n    {\r\n        value: \"Ruso\", label: \"Ruso C2\"\r\n    },\r\n    {\r\n        value: \"Chino\", label: \"Chino A1\"\r\n    },\r\n    {\r\n        value: \"Chino\", label: \"Chino A2\"\r\n    },\r\n    {\r\n        value: \"Chino\", label: \"Chino B1\"\r\n    },\r\n    {\r\n        value: \"Chino\", label: \"Chino B2\"\r\n    },\r\n    {\r\n        value: \"Chino\", label: \"Chino C1\"\r\n    },\r\n    {\r\n        value: \"Chino\", label: \"Chino C2\"\r\n    },\r\n    {\r\n        value: \"Japonés\", label: \"Japonés A1\"\r\n    },\r\n    {\r\n        value: \"Japonés\", label: \"Japonés A2\"\r\n    },\r\n    {\r\n        value: \"Japonés\", label: \"Japonés B1\"\r\n    },\r\n    {\r\n        value: \"Japonés\", label: \"Japonés B2\"\r\n    },\r\n    {\r\n        value: \"Japonés\", label: \"Japonés C1\"\r\n    },\r\n    {\r\n        value: \"Bengalí\", label: \"Bengalí C2\"\r\n    },\r\n    {\r\n        value:\"Alemán\", label:\"Alemán A1\"\r\n    },\r\n    {\r\n        value:\"Alemán\", label:\"Alemán A2\"\r\n    },\r\n    {\r\n        value:\"Alemán\", label:\"Alemán B1\"\r\n    },\r\n    {\r\n        value:\"Alemán\", label:\"Alemán B2\"\r\n    },\r\n    {\r\n        value:\"Alemán\", label:\"Alemán C1\"\r\n    },\r\n    {\r\n        value:\"Alemán\", label:\"Alemán C2\"\r\n    },\r\n    {\r\n        value: \"Francés\", label: \"Francés A1\"\r\n    },\r\n    {\r\n        value: \"Francés\", label: \"Francés A2\"\r\n    },\r\n    {\r\n        value: \"Francés\", label: \"Francés B1\"\r\n    },\r\n    {\r\n        value: \"Francés\", label: \"Francés B2\"\r\n    },\r\n    {\r\n        value: \"Francés\", label: \"Francés C1\"\r\n    },\r\n    {\r\n        value: \"Francés\", label: \"Francés C2\"\r\n    },\r\n    {\r\n        value: \"Otro\", label: \"Otro\"\r\n    }\r\n]","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { sendRecommendation } from '../../api/recommendations';\r\nimport { getUserData } from '../../api/users';\r\nimport { howFoundCandidate, availability, currentSituation } from '../../FolderForSelects/htmlSelects';\r\nimport { languageOptions } from '../../FolderForSelects/languageOptions';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport '../../CSS/signupmssg.css';\r\nimport '../../CSS/signupForm.css';\r\n\r\nexport const SendRecommendation = (wholeProps) => {\r\n    \r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [infoSent, setInfoSent] = useState(true);\r\n    const animatedComponents = makeAnimated();\r\n    const { register, errors, handleSubmit } = useForm();\r\n    const history = useHistory();\r\n    const [, setData] = useState([]);\r\n    const [isCompany, setIsCompany] = useState(false);\r\n    const [foundCandidate, setHowFoundCandidate] = useState(howFoundCandidate);\r\n    const [availab, setAvailab] = useState(availability);\r\n    const [currentSit, setCurrentSit] = useState(currentSituation);\r\n    const [language, setLanguage] = useState([]);\r\n    const [copySuccess, setCopysuccess] = useState(false);\r\n    const [inputToCopy, setInputToCopy] = useState('')\r\n\r\n\r\n    const foundCandidateMap = foundCandidate.map(foundCandidateMap => foundCandidateMap);\r\n    const availabilityMap = availab.map(availabilityMap => availabilityMap);\r\n    const currentSitMap = currentSit.map(currentSitMap => currentSitMap)\r\n\r\n    const handleFoundCandidate = () => setHowFoundCandidate(foundCandidateMap);\r\n    const handleAvailability = () => setAvailab(availabilityMap);\r\n    const handleCurrentSit = () => setCurrentSit(currentSitMap);\r\n\r\n    let languageOptionsToSet = languageOptions.map((lang, index) => {\r\n        return {\r\n            label: lang.label,\r\n            value: lang.value,\r\n            key: index,\r\n        }\r\n    });\r\n\r\n    const customTheme = (theme) => {\r\n        return {\r\n            ...theme,\r\n            colors: {\r\n                ...theme.colors,\r\n                primary25: 'rgb(255, 188, 73)',\r\n                primary: 'blue'\r\n            }\r\n        }\r\n    }\r\n\r\n    const copyCodeToClipboard = () => {\r\n        inputToCopy.select();\r\n        document.execCommand(\"copy\");\r\n        setCopysuccess(!copySuccess);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const any = async () => {\r\n\r\n            getUserData(wholeProps.userId).then(apiRes => {\r\n                setData(apiRes.data);\r\n                if (apiRes.data.isCompany === true) {\r\n                    setIsCompany(true);\r\n                } else {\r\n                    return null\r\n                }\r\n\r\n            })\r\n        }\r\n        any()\r\n    }, [wholeProps.userId], infoSent);\r\n    \r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n      };\r\n      const hideModal = () => {\r\n        setIsOpen(false);\r\n      };\r\n    \r\n    const onSubmit = (data) => {\r\n        \r\n        sendRecommendation(wholeProps.companyId, wholeProps.offerId, wholeProps.userId, data)\r\n            .then(function (result) {\r\n\r\n                if (result.status === 200) \r\n                    setInfoSent(!infoSent)\r\n                    history.push(`/user/${wholeProps.userId}/dashboard`)\r\n            })\r\n            .catch(function (error) {\r\n\r\n                if (error.response.status !== 200) {\r\n\r\n                    setInfoSent(false);\r\n                    \r\n                };\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n            {\r\n                isCompany === true && isCompany !== null ?\r\n                    <>\r\n                        {/* <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' /> */}\r\n                        <div>\r\n                            <form className='signUp-form send-rec-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n                                <div>\r\n                                    <p className='p-signup'>\r\n                                        ¿Cómo has encontrado al candidato?\r\n                                    </p>\r\n\r\n                                </div>\r\n                                <label>\r\n\r\n                                    <select\r\n                                        name='howFoundCandidate'\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        onChange={e => handleFoundCandidate(e)}\r\n                                    >\r\n                                        {\r\n                                            foundCandidateMap.map((doc, key) => {\r\n\r\n                                                return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                                            })\r\n\r\n                                        }\r\n                                    </select>\r\n                                </label>\r\n                                <div>\r\n                                    <p className='p-signup'>\r\n                                        Datos del candidato\r\n                                    </p>\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"recommendedFirstName\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Nombre del Recomendado' />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"recommendedLastName\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Apellidos del Recomendado' />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"recommendedPhoneNumber\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Número de Teléfono' />\r\n                                </div>\r\n\r\n                                <div>\r\n                             \r\n                                    {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"recommendedEmail\"\r\n                                        placeholder='Escribe su email'\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({\r\n                                            required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                                        })} />\r\n                                </div>\r\n\r\n                                <div></div> \r\n                                \r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"recommendedLinkedin\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        placeholder='URL Linkedin' \r\n                                        ref={register({ required: false })}\r\n                                        />\r\n                                </div>       \r\n                                <div>\r\n                                    <p className='p-signup'>\r\n                                        Informe sobre el candidato\r\n                                    </p>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"candidateEducation\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='¿Qué formación tiene el candidato? '\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n                                <>\r\n                                    <div>\r\n                                        <label>¿Qué idiomas habla?</label>\r\n                                        <Select\r\n\r\n                                            closeMenuOnSelect={false}\r\n                                            theme={customTheme}\r\n                                            components={animatedComponents}\r\n                                            placeholder='Seleccionar'\r\n                                            isMulti\r\n                                            isSearchable\r\n                                            options={languageOptionsToSet}\r\n                                            onChange={setLanguage}\r\n                                            noOptionsMessage={() => 'No existen más opciones'}\r\n                                            name=\"language\"\r\n                                            value={language}\r\n                                        />\r\n\r\n                                        {language !== null && (<input name='language' type='hidden' ref={register()} onChange={setLanguage} value={JSON.stringify(language.map(lang => lang.value))} />)}\r\n                                    </div>\r\n                                </>\r\n\r\n                                <div className='mt-3'>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"candidateLocation\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: false })}\r\n                                        placeholder='¿Donde se localiza el candidato?' />\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"experiences\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='¿Cuáles son sus experiencias más importantes? Destacar empresa, tiempo, posición y responsabilidades, etc... '\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"similiarExp\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Describe su experiencia en un puesto similar al ofertado '\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"ownDescription\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='¿Si tuvieras que describirle ¿Cuál dirías que son sus 3 rasgos clave?'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"motivations\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='¿Cuales son sus motivaciones para cambiar de puesto de trabajo?'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p className='p-signup'>\r\n                                        ¿Cuál es su disponibilidades para cambiar de puesto de trabajo?\r\n                                    </p>\r\n\r\n                                </div>\r\n                                <label>\r\n\r\n                                    <select\r\n                                        name='availability'\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        onChange={e => handleAvailability(e)}\r\n                                    >\r\n                                        {\r\n                                            availabilityMap.map((doc, key) => {\r\n\r\n                                                return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                                            })\r\n\r\n                                        }\r\n                                    </select>\r\n                                </label>\r\n\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"moneyExpec\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='¿Cuáles son sus expectativas salariales?'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p className='p-signup'>\r\n                                        Describir situación actual\r\n                                    </p>\r\n\r\n                                </div>\r\n                                <label>\r\n                                    <select\r\n                                        name='currentSituation'\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        onChange={e => handleCurrentSit(e)}\r\n                                    >\r\n                                        {\r\n                                            currentSitMap.map((doc, key) => {\r\n\r\n                                                return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                                            })\r\n\r\n                                        }\r\n                                    </select>\r\n                                </label>\r\n\r\n                                <div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"otherAspects\"\r\n                                        className='form-control signup-fields fields-rec mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='¿Cuáles son sus expectativas salariales?'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type='hidden' value={wholeProps.offerId} name='offerId' />\r\n                                <button type=\"submit\" onClickCapture={hideModal} className='btn-cacc-su d-block mx-auto'>Recomendar</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        {/* <img className='gamanfy-logo d-block ml-4' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' /> */}\r\n\r\n                        <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n                            <div>\r\n                                <p className='p-signup' style={{ fontSize: '1.2em' }}>\r\n                                    ¿Conoces a la persona ideal para este puesto?\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"recommendedFirstName\"\r\n                                    className='form-control signup-fields  mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    placeholder='Nombre del Recomendado' />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"recommendedLastName\"\r\n                                    className='form-control signup-fields  mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    placeholder='Apellidos del Recomendado' />\r\n                            </div>\r\n\r\n                            <div>\r\n                                {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"recommendedEmail\"\r\n                                    placeholder='Email del recomendado'\r\n                                    className='form-control signup-fields  mx-auto'\r\n                                    ref={register({\r\n                                        required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                                    })} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"recommendedPhoneNumber\"\r\n                                    className='form-control signup-fields  mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    placeholder='Número de Teléfono' />\r\n                            </div>\r\n\r\n                            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Recomendar' onClickCapture={hideModal}/> </p>\r\n\r\n                            <div>\r\n                                <p className='p-signup'>\r\n                                    O si lo prefieres puedes compartir esta oferta por otros medios:<br />\r\n                                    <i className=\"fab fa-facebook-square icon-rec\"></i> <i className=\"fab fa-twitter icon-rec\"></i> <i className=\"fab fa-whatsapp icon-rec\"></i> <i className=\"fab fa-telegram icon-rec\"></i>\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    ref={(inputToCopy) => setInputToCopy(inputToCopy)}\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    defaultValue={`${process.env.REACT_APP_CLIENT}/offer-details/${wholeProps.offerId}`} \r\n                                    \r\n                                    />\r\n                                \r\n                                   <i className=\"far fa-clone\" onClick={copyCodeToClipboard} onClickCapture={showModal}></i>\r\n                                     \r\n                                 {\r\n                                     copySuccess === true ? <Modal className='modalBody-sendRec' centered show={isOpen} onHide={hideModal}><Modal.Body className='modal-body-sendRec'> <p className='p-signup'>Mensaje Copiado Correctamente al Portapapeles</p></Modal.Body></Modal> : null\r\n                                 }\r\n                            </div>\r\n\r\n                            <div>\r\n                                <p className='p-signup' style={{ fontSize: '.8em' }}>\r\n                                    ¿Aún no conoces a nadie para recomendar? ¡Tal vez el candidato ideal está entre <br />\r\n                                    tus contactos de Linkedin!\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <p className='p-signup' style={{ fontSize: '.8em' }}>\r\n                                    <i className=\"fab fa-linkedin\"></i> <u> <a href='https://www.linkedin.com/feed/' className='linkedin-link'>Buscar al candidato ideal entre tus contactos de Linkedin</a></u>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { axiosInstance } from './api';\r\n\r\nexport const recommendationsDashboard = (id) => {\r\n    return axiosInstance.get(`/recommend/${id}/dashboard`)\r\n}\r\n\r\nexport const sendRecommendation = (companyId, offerId, userId, data) => {\r\n    return axiosInstance.post(`/recommend/${companyId}/${offerId}/${userId}`, data)\r\n}\r\n\r\nexport const rejectRecommendation = (id) => {\r\n    return axiosInstance.post(`/recommend/reject-rec/${id}`);\r\n} \r\n\r\nexport const sendCompanyRecommendation = (id, data) => {\r\n    return axiosInstance.post(`/recommend/${id}`, data);\r\n}\r\n\r\nexport const deleteRecommendation = (userId, recommendationId, data) => {\r\n    return axiosInstance.post(`/recommend/user/delete-recommendation/${userId}/${recommendationId}`, data)\r\n}\r\n\r\nexport const inProcessRecs =(offerId) =>{\r\n    return axiosInstance.get(`/recommend/${offerId}/inProcess`)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { getOffersDashBoard } from '../../api/offers';\r\nimport '../../CSS/userDashboard.css';\r\nimport { sectors } from '../../FolderForSelects/htmlSelects';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { SendRecommendation } from '../UserPages/SendRecommendation';\r\n\r\nexport const OffersDashboard = (props) => {\r\n    const [sector, setSector] = useState([]);\r\n    const [offers, setOffers] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [city, setCity] = useState([]);\r\n    const [dataFiltered, setDataFiltered] = useState();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        getOffersDashBoard().then(apiRes => {\r\n            setOffers(apiRes.data.allOffers);\r\n            setCity(apiRes.data.allOffers.map(offer => (offer.addressId.cityForOffer.charAt(0).toUpperCase() + offer.addressId.cityForOffer.slice(1))))\r\n            setIsLoading(false)\r\n        });\r\n\r\n        getOffersDashBoard();\r\n        setSector(sectors);\r\n\r\n\r\n    }, []);\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n\r\n    const noRepCities = [...new Set(city)];\r\n\r\n    let filterActive = offers.filter((data) => data.jobOfferData.jobName.toLocaleLowerCase().includes(query.toLocaleLowerCase()))\r\n    let filterBySectorAndCity = filterActive.filter((data) => data ? data.addressId.cityForOffer === dataFiltered || data.sectorId.sector === dataFiltered : null)\r\n    let filterAllAndActiveFilter = filterBySectorAndCity.filter((data) => data.jobOfferData.jobName.toLocaleLowerCase().includes(query.toLocaleLowerCase()))\r\n\r\n\r\n    const handleEvent = (e) => {\r\n        if (e.target.value === 'Muestra todas') {\r\n            setDataFiltered(offers)\r\n\r\n        } else {\r\n            setDataFiltered(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid d-flex bg-white'>\r\n            {\r\n                isLoading ?\r\n                    <Loader className='loader' type=\"ThreeDots\" color=\"rgb(255, 188, 73)\" height={80} width={80} />\r\n                    :\r\n                    <div className='mx-auto bg-white offers-wrapper mb-5'>\r\n                        <h3 className='offersh3 mt-3'>Ofertas de Empleo</h3>\r\n                        <div className=\"filterOffers\">\r\n                            <span className=\"material-icons\">\r\n                                search\r\n                        </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"activeFilter\"\r\n                                value={query}\r\n                                placeholder='Filtrar por puesto'\r\n                                onChange={(e) => setQuery(e.target.value)}\r\n                                name=\"query\"\r\n                            />\r\n                            <select className=\"activeFilter\" defaultValue='Ciudad' onChange={handleEvent}>\r\n                                <option disabled={true}> Ciudad</option>\r\n                                <option> Muestra todas</option>\r\n\r\n                                {\r\n                                    noRepCities.map((doc, index) => {\r\n                                        return <option key={index}>{doc}</option>\r\n                                    })\r\n\r\n                                }\r\n                            </select>\r\n                            <select className=\"activeFilter\" defaultValue='Sector' onChange={handleEvent}>\r\n                                <option style={{ color: 'grey' }} disabled={true}> Sector</option>\r\n                                <option> Muestra todas</option>\r\n\r\n                                {\r\n                                    sector.map((doc, index) => {\r\n                                        return <option key={index}>{doc}</option>\r\n                                    })\r\n\r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                        {filterAllAndActiveFilter.length > 0\r\n\r\n                            ?\r\n                            filterAllAndActiveFilter.map((doc, index) => {\r\n                                const wholeProps = {\r\n                                    companyId: doc.companyData.companyId,\r\n                                    offerId: doc._id,\r\n                                    userId: props.match.params.userId\r\n                                }\r\n\r\n                                return (\r\n                                    <div className='card card-offers' key={index}>\r\n                                        <ul className='offersList'>\r\n                                            <img className='offer-pic' src={doc.imgPath} alt='' />\r\n                                            <span className='mr-2 btn btn-light' key={index.doc} >{doc.moneyPerRec}</span>\r\n                                            <span className='ml-2 btn btn-light' key={index.doc} >+ {doc.scorePerRec} puntos</span>\r\n                                            <Link to={`/offer-details/${doc._id}`}> <li key={index.doc} className='font-weight600 link-offer-details'>{doc.jobOfferData.jobName}</li></Link>\r\n                                            <li key={index.doc} className='font-weight600'>{doc.companyData.companyName}</li>\r\n                                            {\r\n                                                doc.showMoney === true ?\r\n                                                    <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} | {doc.retribution.minGrossSalary} </li>\r\n                                                    :\r\n                                                    <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} </li>\r\n                                            }\r\n                                        </ul>\r\n                                        <button className='recommend-btn' onClick={showModal}>Recomendar</button>\r\n                                        <Modal className='recommend-modal' show={isOpen} onHide={hideModal}>\r\n                                            <Modal.Body scrollable='true'>\r\n                                                <SendRecommendation {...wholeProps} />\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n                            :\r\n\r\n                            dataFiltered === offers\r\n\r\n                                ?\r\n                                filterActive.map((doc, index) => {\r\n\r\n                                    const wholeProps = {\r\n                                        companyId: doc.companyData.companyId,\r\n                                        offerId: doc._id,\r\n                                        userId: props.match.params.userId\r\n                                    }\r\n                                    return (\r\n                                        <div className='card card-offers bg-white' key={index}>\r\n                                            <ul className='offersList'>\r\n                                                <img className='offer-pic' src={doc.imgPath} alt='' />\r\n                                                <span className='mr-2 btn btn-light' key={index.doc} >{doc.moneyPerRec}</span>\r\n                                                <span className='ml-2 btn btn-light' key={index.doc} >+ {doc.scorePerRec} puntos</span>\r\n                                                <Link to={`/offer-details/${doc._id}`}><li key={index.doc} className='font-weight600 link-offer-details' >{doc.jobOfferData.jobName}</li></Link>\r\n                                                <li key={index.doc} className='font-weight600'>{doc.companyData.companyName}</li>\r\n                                                {\r\n                                                    doc.showMoney === true ?\r\n                                                        <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} | {doc.retribution.minGrossSalary} </li>\r\n                                                        :\r\n                                                        <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract}</li>\r\n\r\n                                                }\r\n                                            </ul>\r\n                                            <button className='recommend-btn' onClick={showModal}>Recomendar</button>\r\n                                            <Modal className='recommend-modal' show={isOpen} onHide={hideModal}>\r\n                                                <Modal.Body scrollable='true'>\r\n                                                    <SendRecommendation {...wholeProps} />\r\n                                                </Modal.Body>\r\n                                            </Modal>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n\r\n                                :\r\n\r\n                                dataFiltered === undefined\r\n                                    ?\r\n                                    filterActive.map((doc, index) => {\r\n                                        const wholeProps = {\r\n                                            companyId: doc.companyData.companyId,\r\n                                            offerId: doc._id,\r\n                                            userId: props.match.params.userId\r\n                                        }\r\n                                        return (\r\n                                            <div className='card card-offers' key={index}>\r\n                                                <ul className='offersList'>\r\n                                                    <img className='offer-pic' src={doc.imgPath} alt='' />\r\n                                                    <span className='mr-2 btn btn-light' key={index.doc} >{doc.moneyPerRec}</span>\r\n                                                    <span className='ml-2 btn btn-light' key={index.doc} >+ {doc.scorePerRec} puntos</span>\r\n                                                    <Link to={`/offer-details/${doc._id}`}> <li key={index.doc} className='font-weight600 link-offer-details' >{doc.jobOfferData.jobName}</li></Link>\r\n                                                    <li key={index.doc} className='font-weight600'>{doc.companyData.companyName}</li>\r\n                                                    {\r\n                                                        doc.showMoney === true ?\r\n                                                            <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} | {doc.retribution.minGrossSalary} </li>\r\n                                                            :\r\n                                                            <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} </li>\r\n\r\n                                                    }\r\n                                                </ul>\r\n                                                <button className='recommend-btn' onClick={showModal}>Recomendar</button>\r\n                                                <Modal className='recommend-modal' show={isOpen} onHide={hideModal}>\r\n                                                    <Modal.Body scrollable='true'>\r\n                                                        <SendRecommendation {...wholeProps} />\r\n                                                    </Modal.Body>\r\n                                                </Modal>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n\r\n                                    :\r\n                                    <p style={{ color: 'black' }}>No hay ofertas para mostrar</p>\r\n\r\n                        }\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n// import {editUserProfile} from '../../api/users';\r\nimport { getUserData } from '../../api/users';\r\n// import { useForm } from \"react-hook-form\";  \r\nimport '../../CSS/userEditProfile.css'\r\n\r\nexport const UserEditProfile = (props) => {\r\n\r\n    const [, setData] = useState([]);\r\n    const [date, setDate] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [isCompany, setIsCompany] = useState(false);\r\n    const [city, setCity] = useState('');\r\n    const [compUserCity, setCompUserCity] = useState('');\r\n    const [email, setEmail] = useState('')\r\n\r\n    useEffect(() => {\r\n        const any = async () => {\r\n            getUserData(props.match.params.userId).then(apiRes => {\r\n                setData(apiRes.data);\r\n                setFirstName(apiRes.data.firstName);\r\n                setLastName(apiRes.data.lastName)\r\n                setCity(apiRes.data.city)\r\n                setIsCompany(apiRes.data.isCompany);\r\n                setEmail(apiRes.data.email);\r\n\r\n                if (isCompany === true) {\r\n                    console.log(apiRes.data.companyUser.city)\r\n                    return setCompUserCity(apiRes.data.companyUser.city)\r\n                } else if (isCompany === false && date !== undefined) {\r\n                    return setDate(apiRes.data.birthDate);\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n\r\n        }   \r\n        any()\r\n    }, [props.match.params.userId, isCompany, date]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='bg-white h-100'>\r\n            <h3 className='profileh3'>Mi Perfil</h3>\r\n            <div>\r\n                <form className='signUp-form card profile-card form-group mx-auto' autoComplete='off'>\r\n                    <h4>Datos Personales</h4>\r\n                    <div>\r\n                        <label>Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={firstName}\r\n                            placeholder='Nombre' />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Apellido</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={lastName}\r\n                            placeholder='Apellidos' />\r\n                    </div>\r\n\r\n                    {isCompany === false ?\r\n                        <div>\r\n                            <label>Fecha de Nacimiento</label>\r\n                            <input\r\n                                type='text'\r\n                                name='birthDate'\r\n                                className='form-control signup-fields border-0 mx-auto'\r\n                                defaultValue={date.substring(0, 10)}\r\n                            />\r\n\r\n                        </div> : null}\r\n\r\n\r\n                    {isCompany === true ?\r\n                        <div>\r\n                            <label> Ciudad</label>\r\n                            <input\r\n                                type='text'\r\n                                name='city'\r\n                                className='form-control signup-fields border-0 mx-auto'\r\n                                defaultValue={compUserCity}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <label> Ciudad</label>\r\n                            <input\r\n                                type='text'\r\n                                name='city'\r\n                                className='form-control signup-fields border-0mx-auto'\r\n                                defaultValue={city}\r\n\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    }\r\n                    <p className='user-data-mod'>Para modificar tus Datos Personales, avísanos mediante un correo a info@gamanfy.com</p>\r\n\r\n\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <form className='signUp-form card profile-card form-group mx-auto' autoComplete='off'>\r\n                    <h4>Datos Personales</h4>\r\n                    <div>\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={email}\r\n                        />\r\n                    </div>\r\n                    <p className='user-data-mod'>Para modificar tus Datos Personales, avísanos mediante un correo a info@gamanfy.com</p>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { recommendationsDashboard, deleteRecommendation } from '../../api/recommendations';\r\nimport '../../CSS/recommendations.css'\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const Recommendations = (props) => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [updateState, setUpdateState] = useState(true);\r\n    const [companiesData, setCompaniesData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const any = async () => {\r\n\r\n            recommendationsDashboard(props.match.params.userId).then(apiRes => {\r\n                setData(apiRes.data.user.recommendedPeople)\r\n                setIsLoading(false)\r\n                // console.log(apiRes.data.user.recommendedPeople.map(offer =>offer.offerId.companyData))\r\n                setCompaniesData(apiRes.data.user.recommendedPeople);\r\n            })\r\n        }\r\n        any()\r\n        \r\n    }, [props.match.params.userId, updateState])\r\n\r\n    \r\n    const handleClickDeleteRecommendation = (userId, recommendationId, data) => {\r\n        deleteRecommendation(userId, recommendationId, data).then(() => {\r\n            setUpdateState(!updateState)\r\n        });\r\n    }\r\n    \r\n    console.log(companiesData)\r\n    return (\r\n        <div>\r\n            <h3 className='rec-h3'>Recomendaciones</h3>\r\n\r\n\r\n            {isLoading === true ? <Loader className='loader' type=\"ThreeDots\" color=\"rgb(255, 188, 73)\" height={80} width={80} /> :\r\n\r\n\r\n                data !== undefined ?\r\n                    data.map((data, index) => {\r\n\r\n                        return (\r\n\r\n                            <div className={data.recommendationAccepted && data.inProcess && data.hired ? 'card mx-auto card-offers recommend-card-big ' : 'card mx-auto card-offers recommend-card '} key={index}>\r\n                                <ul className='recommend-list'>\r\n                                    {\r\n                                        data.recommendedFirstName ?\r\n                                            <li className='font-weight600 '>{data.recommendedFirstName.toUpperCase()} {data.recommendedLastName.toUpperCase()}</li>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                    <li className='font-weight600 longSpanOffer'>{data.offerId.companyData.companyName} | {data.offerId.jobOfferData.jobName}</li>\r\n                                    {\r\n                                        data.offerId.showMoney === true ?\r\n                                            <li key={index.data} className='longSpanOffer'>{data.offerId.addressId.cityForOffer} | {data.offerId.contractId.contract} | {data.offerId.retribution.minGrossSalary} </li>\r\n                                            :\r\n                                            <li key={index.data} className='longSpanOffer'>{data.offerId.addressId.cityForOffer} | {data.offerId.contractId.contract} </li>\r\n                                    }\r\n                                    <span className='mr-2 btn btn-light btn-punc-recommend' key={index.data} >{data.offerId.moneyPerRec}</span>\r\n\r\n                                    {\r\n\r\n                                        data.recommendationAccepted && !data.inProcess && !data.hired\r\n\r\n                                            ?\r\n                                            (\r\n                                                <div className='card-offers recommend-card'>\r\n                                                    <hr className='rec-hr' />\r\n                                                    <div className='d-flex justify-content-around inputs-div'>  <i className=\"fas fa-check-circle check-circle-1\" style={{ fontSize: '2em' }}></i> <input className='round-btn ball-2' type='button' /><input className='round-btn ball-3' type='button' /></div>\r\n                                                    <div className='d-flex justify-content-between p-inputs'><p className='p-inputs'>Postulación Aceptada</p><p className='p-inputs p-input-2 mr-5'>En Proceso de Selección</p><p className='p-inputs p-input-3'>¡Contratado!</p></div>\r\n                                                </div>\r\n                                            )\r\n\r\n                                            :\r\n\r\n                                            data.recommendationAccepted && data.inProcess && !data.hired\r\n                                                ?\r\n                                                (\r\n\r\n                                                    <div>\r\n                                                        <hr className='rec-hr' />\r\n                                                        <div className='d-flex justify-content-around inputs-div'>  <i className=\"fas fa-check-circle check-circle-1\" style={{ fontSize: '2em' }}></i>  <i className=\"fas fa-check-circle \" style={{ fontSize: '2em' }}></i> <input className='round-btn ball-3' type='button' /></div>\r\n                                                        <div className='d-flex justify-content-between p-inputs'><p className='p-inputs'>Postulación Aceptada</p><p className='p-inputs p-input-2 mr-5'>En Proceso de Selección</p><p className='p-inputs p-input-3'>¡Contratado!</p></div>\r\n                                                    </div>\r\n                                                )\r\n\r\n                                                :\r\n\r\n                                                data.recommendationAccepted && data.inProcess && data.hired\r\n                                                    ?\r\n                                                    (\r\n\r\n                                                        <div>\r\n                                                            <hr className='rec-hr' />\r\n                                                            <div className='d-flex justify-content-around inputs-div'>  <i className=\"fas fa-check-circle check-circle-1\" style={{ fontSize: '2em' }}></i>  <i className=\"fas fa-check-circle \" style={{ fontSize: '2em' }}></i> <i className=\"fas fa-check-circle \" style={{ fontSize: '2em' }}></i> </div>\r\n                                                            <div className='d-flex justify-content-between p-inputs'><p className='p-inputs'>Postulación Aceptada</p><p className='p-inputs p-input-2 mr-5'>En Proceso de Selección</p><p className='p-inputs p-input-3-hired'>¡Contratado!</p></div>\r\n                                                            <p className='p-signup'> ¡La empresa ha contratado a tu amigo! </p>\r\n                                                            <p className='p-signup'> Pulsa el botón OK para eliminarla de Mis Recomendaciones.</p>\r\n                                                            <button className='modal-offer-btn d-block mx-auto' onClick={() => handleClickDeleteRecommendation(props.match.params.userId, data._id)}>ELIMINAR OFERTA</button>\r\n                                                        </div>\r\n\r\n                                                    )\r\n                                                    :\r\n\r\n                                                    (\r\n                                                        <div>\r\n                                                            <hr className='rec-hr' />\r\n                                                            <div className='d-flex justify-content-around inputs-div'>  <input className='round-btn ball-1' type='button' /><input className='round-btn ball-2' type='button' /><input className='round-btn ball-3' type='button' /></div>\r\n                                                            <div className='d-flex justify-content-between p-inputs'><p className='p-inputs'>Postulación Aceptada</p><p className='p-inputs p-input-2 mr-5'>En Proceso de Selección</p><p className='p-inputs p-input-3'>¡Contratado!</p></div>\r\n                                                        </div>\r\n                                                    )\r\n\r\n\r\n\r\n                                    }\r\n\r\n                                </ul>\r\n                            </div>\r\n                        )\r\n                    })\r\n\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { logout } from '../../api/auth.api.js';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { OffersDashboard } from '../Offers/OffersDashboard';\r\nimport { getUserData } from '../../api/users';\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { UserEditProfile } from './UserEditProfile.js';\r\nimport { Recommendations } from './Recommendations.js';\r\nimport  '../../CSS/userDashboard.css';\r\n\r\nexport const UserDashboard = (props) => {\r\n  const history = useHistory();\r\n  const [offers, setOffers] = useState(false);\r\n  const [profile, setProfile] = useState(false);\r\n  const [recommendations, setRecommendations] = useState(false)\r\n  const [, setData] = useState([]);\r\n  const [name, setName]= useState('');\r\n  const [defaultContent, setDefaultContent] = useState(true);\r\n  const [menuOpen, setMenuOpen] = useState(true);\r\n  \r\n\r\n  const handleClickLogout = () => {\r\n    logout()\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    history.push('/');\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const any = async () => {\r\n      \r\n       getUserData(props.match.params.userId).then(apiRes => {\r\n        setData(apiRes.data);\r\n        setName(apiRes.data.firstName)\r\n      })\r\n    }\r\n    any()\r\n  }, [props.match.params.userId])\r\n\r\n  const handleShowOffers = () => {\r\n    setOffers(true)\r\n    setProfile(false)\r\n    setDefaultContent(false)\r\n    setRecommendations(false)\r\n  }\r\n  const handleShowProfile = () => {\r\n    setProfile(true)\r\n    setOffers(false)\r\n    setDefaultContent(false)\r\n    setRecommendations(false)\r\n  }\r\n\r\n  const handleShowRecommendations = () => {\r\n    setProfile(false)\r\n    setOffers(false)\r\n    setDefaultContent(false)\r\n    setRecommendations(true)\r\n  }\r\n\r\n  const closeMenu = () => {\r\n    setMenuOpen(!menuOpen)\r\n  }\r\n\r\n  const handleStateChange = (state) =>{\r\n    setMenuOpen(state.isOpen)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div>\r\n\r\n        <Menu onStateChange={(state) => handleStateChange(state)} className='userMenu' isOpen={menuOpen} disableCloseOnEsc disableAutoFocus customBurgerIcon={<span className='menuspan'> <i className=\"fas fa-bars\"></i>Menú </span>}>\r\n\r\n          <img className='logo-gamanfy-blue' src='/gamanfy_logo_dashboard_influencer.png' alt='logo-gamanfy' />\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-home\"></i> Inicio\r\n         </a>\r\n\r\n\r\n          <button onClick ={handleShowProfile} onClickCapture={closeMenu} className=\"menu-item btn-handler\">\r\n            <i className=\"fas fa-user-alt\"></i> Mi perfil\r\n         </button>\r\n\r\n\r\n          <button onClick={handleShowOffers} onClickCapture={closeMenu} className=\"menu-item btn-handler-long\">\r\n            <i className=\"fas fa-briefcase\"></i> Ofertas de Empleo\r\n          </button>\r\n\r\n\r\n          <button onClick={handleShowRecommendations} onClickCapture={closeMenu} className=\"menu-item btn-handler-long\">\r\n            <i className=\"fas fa-briefcase\"></i> Recomendaciones\r\n          </button>\r\n\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-bars\"></i> Mis ganancias\r\n          </a>\r\n\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-book-open\"></i> Gamanfy Academy\r\n                        </a>\r\n\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-question\"></i> Ayuda\r\n          </a>\r\n\r\n        </Menu>\r\n      </div>\r\n    {\r\n      defaultContent === true ?\r\n      <>\r\n      <div className='userLog '>\r\n          <h1 className='userName d-inline'>¡Hola {name}!</h1><button type=\"button\" className=\"btn\" onClick={handleClickLogout}><u>[ Cerrar Sesión ]</u></button>\r\n        </div>\r\n      <OffersDashboard {...props}/> \r\n      </>\r\n      :\r\n\r\n      <div className='offersPage' >\r\n        <div className='userLog '>\r\n          <h1 className='userName d-inline'>¡Hola {name}!</h1><button type=\"button\" className=\"btn\" onClick={handleClickLogout}><u>[ Cerrar Sesión ]</u></button>\r\n        </div>\r\n\r\n        <div  >\r\n          {offers ? <OffersDashboard {...props}/> : null}\r\n          {profile ? <UserEditProfile {...props}/> : null}\r\n          {recommendations ? <Recommendations {...props}/> : null}\r\n        </div>\r\n      </div>\r\n    }\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { companySignup } from '../../api/auth.api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport '../../CSS/signupForm.css';\r\n\r\n\r\nexport const CompanySignup = () => {\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const [infoSent, setInfoSent] = useState(false);\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const onSubmit = data => {\r\n    companySignup(data)\r\n      .then(function (result) {\r\n        // console.log('resolved', result)       \r\n        if (result.status === 200) {\r\n          history.push('/auth-co/company/token-sent')\r\n        } else {\r\n          setInfoSent(infoSent)\r\n        }\r\n      })\r\n      .catch(function (server) {\r\n\r\n        if (server.response.status !== 200) {\r\n\r\n          console.log(server.response);\r\n          setError('Este email ya está en uso');\r\n          return;\r\n        }\r\n\r\n      })\r\n    return error\r\n  };\r\n\r\n  return (\r\n    <div className='div-wrapper'>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para crear tu cuenta, completa este formulario<br />con tus datos de contacto.\r\n\r\n        </p>\r\n              <p className='p-signup'>No te preocupes, más adelante podrás añadir <br /> los datos de tu empresa.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Apellidos' />\r\n            </div>\r\n\r\n            {<span>{error}</span>}\r\n            <div>\r\n              {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                })} />\r\n            </div>\r\n\r\n            <div>\r\n              {errors.password && <span>Este campo es obligatorio</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Contraseña' />\r\n            </div>\r\n\r\n            <div>\r\n\r\n              {errors.repeatPassword && <span>{errors.repeatPassword.message ? errors.repeatPassword.message : 'Este campo es obligatorio'}</span>}\r\n              <input\r\n                type=\"password\"\r\n                name=\"repeatPassword\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({\r\n                  validate: (value) => value === watch('password') || 'Las contraseñas deben coincidir'\r\n                })}\r\n                placeholder='Repite la Contraseña'\r\n\r\n              />\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <input className='checkbox-label' disabled />\r\n                <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='user-terms'>\r\n                Al pulsar el botón de 'Crear mi cuenta' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Crear mi cuenta' /> </p>\r\n\r\n          </form>\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { companyResendToken } from '../../api/auth.api';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../../CSS/signupmssg.css'\r\nimport '../../CSS/signupForm.css'\r\n\r\n\r\nexport const CompanySignUpMssg = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false)\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [data, setData] = useState({})\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        companyResendToken(data.email).then(setData(data.email)).then(setInfoSent(true))\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid div-wrapper'>\r\n            <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n            {!infoSent ?\r\n                <div className='card card-signupMssg col-lg-4 mx-auto'>\r\n                    <img className='tick-logo' src='/Anotación 2020-06-03 114022.png' alt='logo-gamanfy' />\r\n\r\n                    <div>\r\n                        <p className=' card-body p-signup mr-5 ml-5' style={{ fontWeight: '700' }}>Acabamos de crear tu cuenta</p>\r\n                        <p className=' dar-body p-signup mr-5 ml-5'> Para empezar a encontrar el mejor talento, verifica tu bandeja de entrada y haz click en el link que te hemos enviado para completar la validación.</p>\r\n                    </div>\r\n\r\n                    <p className='card-body p-signup user-terms-signupMssg mt-5'>¿No ves nuestro correo en tu bandeja de entrada? Prueba a <u>\r\n                        <input className='email-resend' type=\"submit\" onClick={showModal} value='Reenviar el email de verificación' /></u>\r\n                    </p>\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Header>\r\n                            <Modal.Title> <p className='p-signup'>Escriba su dirección de correo</p> </Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}> <input className='signup-fields ml-5 mt-3' type='email' name='email' placeholder='Email' ref={register({ required: true })} autoComplete='off' />\r\n                            <Modal.Body>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button onClick={hideModal} className='btn-danger p-1' style={{ borderRadius: '3px' }}>Cancel</button>\r\n                                <input type='submit' className='btn-cacc-su' value='Reenviar' />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n\r\n\r\n                </div> : <p style={{marginTop:'4em'}} >Nuevo email de confirmación enviado correctamente a {<input className='resend-email' type='text' name='userEmail' defaultValue={data} />}</p>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { companyPostConfirmationToken } from '../../api/auth.api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ConfirmationToken extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n       \r\n\r\n        this.state = {\r\n            email: '',\r\n            companyToken: this.props.match.params.companyToken,\r\n            companyId: this.props.match.params.companyId,\r\n            infoSent: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, companyToken, companyId } = this.state;\r\n\r\n        companyPostConfirmationToken(companyId, companyToken, email)\r\n            .then(response => {\r\n               \r\n                this.setState({\r\n                    infoSent: true\r\n                })\r\n            })\r\n\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        this.handleFormSubmit(e);\r\n        this.setState({\r\n            infoSent: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { companyId, email, companyToken, infoSent } = this.state;\r\n        return (\r\n            <div className='background-color div-wrapper'>\r\n\r\n                {infoSent === false ? (\r\n                    <div className=\"col-sm-12 my-auto\">\r\n\r\n                        <div className='col-sm-12 h-100 d-table d-lg-flex'>\r\n                            <div className=\"mx-auto mt-5\" style={{ height: '40vh' }}>\r\n\r\n                                <form className=\"form-group col-sm-12 d-table bg-white rounded\" onSubmit={this.handleFormSubmit}>\r\n                                    <div>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control mb-3 mt-3\"\r\n                                            id=\"formGroupExampleInput\"\r\n                                            placeholder=\"E-mail @\"\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n\r\n                                        <input\r\n                                            type=\"hidden\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput2\"\r\n                                            name='companyToken'\r\n                                            defaultValue={companyToken}\r\n\r\n                                        />\r\n                                        <input\r\n                                            type=\"hidden\"\r\n                                            className=\"form-control mb-3\"\r\n                                            id=\"formGroupExampleInput2\"\r\n                                            name='companyId'\r\n                                            defaultValue={companyId}\r\n\r\n                                        />\r\n\r\n                                    </div>\r\n\r\n                                    <>\r\n                                        <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Verificar mi cuenta' onClick={this.handleClick} /> </p>\r\n\r\n                                    </>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div className='d-flex justify-content-center mt-5'>\r\n                            <Link className='p-cacc' to={`/auth-co/company/${this.state.companyId}/complete-profile`}>\r\n                                <button className='btn-cacc-su w-100'>\r\n                                Accede a la plataforma después de haber rellenado los últimos datos de tu perfil (nada más que 20 segundos).\r\n                    </button>\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmationToken","import { useForm } from \"react-hook-form\";\r\nimport React, { useContext, useState } from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const CompanyLogin = () => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { authenticateCompany } = authContext;\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [isLoading, setisLoading] = useState(false)\r\n\r\n  const onSubmit = data => {\r\n    authenticateCompany(data)\r\n    setisLoading(true)\r\n\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='div-wrapper'>\r\n      <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n      <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n        <h3>Login</h3>\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder='Email'\r\n            ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'invalid email adress' } })} />\r\n          {errors.email && <span> {errors.email.message ? errors.email.message : 'This field is required'} </span>}\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            className='form-control signup-fields mx-auto'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            ref={register({ required: true })}\r\n            placeholder='Password' />\r\n          {errors.password && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            <input className='checkbox-label' disabled />\r\n            <input className='checkbox-round' type=\"checkbox\" name=\"remember\" ref={register} /> Recuérdame</label>\r\n        </div>\r\n\r\n        {!isLoading ? <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Entrar en mi cuenta' /> </p> : <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />}\r\n      </form>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport countries from '../../countries.json';\r\nimport { sectors, numberOfEmployees } from '../../FolderForSelects/htmlSelects';\r\nimport '../../CSS/signupForm.css';\r\nimport AuthContext from '../../context/auth/authContext';\r\nexport const CompanyCompleteProfile = (props) => {\r\n\r\n \r\n  const { register, handleSubmit } = useForm();\r\n  const [sector, setSector] = useState(sectors)\r\n  const [employees, setEmployees] = useState(numberOfEmployees);\r\n  const [countryNameState, setCountryNameState] = useState(countries.map(country => country.name.common));\r\n  const authContext = useContext(AuthContext);\r\n  const { toCompleteCompany } = authContext;\r\n  const [handler, setHandler] = useState(false); \r\n  const sectorType = sector.map(sectorType => sectorType);\r\n  const employeesMap = employees.map(employeesMap => employeesMap);\r\n  const countryName = countryNameState.map(countryName => countryName);\r\n  \r\n  const handleTrueOrFalse = () => setHandler(!handler);\r\n  const handleSector = (e) => setSector(sectorType);\r\n  const handleNumberOfEmployees = (e) => setEmployees(employeesMap);\r\n  const handleCountryName = (e) => setCountryNameState(countryName);\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    toCompleteCompany(props.match.params.companyId, data)\r\n  \r\n  };\r\n\r\n\r\n  return (\r\n    <div className='div-wrapper'>\r\n      <>\r\n        <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n        <div>\r\n          <form className='signUp-form form-group mx-auto' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n            <div>\r\n              <p className='p-signup'>\r\n                Para completar tu cuenta, completa este formulario<br />con tus datos.\r\n\r\n        </p>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                Select your Sector\r\n              <select\r\n                  name='sector'\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  onChange={e => handleSector(e)}\r\n                >\r\n                  {\r\n                    sectorType.map((doc, key) => {\r\n                      return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                    })\r\n\r\n                  }\r\n                </select>\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"companyName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Nombre de la empresa' />\r\n            </div>\r\n\r\n            <div>\r\n              <textarea\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Descripción de la empresa' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"taxId\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Razón Social' />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                Número de trabajadores\r\n              <select\r\n                  name='numberOfEmployees'\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  onChange={e => handleNumberOfEmployees(e)}\r\n                >\r\n                  {\r\n                    employeesMap.map((doc, key) => {\r\n                      return <option key={key} value={key}>{doc}</option>;\r\n                    })\r\n\r\n                  }\r\n                </select>\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                País\r\n              <select\r\n                  name='countryName'\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  onChange={e => handleCountryName(e)}\r\n                >\r\n                  {\r\n                    countryName.map((doc, key) => {\r\n                      return <option key={key} value={doc}>{doc}</option>;\r\n                    })\r\n\r\n                  }\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"provinceName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Provincia' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"municipalityName\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Municipio' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Ciudad' />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                Dirección\r\n                </label>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Calle' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"number\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Número' />\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"zip\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Código postal' />\r\n            </div>\r\n\r\n            <div>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\"\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  placeholder='Teléfono de contacto' />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"contactPerson\"\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  placeholder='Persona de contacto' />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"website\"\r\n                className='form-control signup-fields mx-auto'\r\n                ref={register({ required: true })}\r\n                placeholder='Página web' />\r\n            </div>\r\n        \r\n            <div>\r\n              <p className='user-terms'>\r\n               <input type='checkbox' name='isCompleted' onClick={handleTrueOrFalse} ref={register({required: true})}/> Al pulsar el botón de 'Completar mi perfil' aceptas y reconoces nuestros <u>Términos de uso</u> y <u>Politica de privacidad</u>\r\n              </p>\r\n            </div>\r\n            <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Completar mi perfil' /> </p>\r\n\r\n          </form>\r\n        </div>\r\n      </>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../../CSS/userDashboard.css';\r\nimport { sectors } from '../../FolderForSelects/htmlSelects';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCompanyData } from '../../api/users';\r\nimport { deleteOffer } from '../../api/offers';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport const CompanyOffers = (props) => {\r\n\r\n    const [sector, setSector] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [city, setCity] = useState([]);\r\n    const [dataFiltered, setDataFiltered] = useState();\r\n    const [, setData] = useState([]);\r\n    const [companyPostedOffers, setPostedOffers] = useState([]);\r\n    const [updateState, setUpdateState] = useState(true)\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const any = async () => {\r\n            getCompanyData(props.match.params.companyId).then(apiRes => {\r\n\r\n                setData(apiRes.data.user)\r\n                setPostedOffers(apiRes.data.user.postedOffers)\r\n                setCity(apiRes.data.user.postedOffers.map(offer => (offer.addressId.cityForOffer.charAt(0).toUpperCase() + offer.addressId.cityForOffer.slice(1))))\r\n            })\r\n        }\r\n        any()\r\n        setSector(sectors);\r\n    }, [props.match.params.companyId, updateState]);\r\n\r\n    const noRepCities = [...new Set(city)];\r\n\r\n    let filterActive = companyPostedOffers.filter((data) => data.jobOfferData.jobName.toLocaleLowerCase().includes(query.toLocaleLowerCase()))\r\n    let filterBySectorAndCity = filterActive.filter((data) => data ? data.addressId.cityForOffer === dataFiltered || data.sectorId.sector === dataFiltered : null)\r\n    let filterAllAndActiveFilter = filterBySectorAndCity.filter((data) => data.jobOfferData.jobName.toLocaleLowerCase().includes(query.toLocaleLowerCase()))\r\n\r\n\r\n    const handleEvent = (e) => {\r\n        if (e.target.value === 'Muestra todas') {\r\n            setDataFiltered(companyPostedOffers)\r\n\r\n        } else {\r\n            setDataFiltered(e.target.value)\r\n        }\r\n    }\r\n\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n\r\n    const handleClickDeleteOffer = (companyId, offerId) => {\r\n        deleteOffer(companyId, offerId).then((apiRes) => {\r\n            setUpdateState(!updateState)\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container-fluid d-flex bg-white'>\r\n            {\r\n                <div className='mx-auto bg-white offers-wrapper mb-5'>\r\n                    <h3 className='offersh3 mt-3'>Ofertas de Empleo</h3>\r\n                    <div className=\"filterOffers\">\r\n                        <span className=\"material-icons\">\r\n                            search\r\n                        </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"activeFilter\"\r\n                            value={query}\r\n                            placeholder='Filtrar por puesto'\r\n                            onChange={(e) => setQuery(e.target.value)}\r\n                            name=\"query\"\r\n                        />\r\n                        <select className=\"activeFilter\" defaultValue='Ciudad' onChange={handleEvent}>\r\n                            <option disabled={true}> Ciudad</option>\r\n                            <option> Muestra todas</option>\r\n\r\n                            {\r\n                                noRepCities.map((doc, index) => {\r\n                                    return <option key={index}>{doc}</option>\r\n                                })\r\n\r\n                            }\r\n                        </select>\r\n                        <select className=\"activeFilter\" defaultValue='Sector' onChange={handleEvent}>\r\n                            <option style={{ color: 'grey' }} disabled={true}> Sector</option>\r\n                            <option> Muestra todas</option>\r\n\r\n                            {\r\n                                sector.map((doc, index) => {\r\n                                    return <option key={index}>{doc}</option>\r\n                                })\r\n\r\n                            }\r\n                        </select>\r\n                    </div>\r\n\r\n                    {filterAllAndActiveFilter.length > 0\r\n\r\n                        ?\r\n                        filterAllAndActiveFilter.map((doc, index) => {\r\n\r\n                            return (\r\n                                <div className='card card-offers' key={index}>\r\n                                    <ul className='offersList'>\r\n                                        <img className='offer-pic' src={doc.imgPath} alt='' />\r\n                                        <Link to={`/offer-details/${doc._id}`}> <li key={index.doc} className='font-weight600 link-offer-details'>{doc.jobOfferData.jobName}</li></Link>\r\n                                        <li key={index.doc} className='font-weight600'>{doc.companyData.companyName}</li>\r\n                                        {\r\n                                            doc.showMoney === true ?\r\n                                                <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} | {doc.retribution.minGrossSalary} </li>\r\n                                                :\r\n                                                <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} </li>\r\n                                        }\r\n                                        <button className='delete-offer-btn' onClick={showModal}>Eliminar Oferta</button>\r\n                                        <Modal show={isOpen} onHide={hideModal}>\r\n                                            <Modal.Header>\r\n                                                <Modal.Title> <p className='p-modal-offer'>¡Atención!</p> </Modal.Title>\r\n                                            </Modal.Header>\r\n\r\n                                            <Modal.Body>\r\n                                                <p className='p-modalBody-offer'>Si eliminas esta oferta de trabajo, perderás los datos de los candidatos que hayan sido recomendados y no podrás volver a recuperarlos. <br />\r\n\r\n                                                ¿Estás seguro de que quieres eliminar esta oferta?</p>\r\n\r\n                                                <button className='modal-offer-btn ' onClick={() => handleClickDeleteOffer(props.match.params.companyId, doc._id)}>ELIMINAR OFERTA</button>\r\n                                                <button className='modal-offer-btn ' onClick={hideModal}>MANTENER OFERTA</button>\r\n                                            </Modal.Body>\r\n\r\n                                        </Modal>\r\n                                    </ul>\r\n\r\n                                </div>\r\n                            )\r\n                        })\r\n\r\n                        :\r\n\r\n                        dataFiltered === companyPostedOffers\r\n\r\n                            ?\r\n                            filterActive.map((doc, index) => {\r\n                                return (\r\n                                    <div className='card card-offers bg-white' key={index}>\r\n                                        <ul className='offersList'>\r\n                                            <img className='offer-pic' src={doc.imgPath} alt='' />\r\n                                            <Link to={`/offer-details/${doc._id}`}><li key={index.doc} className='font-weight600 link-offer-details' >{doc.jobOfferData.jobName}</li></Link>\r\n                                            <li key={index.doc} className='font-weight600'>{doc.companyData.companyName}</li>\r\n                                            {\r\n                                                doc.showMoney === true ?\r\n                                                    <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} | {doc.retribution.minGrossSalary} </li>\r\n                                                    :\r\n                                                    <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract}</li>\r\n\r\n                                            }\r\n                                            <button className='delete-offer-btn' onClick={showModal}>Eliminar Oferta</button>\r\n                                            <Modal show={isOpen} onHide={hideModal}>\r\n                                                <Modal.Header>\r\n                                                    <Modal.Title> <p className='p-modal-offer'>¡Atención!</p> </Modal.Title>\r\n                                                </Modal.Header>\r\n\r\n                                                <Modal.Body>\r\n                                                    <p className='p-modalBody-offer'>Si eliminas esta oferta de trabajo, perderás los datos de los candidatos que hayan sido recomendados y no podrás volver a recuperarlos. <br />\r\n\r\n                                                    ¿Estás seguro de que quieres eliminar esta oferta?</p>\r\n\r\n                                                    <button className='modal-offer-btn' onClick={() => handleClickDeleteOffer(props.match.params.companyId, doc._id)}>ELIMINAR OFERTA</button>\r\n                                                    <button className='modal-offer-btn ' onClick={hideModal}>MANTENER OFERTA</button>\r\n                                                </Modal.Body>\r\n                                            </Modal>\r\n                                        </ul>\r\n\r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n                            :\r\n\r\n                            dataFiltered === undefined\r\n                                ?\r\n                                filterActive.map((doc, index) => {\r\n                                    return (\r\n                                        <div className='card card-offers' key={index}>\r\n                                            <ul className='offersList'>\r\n                                                <img className='offer-pic' src={doc.imgPath} alt='' />\r\n                                                <Link to={`/offer-details/${doc._id}`}> <li key={index.doc} className='font-weight600 link-offer-details' >{doc.jobOfferData.jobName}</li></Link>\r\n                                                <li key={index.doc} className='font-weight600'>{doc.companyData.companyName}</li>\r\n                                                {\r\n                                                    doc.showMoney === true ?\r\n                                                        <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} | {doc.retribution.minGrossSalary} </li>\r\n                                                        :\r\n                                                        <li key={index.doc} className='longSpanOffer'>{doc.addressId.cityForOffer} | {doc.contractId.contract} </li>\r\n\r\n                                                }\r\n                                                <button className='delete-offer-btn' onClick={showModal}>Eliminar Oferta</button>\r\n                                                <Modal show={isOpen} onHide={hideModal}>\r\n                                                    <Modal.Header>\r\n                                                        <Modal.Title> <p className='p-modal-offer'>¡Atención!</p> </Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>\r\n                                                        <p className='p-modalBody-offer'>Si eliminas esta oferta de trabajo, perderás los datos de los candidatos que hayan sido recomendados y no podrás volver a recuperarlos. <br />\r\n\r\n                                                        ¿Estás seguro de que quieres eliminar esta oferta?</p>\r\n\r\n                                                        <button className='modal-offer-btn ' onClick={() => handleClickDeleteOffer(props.match.params.companyId, doc._id)}>ELIMINAR OFERTA</button>\r\n                                                        <button className='modal-offer-btn ' onClick={hideModal}>MANTENER OFERTA</button>\r\n                                                    </Modal.Body>\r\n\r\n\r\n                                                </Modal>\r\n                                            </ul>\r\n\r\n                                        </div>\r\n                                    )\r\n                                })\r\n\r\n                                :\r\n                                <p style={{ color: 'black' }}>No hay ofertas para mostrar</p>\r\n\r\n                    }\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { editCompanyProfile } from '../../api/users';\r\nimport { getCompanyData } from '../../api/users';\r\nimport { useForm } from \"react-hook-form\";\r\nimport '../../CSS/userEditProfile.css'\r\n\r\nexport const CompanyEditProfile = (props) => {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [numberOfEmployees, setNumberOfEmployees] = useState('');\r\n    const [sector, setSector] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [website, setWebsite] = useState('');\r\n    const [taxId, setTaxId] = useState('');\r\n    const [taxCountry, setTaxCountry] = useState('');\r\n    const [taxAddress, setTaxAddress] = useState([]);\r\n    const [updateState, setUpdateState]= useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { register, handleSubmit} = useForm();\r\n    \r\n    useEffect(() => {\r\n        const any = async () => {\r\n            getCompanyData(props.match.params.companyId).then(apiRes => {\r\n\r\n                setFirstName(apiRes.data.user.firstName);\r\n                setLastName(apiRes.data.user.lastName);\r\n                setCity(apiRes.data.user.city);\r\n                setEmail(apiRes.data.user.email);\r\n                setCompanyName(apiRes.data.user.companyName);\r\n                setNumberOfEmployees(apiRes.data.user.numberOfEmployees);\r\n                setSector(apiRes.data.user.sectorId.sector);\r\n                setDescription(apiRes.data.user.description);\r\n                setCountry(apiRes.data.user.countryName);\r\n                setAddress(apiRes.data.user.addressId);\r\n                setPhoneNumber(apiRes.data.user.phoneNumber);\r\n                setWebsite(apiRes.data.user.website);\r\n                setTaxId(apiRes.data.user.taxId);\r\n                setTaxCountry(apiRes.data.user.taxCountry);\r\n                setTaxAddress(apiRes.data.user.taxAddress);\r\n                \r\n            });\r\n\r\n        }\r\n        any()\r\n    }, [props.match.params.companyId]);\r\n    \r\n        const onSubmit = data => {\r\n         \r\n            editCompanyProfile(props.match.params.companyId, data).then(()=> {\r\n                setUpdateState(!updateState)\r\n                setIsLoading(true)\r\n            })\r\n\r\n        };\r\n  \r\n\r\n    return (\r\n        <div className='bg-white h-100'>\r\n            <h3 className='profileh3'>Mi Perfil</h3>\r\n            <div>\r\n                <form className='signUp-form card profile-card form-group mx-auto' autoComplete='off'>\r\n                    <h4>Datos Personales</h4>\r\n                    <div>\r\n                        <label>Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={firstName}\r\n                            placeholder='Nombre' />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Apellidos</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={lastName}\r\n                            placeholder='Apellidos' />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <label> Email de contacto</label>\r\n                        <input\r\n                            type='text'\r\n                            name='email'\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={email}\r\n\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <p className='user-data-mod'>Para modificar tus Datos Personales, avísanos mediante un correo a info@gamanfy.com</p>\r\n\r\n\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <form className='signUp-form card profile-card profile-card-long form-group mx-auto' autoComplete='off'>\r\n                    <h4>Datos de la Empresa</h4>\r\n                    <div>\r\n                        <label>Nombre Empresa</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"companyName\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={companyName}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Número de Empleados</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"numberOfEmployees\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={numberOfEmployees}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Sector profesional</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"sector\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={sector}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Descripción de la Empresa</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={description}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>País</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"country\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={country}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Dirección Completa</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={city}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"street\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={address.street}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={address.number}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"zip\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={address.zip}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Teléfono de Contacto</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"phoneNumber\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={phoneNumber}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Web</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"website\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={website}\r\n                        />\r\n                    </div>\r\n\r\n                    <p className='user-data-mod'>Para modificar tus Datos Personales, avísanos mediante un correo a info@gamanfy.com</p>\r\n\r\n                </form>\r\n\r\n                <form className='signUp-form card profile-card form-group mx-auto' autoComplete='off'  onSubmit={handleSubmit(onSubmit)}>\r\n                    <h4>Datos Fiscales/ Facturación</h4>\r\n                    <div>\r\n                        <label> N.I.F / Razón Social</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"taxId\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            defaultValue={taxId}\r\n                            ref={register({ required: true })}\r\n                            \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label> Domicilio Fiscal</label>\r\n                       \r\n                       {taxAddress !== undefined ?\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"street\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            ref={register({ required: true })}\r\n                            defaultValue={taxAddress.street}\r\n                            placeholder='Calle'\r\n                        />\r\n                        :\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"street\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            ref={register({ required: true })}\r\n                            placeholder='Calle'\r\n                        />\r\n\r\n                       }\r\n\r\n                       {\r\n                           taxAddress !== undefined  ?\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            ref={register({ required: true })}\r\n                            defaultValue={taxAddress.number}\r\n                            placeholder='Número'\r\n                        />\r\n                        :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            ref={register({ required: true })}\r\n                            placeholder='Número'\r\n                        />\r\n\r\n                       }\r\n                        \r\n                        {\r\n                            taxAddress !== undefined  ?\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"zip\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            ref={register({ required: true })}\r\n                            placeholder='Código Postal'\r\n                            defaultValue={taxAddress.zip}\r\n                        />\r\n                        :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"zip\"\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n                            ref={register({ required: true })}\r\n                            placeholder='Código Postal'\r\n                           \r\n                        />\r\n\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <label> País de Facturación</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"taxCountry\"\r\n                            ref={register({ required: true })}\r\n                            defaultValue={taxCountry}\r\n                            className='form-control signup-fields border-0 mx-auto'\r\n\r\n                        />\r\n                    </div>\r\n                    {!isLoading ? <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' value='Modificar Datos' /></p> :  <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su btn-success' value='Datos Modificados'/> </p>}\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { getCompanyData } from '../../api/users';\r\nimport '../../CSS/selecProcess.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport const SelecProcess = (props) => {\r\n    const [postedOffers, setPostedOffers] = useState([])\r\n\r\n    useEffect(() => {\r\n        const any = async () => {\r\n            getCompanyData(props.match.params.companyId).then(apiRes => {\r\n                setPostedOffers(apiRes.data.user.postedOffers);\r\n\r\n            });\r\n\r\n        }\r\n        any()\r\n    }, [props.match.params.companyId]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                postedOffers.length > 0 ? (\r\n                    postedOffers.map((data, index) => {\r\n                        let inProcess = data.recommendedTimes.map(item => item.inProcess);\r\n                        let filteredProcess = inProcess.filter(item => item === true);\r\n                        let hired = data.recommendedTimes.map(item => item.hired);\r\n                        let filteredHired = hired.filter(item => item === true).length;\r\n                        let stillInProcess = data.recommendedTimes.map(item => item.stillInProcess);\r\n                        let filteredStill = stillInProcess.filter(item => item === true);\r\n                       \r\n                        return (\r\n\r\n                            <div className='card card-process px-0 d-lg-flex row' key={index}>\r\n                                <div className='parent-div'>\r\n                                    <span className='list-selecProcess-top'>Puesto</span>\r\n                                    <span className='list-selecProcess-city'>Ciudad</span>\r\n                                    <span className='list-selecProcess-proc'>En Proceso</span>\r\n                                    <span className='list-selecProcess-date'>Fecha de Inicio</span>\r\n                                    <span className='list-selecProcess-hired'>Contratados</span>\r\n\r\n                                </div>\r\n\r\n                                <div className='parent-div job-data' >\r\n                                    <span className='process-field process-field-1'><span className='inner-span'>{data.jobOfferData.jobName}</span></span>\r\n                                    <span className='process-field process-field-2 '><span className='inner-span'>{data.addressId.cityForOffer}</span></span>\r\n                                    <span className='process-field process-field-3 '><span className='inner-span'>{data.jobOfferData.onDate}</span></span>\r\n\r\n                                    {\r\n                                        filteredHired && filteredStill.find(item => item === true) ?\r\n                                            <span className='process-field'><span className='inner-span'>{filteredStill.length}</span></span>\r\n                                            :\r\n                                        !filteredHired && filteredProcess ?\r\n                                            <span className='process-field'><span className='inner-span'>{filteredProcess.length}</span></span>                                            \r\n                                            :\r\n                                            <span className='process-field'><span className='inner-span'>0</span></span>\r\n\r\n                                    }\r\n                                    {\r\n                                        filteredHired ?\r\n                                            <span className='process-field'><span className='inner-span'>{filteredHired}</span></span>\r\n                                            :\r\n                                            <span className='process-field'><span className='inner-span'>0</span></span>\r\n\r\n                                    }\r\n                                </div>\r\n                               <Link to={`/company/${props.match.params.companyId}/${data._id}/candidates`}> <button type=\"submit\" className='btn-candidates'>VER CANDIDATOS </button></Link>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        )\r\n                    })\r\n\r\n                ) : (\r\n                        <p style={{ color: 'black' }}> No tienes procesos en curso.</p>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { companyLogout } from '../../api/auth.api.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { slide as MenuCompany } from \"react-burger-menu\";\r\nimport { getCompanyData } from '../../api/users'\r\nimport '../../CSS/companyDashboard.css';\r\nimport { CompanyOffers } from '../Offers/CompanyOffers';\r\nimport { CompanyEditProfile } from '../CompanyPages/CompanyEditProfile';\r\nimport { SelecProcess } from './SelecProcess.js';\r\nimport { sendCompanyRecommendation } from '../../api/recommendations';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const CompanyDashboard = (props) => {\r\n  const { handleSubmit, errors, register } = useForm();\r\n  const history = useHistory();\r\n  const [, setData] = useState([]);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [showPostedOffers, setShowPostedOffers] = useState(true);\r\n  const [defaultContent, setDefaultContent] = useState(true);\r\n  const [processes, setShowProcesses] = useState(false);\r\n  const [menuOpen, setMenuOpen] = useState(true);\r\n  const [profile, setProfile] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [infoSent, setInfoSent] = useState(false);\r\n\r\n  const handleClickLogout = () => {\r\n    companyLogout()\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    history.push('/');\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const any = async () => {\r\n      getCompanyData(props.match.params.companyId).then(apiRes => {\r\n        setData(apiRes.data.user)\r\n        setFirstName(apiRes.data.user.firstName)\r\n\r\n      })\r\n    }\r\n    any()\r\n  }, [props.match.params.companyId]);\r\n\r\n\r\n  const handleShowPostedOffers = () => {\r\n    setShowPostedOffers(true)\r\n    setDefaultContent(false)\r\n    setShowProcesses(false)\r\n  }\r\n\r\n\r\n  const handleShowProfile = () => {\r\n    setProfile(true);\r\n    setShowPostedOffers(false);\r\n    setDefaultContent(false);\r\n    setShowProcesses(false)\r\n\r\n  }\r\n\r\n  const handleShowMyProcesses = () => {\r\n    setProfile(false);\r\n    setShowPostedOffers(false);\r\n    setDefaultContent(false);\r\n    setShowProcesses(true)\r\n  }\r\n\r\n  const closeMenu = () => {\r\n    setMenuOpen(!menuOpen)\r\n  }\r\n\r\n  const handleStateChange = (state) => {\r\n    setMenuOpen(state.isOpen)\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const onSubmit = data => {\r\n    sendCompanyRecommendation(props.match.params.companyId, data).then(() => {\r\n      console.log(data)\r\n      setInfoSent(!infoSent)\r\n      history.push(`/company/${props.match.params.companyId}/dashboard`)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n\r\n        <MenuCompany onStateChange={(state) => handleStateChange(state)} className='companyMenu' isOpen={menuOpen} disableCloseOnEsc disableAutoFocus customBurgerIcon={<span className='menuspan'> <i className=\"fas fa-bars\"></i>Menú </span>}>\r\n          <div></div>\r\n          <img className='gamanfy-logo-company-menu' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n\r\n          <Link to={`/offers/${props.match.params.companyId}/post-job-offer`} className='btn-publicar-oferta' >PUBLICAR OFERTA</Link>\r\n          <p className='p-modal-dash' onClick={showModal} onClickCapture={closeMenu}><u>Recomendar a un profesional</u></p>\r\n\r\n          <Modal centered show={isOpen} onHide={hideModal}>\r\n            <form className='form-company-rec' onSubmit={handleSubmit(onSubmit)}>\r\n              <p className='p-modal-offer mt-1' name='header'>Recomendar a un Profesional</p>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"recommendedFirstName\"\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  placeholder='Nombre del Recomendado' />\r\n              </div>\r\n\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"recommendedLastName\"\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({ required: true })}\r\n                  placeholder='Apellidos del Recomendado' />\r\n              </div>\r\n\r\n              <div>\r\n                {errors.email && <span> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"recommendedEmail\"\r\n                  placeholder='Escribe sun email'\r\n                  className='form-control signup-fields mx-auto'\r\n                  ref={register({\r\n                    required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                  })} />\r\n              </div>\r\n              <textarea\r\n                style={{ height: '8em' }}\r\n                type=\"textarea\"\r\n                name=\"whyRec\"\r\n                ref={register({ required: true })}\r\n                className='form-control signup-fields mx-auto'\r\n                placeholder='Indica porqué recomendarías a este profesional y comparte su información de contacto (Máx. 4000 caracteres)'\r\n                maxLength=\"4000\"\r\n              />\r\n              <p className='p-cacc'> <input type=\"submit\" onClick={hideModal} className='btn-cacc-su' style={{ width: '15em' }} value='Recomendar Profesional' /> </p>\r\n\r\n            </form>\r\n          </Modal>\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-home\"></i> Inicio\r\n          </a>\r\n\r\n\r\n          <button onClick={handleShowProfile} onClickCapture={closeMenu} className=\"menu-item btn-handler btn-misdatos\">\r\n            <i className=\"fas fa-user-alt\"></i> Mis Datos\r\n          </button>\r\n\r\n\r\n          <button onClick={handleShowPostedOffers} onClickCapture={closeMenu} className=\"menu-item btn-handler-long-company\">\r\n            <i className=\"fas fa-briefcase\"></i> Mis Ofertas de Empleo\r\n          </button>\r\n\r\n\r\n          <button onClick={handleShowMyProcesses} onClickCapture={closeMenu} className=\"menu-item btn-misSelec\">\r\n            <i className=\"fas fa-briefcase\"></i> Mis procesos de Sel.\r\n          </button>\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-book-open\"></i> Mi Microsite\r\n          </a>\r\n\r\n          <a href=\"/\" className=\"menu-item\">\r\n            <i className=\"fas fa-question\"></i> Ayuda\r\n          </a>\r\n\r\n        </MenuCompany>\r\n      </div>\r\n\r\n      {\r\n\r\n\r\n        defaultContent === true ?\r\n          <>\r\n            <Link to='' />\r\n            <div className='userLog '>\r\n              <h1 className='userName d-inline'>¡Hola {firstName}!</h1><button type=\"button\" className=\"btn\" onClick={handleClickLogout}><u>[ Cerrar Sesión ]</u></button>\r\n            </div>\r\n            <CompanyOffers {...props} />\r\n          </>\r\n          :\r\n\r\n          <div className='offersPage' >\r\n            <div className='userLog '>\r\n              <h1 className='userName d-inline'>¡Hola {firstName}!</h1><button type=\"button\" className=\"btn\" onClick={handleClickLogout}><u>[ Cerrar Sesión ]</u></button>\r\n            </div>\r\n\r\n            <div  >\r\n              {showPostedOffers ? <CompanyOffers {...props} /> : null}\r\n              {profile ? <CompanyEditProfile {...props} /> : null}\r\n              {processes ? <SelecProcess {...props} /> : null}\r\n\r\n            </div>\r\n          </div>\r\n      }\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","export const competencesJS = [\r\n    {\r\n        value: \"Adaptabilidad\", label:\"Adaptabilidad\"\r\n    },\r\n    {\r\n        value: \"Amabilidad\", label: \"Amabilidad\"\r\n    },\r\n    {\r\n        value: \"Análisis de datos\", label: \"Análisis de datos\"\r\n    },\r\n    {\r\n        value: \"Análisis de problemas\", label: \"Análisis de problemas\"\r\n    },\r\n    {\r\n        value: \"Asertividad\", label: \"Asertividad\"\r\n    },\r\n    {\r\n        value: \"Asunción de riesgos\", label: \"Asunción de riesgos\"\r\n    },\r\n    {\r\n        value: \"Atención a las necesidades\", label: \"Atención a las necesidades\"\r\n    },\r\n    {\r\n        value: \"Atención al cliente\", label: \"Atención al cliente\"\r\n    },\r\n    {\r\n        value: \"Autoconfianza\", label: \"Autoconfianza\"\r\n    },\r\n    {\r\n        value: \"Autoconocimiento\", label: \"Autoconocimiento\"\r\n    },\r\n    {\r\n        value: \"Autocontrol\", label: \"Autocontrol\"\r\n    },\r\n    {\r\n        value: \"Autocrítica\", label: \"Autocrítica\"\r\n    },\r\n    {\r\n        value: \"Automotivación\", label: \"Automotivación\"\r\n    },\r\n    {\r\n        value: \"Autonomía\", label: \"Autonomía\"\r\n    },\r\n    {\r\n        value: \"Autorregulación\", label: \"Autorregulación\"\r\n    },\r\n    {\r\n        value: \"Capacidad analítica\", label: \"Capacidad analítica\"\r\n    },\r\n    {\r\n        value: \"Capacidad crítica\", label: \"Capacidad crítica\"\r\n    },\r\n    {\r\n        value: \"Capacidad de comunicación\", label: \"Capacidad de comunicación\"\r\n    },\r\n    {\r\n        value: \"Capacidad de resolución de problemas\", label:  \"Capacidad de resolución de problemas\"\r\n    },\r\n    {\r\n        value: \"Colaboración o capacidad para trabajar en equipo\", label:\"Colaboración o capacidad para trabajar en equipo\"\r\n    },\r\n    {\r\n        value: \"Compromiso\", label: \"Compromiso\"\r\n    },\r\n    {\r\n        value: \"Computación en la nube\", label: \"Computación en la nube\"\r\n    },\r\n    {\r\n        value: \"Comunicación\", label: \"Comunicación\"\r\n    },\r\n    {\r\n        value: \"Comunicación escrita\", label: \"Comunicación escrita\"\r\n    },\r\n    {\r\n        value: \"Comunicación verbal y no verbal persuasiva\", label: \"Comunicación verbal y no verbal persuasiva\"\r\n    },\r\n    {\r\n        value: \"Control\", label: \"Control\"\r\n    },\r\n    {\r\n        value: \"Control del estrés\", label: \"Control del estrés\"\r\n    },\r\n    {\r\n        value: \"Creatividad\", label: \"Creatividad\"\r\n    },\r\n    {\r\n        value: \"Decisión\", label: \"Decisión\"\r\n    },\r\n    {\r\n        value: \"Delegación\", label: \"Delegación\"\r\n    },\r\n    {\r\n        value: \"Desarrollo de subordinados\", label: \"Desarrollo de subordinados\"\r\n    },\r\n    {\r\n        value: \"disciplina\", label:  \"disciplina\"\r\n    },\r\n    {\r\n        value: \"discreción\", label: \"discreción\"\r\n    },\r\n    {\r\n        value: \"empatia\", label: \"empatia\"\r\n    },\r\n    {\r\n        value: \"energía\", label: \"energía\"\r\n    },\r\n    {\r\n        value: \"escucha\", label: \"escucha\"\r\n    },\r\n    {\r\n        value: \"espíritu comercial\", label: \"espíritu comercial\"\r\n    },\r\n    {\r\n        value: \"estabilidad\", label: \"estabilidad\"\r\n    },\r\n    {\r\n        value: \"estrategia\", label: \"estrategia\"\r\n    },\r\n    {\r\n        value: \"facilidad aprendizaje\", label: \"facilidad aprendizaje\"\r\n    },\r\n    {\r\n        value: \"flexibilidad\", label: \"flexibilidad\"\r\n    },\r\n    {\r\n        value: \"gestión\", label: \"gestión\"\r\n    }, \r\n    {\r\n        value: \"gestión de personas\", label: \"gestión de personas\"\r\n    },\r\n    {\r\n        value: \"gestión del aprendizaje\", label: \"gestión del aprendizaje\"\r\n    },\r\n    {\r\n        value: \"gestión del tiempo\", label: \"gestión del tiempo\"\r\n    },\r\n    {\r\n        value: \"honestidad\", label: \"honestidad\"\r\n    },\r\n    {\r\n        value: \"impacto\", label: \"impacto\"\r\n    },\r\n    {\r\n        value: \"independencia\", label: \"independencia\"\r\n    },\r\n    {\r\n        value: \"iniciativa\", label: \"iniciativa\"\r\n    },\r\n    {\r\n        value: \"integridad\", label: \"integridad\"\r\n    },\r\n    {\r\n        value: \"inteligencia emocional\", label: \"inteligencia emocional\"\r\n    },\r\n    {\r\n        value: \"lealtad\", label:\"lealtad\"\r\n    },\r\n    {\r\n        value: \"liderazgo\", label: \"liderazgo\"\r\n    },\r\n    {\r\n        value: \"meticulosidad\", label: \"meticulosidad\"\r\n    },\r\n    {\r\n        value: \"negociación\", label: \"negociación\"\r\n    },\r\n    {\r\n        value: \"networking\", label:  \"networking\"\r\n    },\r\n    {\r\n        value: \"niveles de trabajo\", label: \"niveles de trabajo\"\r\n    },\r\n    {\r\n        value: \"organización\", label: \"organización\"\r\n    },\r\n    {\r\n        value: \"orientación al cliente\", label: \"orientación al cliente\"\r\n    },\r\n    {\r\n        value: \"orientación al crecimiento\", label: \"orientación al crecimiento\"\r\n    },\r\n    {\r\n        value: \"orientación al logro\", label: \"orientación al logro\"\r\n    },\r\n    {\r\n        value: \"orientación estratégica\", label: \"orientación estratégica\"\r\n    },\r\n    {\r\n        value: \"perseverancia\", label: \"perseverancia\"\r\n    },\r\n    {\r\n        value: \"persuasión\", label: \"persuasión\"\r\n    },\r\n    {\r\n        value: \"planificación\", label: \"planificación\"\r\n    },\r\n    {\r\n        value: \"planificación y organización\", label: \"planificación y organización\"\r\n    },\r\n    {\r\n        value: \"polivalencia\", label: \"polivalencia\"\r\n    },\r\n    {\r\n        value: \"proactividad\", label:\"proactividad\"\r\n    },\r\n    {\r\n        value: \"proyección profesional\", label: \"proyección profesional\"\r\n    },\r\n    {\r\n        value: \"rapidez\", label: \"rapidez\"\r\n    },\r\n    {\r\n        value: \"razonamiento analítico\", label: \"razonamiento analítico\"\r\n    },\r\n    {\r\n        value: \"resiliencia\", label: \"resiliencia\"\r\n    },\r\n    {\r\n        value: \"resistencia\", label: \"resistencia\"\r\n    },\r\n    {\r\n        value: \"resolución de conflictos\", label: \"resolución de conflictos\"\r\n    },\r\n    {\r\n        value: \"seguridad\", label: \"seguridad\"\r\n    },\r\n    {\r\n        value: \"sensibilidad interpersonal\", label: \"sensibilidad interpersonal\"\r\n    },\r\n    {\r\n        value: \"sensibilidad organizacional\", label: \"sensibilidad organizacional\"\r\n    },\r\n    {\r\n        value: \"síntesis\", label: \"síntesis\"\r\n    },\r\n    {\r\n        value: \"sociabilidad\", label: \"sociabilidad\"\r\n    },\r\n    {\r\n        value: \"tenacidad\", label: \"tenacidad\"\r\n    },\r\n    {\r\n        value: \"tolerancia al estrés\", label: \"tolerancia al estrés\"\r\n    },\r\n    {\r\n        value: \"trabajo en equipo\", label: \"trabajo en equipo\"\r\n    },\r\n    {\r\n        value: \"análisisnumérico\", label: \"análisisnumérico\"\r\n    }\r\n]","export const userBenefits = [\r\n    {\r\n        value: \"Flexibilidad horaria\", label:\"Flexibilidad horaria\"\r\n    },\r\n     {\r\n        value: \"Teletrabajo\", label:\"Teletrabajo\"\r\n    },\r\n     {\r\n        value: \"Seguro médico\", label:\"Seguro médico\"\r\n    },\r\n     {\r\n        value: \"Retribución flexible\", label:\"Retribución flexible\"\r\n    },\r\n     {\r\n        value: \"jornada intensiva viernes\", label:\"Jornada intensiva viernes\"\r\n    },\r\n     {\r\n        value: \"jornada intensiva verano\", label:\"Jornada intensiva verano\"\r\n    },\r\n     {\r\n        value: \"Parking empresa\", label:\"Parking empresa\"\r\n    },\r\n     {\r\n        value: \"Plan de formación interna\", label:\"Plan de formación interna\"\r\n    },\r\n     {\r\n        value: \"Stock option\", label:\"Stock option\"\r\n    },\r\n     {\r\n        value: \"Ticket restaurante\", label:\"Ticket restaurante\"\r\n    },\r\n      {\r\n        value: \"Ticket transporte\", label:\"Ticket transporte\"\r\n    },\r\n    ]\r\n    ","import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport { postOffer } from '../../api/offers';\r\nimport { getCompanyData } from '../../api/auth.api';\r\nimport '../../CSS/postOffer.css';\r\nimport countries from '../../countries.json';\r\nimport $ from \"jquery\";\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { competencesJS } from '../../FolderForSelects/competencesJS';\r\nimport { languageOptions } from '../../FolderForSelects/languageOptions';\r\nimport { userBenefits } from '../../FolderForSelects/userBenefits';\r\nimport { sectors, categories, contracts, experience, studies } from '../../FolderForSelects/htmlSelects';\r\n\r\n\r\n\r\n\r\nexport const PostJobOffer = (props) => {\r\n\r\n    const animatedComponents = makeAnimated();\r\n    const history = useHistory();\r\n    const { register, handleSubmit } = useForm();\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    const [handler, setHandler] = useState(false);\r\n    const [description, setDescription] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [sector, setSector] = useState(sectors);\r\n    const [website, setWebsite] = useState('');\r\n    const [countryNameState, setCountryNameState] = useState(countries.map(country => country.name.common));\r\n    const [category, setCategory] = useState(categories);\r\n    const [contract, setContract] = useState(contracts);\r\n    const [minExp, setMinExp] = useState(experience);\r\n    const [minStudies, setMinStudies] = useState(studies);\r\n    const [language, setLanguage] = useState([]);\r\n    const [competences, setCompetences] = useState([]);\r\n    const [benefits, setBenefits] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [value, setValue] = useState([]);\r\n\r\n\r\n    const countryName = countryNameState.map(countryName => countryName);\r\n    const sectorTypeMap = sector.map(sectorTypeMap => sectorTypeMap);\r\n    const categoryNameMap = category.map(categoryNameMap => categoryNameMap);\r\n    const contractNameMap = contract.map(contractNameMap => contractNameMap);\r\n    const minExpMap = minExp.map(minExpMap => minExpMap);\r\n    const minStudiesMap = minStudies.map(minStudiesMap => minStudiesMap);\r\n\r\n\r\n    const handleTrueOrFalse = () => setHandler(!handler);\r\n    const handleSector = () => setSector(sectorTypeMap);\r\n    const handleCountryName = () => setCountryNameState(countryName);\r\n    const handleCategory = () => setCategory(categoryNameMap);\r\n    const handleContract = () => setContract(contractNameMap);\r\n    const handleMinExp = () => setMinExp(minExpMap);\r\n    const handleStudies = () => setMinStudies(minStudiesMap);\r\n\r\n    const createOption = (label) => ({\r\n        label,\r\n        value: label,\r\n    });\r\n    \r\n    const components = {\r\n        DropdownIndicator: null,\r\n    };\r\n    \r\n    const handleChange = (value) => {\r\n        setValue(value)\r\n    };\r\n\r\n    const handleInputChange = (inputValue) => {\r\n        setInputValue(inputValue)\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n\r\n        if (!inputValue) return;\r\n        switch (event.key) {\r\n            case 'Enter':\r\n            case 'Tab':\r\n                setInputValue('')\r\n                setValue([...value, createOption(inputValue)])\r\n                event.preventDefault();\r\n                break;\r\n            default: return ;\r\n        }\r\n    };\r\n\r\n    let competencesToSet = competencesJS.map((comp, index) => {\r\n        return {\r\n            label: comp.label,\r\n            value: comp.value,\r\n            key: index,\r\n        }\r\n    });\r\n\r\n    let languageOptionsToSet = languageOptions.map((lang, index) => {\r\n        return {\r\n            label: lang.label,\r\n            value: lang.value,\r\n            key: index,\r\n        }\r\n    });\r\n\r\n    let socialBenefits = userBenefits.map((ben, index) => {\r\n        return {\r\n            label: ben.label,\r\n            value: ben.value,\r\n            key: index\r\n        }\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            const result = await getCompanyData(props.match.params.companyId)\r\n            setDescription(result.data.user.description);\r\n            setWebsite(result.data.user.website)\r\n            setCompanyName(result.data.user.companyName)\r\n\r\n        };\r\n\r\n        fetchData();\r\n\r\n\r\n    }, [props.match.params.companyId]);\r\n\r\n\r\n\r\n    $(() => {\r\n        $(\"#varRetrib\").click(function () {\r\n            if ($(this).is(\":checked\")) {\r\n                $(\"#hasVarRetBox\").show();\r\n            } else {\r\n                $(\"#hasVarRetBox\").hide();\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        postOffer(props.match.params.companyId, data)\r\n            .then(function (result) {\r\n\r\n                if (result.status === 200) {\r\n                    setInfoSent(!infoSent)\r\n                    history.push(`/company/${props.match.params.companyId}/dashboard`)\r\n                } else {\r\n                    setInfoSent(infoSent);\r\n                };\r\n            })\r\n            .catch(function (error) {\r\n\r\n                if (error.response.status !== 200) {\r\n\r\n                    setInfoSent(false);\r\n                    return;\r\n                };\r\n            });\r\n    };\r\n\r\n    const customTheme = (theme) => {\r\n        return {\r\n            ...theme,\r\n            colors: {\r\n                ...theme.colors,\r\n                primary25: 'rgb(255, 188, 73)',\r\n                primary: 'blue'\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='div-wrapper p-0'>\r\n            <>\r\n                <img className='gamanfy-logo' src='/gamanfy_logo_blanco[6882].png' alt='logo-gamanfy' />\r\n                <div>\r\n                    <form className='form-group mx-auto form-postOffer' onSubmit={handleSubmit(onSubmit)} autoComplete='off'>\r\n                        {/*   <div>\r\n                            <p className='p-signup'>\r\n                                Para Publicar una oferta de trabajo, rellena los siguientes campos\r\n                            </p>\r\n\r\n                        </div> */}\r\n                        <div className='signUp-form mx-auto'>\r\n\r\n                            <div><label>Puntuación </label></div>\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"scorePerRec\"\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    defaultValue='5'\r\n                                    placeholder='Puntuación por Recomendación' />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"moneyPerRec\"\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    placeholder='Recompensa por recomendación €' />\r\n                            </div>\r\n                            <div><label>Servicios de Contratación</label></div>\r\n                            <div>\r\n                                <label >\r\n                                    <input className='checkbox-label' disabled />\r\n                                    <input className='checkbox-round' type=\"checkbox\" name=\"hasSourcingWithInfluencer\" onClick={handleTrueOrFalse} ref={register} />\r\n                                Sourcing con Influencer\r\n                            </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label >\r\n                                    <input className='checkbox-label' disabled />\r\n                                    <input className='checkbox-round' type=\"checkbox\" name=\"hasExclusiveHeadHunter\" onClick={handleTrueOrFalse} ref={register} />\r\n                                Servicio exclusivo headhunting\r\n                            </label>\r\n                            </div>\r\n                            <div><label>Servicios Adicionales</label></div>\r\n                            <div>\r\n                                <label >\r\n                                    <input className='checkbox-label' disabled />\r\n                                    <input className='checkbox-round' type=\"checkbox\" name=\"hasPersonalityTest\" onClick={handleTrueOrFalse} ref={register} />\r\n\r\n                                  Test de personalidad\r\n                            </label>\r\n                            </div>\r\n                            <div>\r\n                                <label >\r\n                                    <input className='checkbox-label' disabled />\r\n                                    <input className='checkbox-round' type=\"checkbox\" name=\"hasVideoInterview  \" onClick={handleTrueOrFalse} ref={register} />\r\n                                Video entrevista en diferido\r\n                            </label>\r\n                            </div>\r\n                            <div>\r\n                                <label >\r\n                                    <input className='checkbox-label' disabled />\r\n                                    <input className='checkbox-round' type=\"checkbox\" name=\"hasKitOnBoardingGamanfy  \" onClick={handleTrueOrFalse} ref={register} />\r\n                                Kit onboarding Gamanfy\r\n                            </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='signUp-form mx-auto'>\r\n\r\n                            <div>\r\n                                <label>Datos de la Empresa</label>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"companyName\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        defaultValue={companyName}\r\n                                        placeholder='Nombre de la empresa' />\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        defaultValue={description}\r\n                                        placeholder='Descripción' />\r\n\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"website\"\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            placeholder='Página web'\r\n                                            defaultValue={website}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"recruiter\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Gestor del proceso de selección'\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='signUp-form  mx-auto'>\r\n                            <div><label>Datos de la oferta</label></div>\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"jobName\"\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    placeholder='Nombre de la oferta' />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label>Fecha de inicio</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"onDate\"\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Fecha final</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"offDate\"\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"switch-button\">\r\n                                <label>Estado del proceso</label>\r\n                                <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"processState\" onClick={handleTrueOrFalse} ref={register} />\r\n                                <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label >\r\n                                    <input className='checkbox-label' disabled />\r\n                                    <input className='checkbox-round' type=\"checkbox\" name=\"isRemote\" onClick={handleTrueOrFalse} ref={register} />\r\n                                Remoto\r\n                            </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"personsOnCharge\"\r\n                                    className='form-control signup-fields mx-auto'\r\n                                    ref={register({ required: true })}\r\n                                    placeholder='Personas a cargo' />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div>\r\n\r\n                            <div className='signUp-form mx-auto'>\r\n                                <div><label>Datos del Puesto de Trabajo</label></div>\r\n                                <div>\r\n                                    <div><label>Misión principal</label></div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"mainMission\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Indica en una frase la misión principal del puesto de trabajo'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <div><label>Descripción del puesto</label></div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"jobDescription\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Indica en una frase la misión principal del puesto de trabajo'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <div><label>Equipo</label></div>\r\n                                    <textarea\r\n                                        style={{ height: '6em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"team\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Describe en que entorno y equipo va a trabajar'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <label>\r\n                                    Seleccione su sector\r\n                                 <select\r\n                                        name='sector'\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        onChange={e => handleSector(e)}\r\n                                    >\r\n                                        {\r\n                                            sectorTypeMap.map((doc, key) => {\r\n\r\n                                                return <option key={key} value={doc}>{doc}</option>;\r\n\r\n                                            })\r\n\r\n                                        }\r\n                                    </select>\r\n                                </label>\r\n\r\n\r\n                                <div>\r\n                                    <label>\r\n                                        País\r\n                             <select\r\n                                            name='countryName'\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            onChange={e => handleCountryName(e)}\r\n                                        >\r\n                                            {\r\n                                                countryName.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"cityForOffer\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Ciudad' />\r\n                                </div>\r\n                                <div>\r\n                                    <label>\r\n                                        Dirección\r\n                                 </label>\r\n\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"street\"\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            placeholder='Calle' />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"number\"\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            placeholder='Número' />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"zip\"\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            placeholder='Código postal' />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label>\r\n                                        Categoría\r\n                             <select\r\n                                            name='category'\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryNameMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label>\r\n                                        Tipo de Contrato\r\n                             <select\r\n                                            name='contract'\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            onChange={e => handleContract(e)}\r\n                                        >\r\n                                            {\r\n                                                contractNameMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"minGrossSalary\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Salario mínimo anual bruto €' />\r\n                                </div>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"maxGrossSalary\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Salario máximo bruto anual €   ' />\r\n                                </div>\r\n\r\n\r\n                                <div>\r\n                                    <label>\r\n                                        <input className='checkbox-label' disabled />\r\n\r\n                                        <input className='checkbox-round ' type=\"checkbox\" id=\"varRetrib\" name='variableRetribution'\r\n                                            onClick={handleTrueOrFalse} ref={register} />\r\n                                        <label htmlFor=\"varRetrib\" ></label>\r\n\r\n                            Retribución variable\r\n                         </label>\r\n\r\n                                </div>\r\n\r\n                                <div id=\"hasVarRetBox\" style={{ display: 'none' }}>\r\n                                    <input name='quantityVariableRetribution' className='form-control signup-fields mx-auto' ref={register} placeholder='Cantidad variable %' />\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n\r\n                                    <label>\r\n                                        <input className='checkbox-label' disabled />\r\n                                        <input className='checkbox-round ' type=\"checkbox\" name='showMoney'\r\n                                            onClick={handleTrueOrFalse} ref={register} />\r\n\r\n                            Mostrar el salario en la oferta\r\n                         </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label>\r\n                                        Requisitos <br />\r\n                                Experiencia Mínima\r\n                             <select\r\n                                            name='minExp'\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            onChange={e => handleMinExp(e)}\r\n                                        >\r\n                                            {\r\n                                                minExpMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>\r\n                                        Estudios Mínimos\r\n                             <select\r\n                                            name='minStudies'\r\n                                            className='form-control signup-fields mx-auto'\r\n                                            ref={register({ required: true })}\r\n                                            onChange={e => handleStudies(e)}\r\n                                        >\r\n                                            {\r\n                                                minStudies.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n                                <>\r\n                                    <div>\r\n                                        <label>Competencias Clave</label>\r\n                                        <Select\r\n                                            closeMenuOnSelect={false}\r\n                                            theme={customTheme}\r\n                                            components={animatedComponents}\r\n                                            placeholder='Seleccionar'\r\n                                            isMulti\r\n                                            isSearchable\r\n                                            options={competencesToSet}\r\n                                            onChange={setCompetences}\r\n                                            noOptionsMessage={() => 'No existen más opciones'}\r\n                                            name=\"keyComp\"\r\n                                            value={competences}\r\n                                        />\r\n                                        {!props.disabled && competences !== null && (<input name='keyComp' type='hidden' ref={register()} onChange={setCompetences} value={JSON.stringify(competences.map(comp => comp.value))} />)}\r\n\r\n\r\n                                    </div>\r\n                                </>\r\n\r\n                                <>\r\n                                    <div>\r\n                                        <label>Conocimientos Clave</label>\r\n                                        <CreatableSelect\r\n                                            closeMenuOnSelect={false}\r\n                                            theme={customTheme}\r\n                                            inputValue={inputValue}\r\n                                            onChange={handleChange}\r\n                                            onInputChange={handleInputChange}\r\n                                            onKeyDown={handleKeyDown}\r\n                                            components={components}\r\n                                            placeholder='Seleccionar'\r\n                                            isMulti\r\n                                            isClearable\r\n                                            menuIsOpen={false}\r\n                                            name=\"keyKnowledge\"\r\n                                            value={value}\r\n                                        />\r\n                                        {!props.disabled && value !== null && (<input name='keyKnowledge' type='text' ref={register()}  onKeyDown={handleKeyDown} onChange={handleChange}  value={JSON.stringify(value.map(val => val.value))} />)}\r\n\r\n\r\n                                    </div>\r\n                                </>\r\n\r\n                                <div>\r\n                                    <div><label>Requisitos mínimos</label></div>\r\n                                    <textarea\r\n                                        style={{ height: '8em' }}\r\n                                        type=\"textarea\"\r\n                                        name=\"minReqDescription\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Indica experiencia, disponibilidad, certificaciones y otros requisitos imprescindibles para el puesto. (Máx. 4000 caracteres)'\r\n                                        maxLength=\"4000\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <>\r\n                                    <div>\r\n                                        <label>Idiomas</label>\r\n                                        <Select\r\n\r\n                                            closeMenuOnSelect={false}\r\n                                            theme={customTheme}\r\n                                            components={animatedComponents}\r\n                                            placeholder='Seleccionar'\r\n                                            isMulti\r\n                                            isSearchable\r\n                                            options={languageOptionsToSet}\r\n                                            onChange={setLanguage}\r\n                                            noOptionsMessage={() => 'No existen más opciones'}\r\n                                            name=\"language\"\r\n                                            value={language}\r\n                                        />\r\n\r\n                                        {!props.disabled && language !== null && (<input name='language' type='hidden' ref={register()} onChange={setLanguage} value={JSON.stringify(language.map(lang => lang.value))} />)}\r\n\r\n\r\n                                    </div>\r\n                                </>\r\n\r\n                                <>\r\n                                    <div>\r\n                                        <label>Beneficios Sociales</label>\r\n                                        <Select\r\n                                            closeMenuOnSelect={false}\r\n                                            theme={customTheme}\r\n                                            components={animatedComponents}\r\n                                            placeholder='Seleccionar'\r\n                                            isMulti\r\n                                            isSearchable\r\n                                            options={socialBenefits}\r\n                                            onChange={setBenefits}\r\n                                            noOptionsMessage={() => 'No existen más opciones'}\r\n                                            name=\"benefits\"\r\n                                            value={benefits}\r\n                                        />\r\n                                        {!props.disabled && benefits !== null && (<input name='benefits' type='hidden' ref={register()} onChange={setBenefits} value={JSON.stringify(benefits.map(ben => ben.value))} />)}\r\n\r\n                                    </div>\r\n                                </>\r\n                                <div className='mt-3'>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"managerDescription\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='Descripción y experiencia del responsable' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"managerLinkedin\"\r\n                                        className='form-control signup-fields mx-auto'\r\n                                        ref={register({ required: true })}\r\n                                        placeholder='URL Linkedin persona responsable' />\r\n                                </div>\r\n\r\n\r\n                                <p className='p-cacc'> <input type=\"submit\" className='btn-cacc-su' style={{ width: '15em' }} value='Publicar oferta de trabajo' /> </p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </form>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { offerDetails } from '../../api/offers';\r\nimport '../../CSS/offerDetails.css';\r\nimport { logout } from '../../api/auth.api.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getCompanyData } from '../../api/users'\r\nimport { SendRecommendation } from '../UserPages/SendRecommendation';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport const OfferDetails = (props) => {\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userId = user.userId;\r\n    const firstName = user.firstName\r\n    const history = useHistory();\r\n    const [data, setData] = useState(undefined);\r\n    const [benefits, setBenefits] = useState(false);\r\n    const [company, setCompany] = useState([]);\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [companyID, setCompanyID] = useState('');\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        const any = async () => {\r\n            offerDetails(props.match.params.offerId).then(apiRes => {\r\n                setData(apiRes.data.offer);\r\n                setCompanyID(apiRes.data.offer.companyData.companyId);\r\n              \r\n                if (apiRes.data.offer.benefits !== undefined || null) {\r\n                    setBenefits(true)\r\n                }\r\n                \r\n            })\r\n        }\r\n        any()\r\n    }, [props.match.params.offerId])\r\n    \r\n    useEffect(() => {\r\n        const any = async () => {\r\n            getCompanyData(userId).then(apiRes => {\r\n                setCompany(apiRes.data.user)\r\n\r\n            })\r\n        }\r\n        any()\r\n    }, [userId]);\r\n\r\n    const handleClickLogout = () => {\r\n        logout()\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n\r\n    }\r\n\r\n    const wholeProps = {\r\n        companyId: companyID,\r\n        offerId: props.match.params.offerId,\r\n        userId: userId\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid bg-white wrapperOfferDetails'>\r\n            <div className='userLog'>\r\n                <h1 className='userName d-inline'>¡Hola {firstName}!</h1><button type=\"button\" className=\"btn\" onClick={handleClickLogout}><u>[ Cerrar Sesión ]</u></button>\r\n            </div>\r\n            {\r\n                company ?\r\n                    <Link className='back-btn' to={`/company/${userId}/dashboard`}> &#60; Volver a Ofertas</Link>\r\n                    :\r\n                    <Link className='back-btn' to={`/user/${userId}/dashboard`}> &#60; Volver a Ofertas</Link>\r\n\r\n            }\r\n\r\n            {data !== undefined ?\r\n                <section className='text-left col-lg-8 mx-auto section-offerDetails'>\r\n                    {\r\n\r\n                        company ?\r\n                            <div className='no-offerDetails-aside bg-transparent'> </div>\r\n\r\n                            :\r\n                            <div className='card offerDetails-aside bg-white'>\r\n                                <h6 className='text-center'> Con esta recomendación, <br /> podrás ganar</h6>\r\n                                <span className='mr-2 text-center aside-span mt-2'> {data.moneyPerRec}</span>\r\n                                <span className='mr-2 text-center aside-span'> + {data.scorePerRec} puntos</span>\r\n                                <button className='btn-cacc-su ml-5 mt-4 ml-5' onClick={showModal}>Recomendar</button>\r\n                                <Modal className='recommend-modal' show={isOpen} onHide={hideModal}>\r\n                                    <Modal.Body scrollable='true'>\r\n                                        <SendRecommendation {...wholeProps} />\r\n                                    </Modal.Body>\r\n                                </Modal>\r\n                                <small className='text-center mt-3'> <u>¿ Te recordamos cómo funciona?</u></small>\r\n                            </div>\r\n\r\n                    }\r\n\r\n                    <img className='offer-pic pic-details d-block' src={data.imgPath} alt='' />\r\n\r\n                    <div>\r\n                        <div >\r\n                            <h4 className='h4-offDetails'> {data.jobOfferData.jobName}</h4>\r\n                            <span className='h4-offDetails'>{data.companyData.companyName}</span>\r\n                            <p className='longP'>{data.addressId.cityForOffer} | {data.contractId.contract} | {data.retribution.minGrossSalary} </p>\r\n                        </div>\r\n                        <p className='longP'>{data.jobDescription.mainMission}</p>\r\n                        <div>\r\n                            <h4 className='h4-offDetails'> Descripción</h4>\r\n                            <p className='longP'>{data.jobDescription.jobDescription}</p>\r\n                        </div>\r\n\r\n                        {\r\n                            benefits === true ?\r\n                                <div>\r\n                                    <h4 className='h4-offDetails'>Beneficios</h4>\r\n                                    {\r\n\r\n                                        data.benefits.toString().replace(/\\[|]|['\"]+/g, '').replace(/\\s/g, \" \").replace(/,/g, ', ').split(', ').map((ben, index) => {\r\n\r\n                                            return (\r\n                                                <li className='longP' key={index}>{ben}</li>\r\n\r\n                                            )\r\n                                        })\r\n                                    } </div> : null\r\n                        }\r\n\r\n                        <div className='mt-3'>\r\n                            <h4 className='h4-offDetails'>Requisitos</h4>\r\n\r\n                            {\r\n                                data.minRequirements ?\r\n                                    <div>\r\n                                        {\r\n\r\n                                            data.minRequirements.language.toString().replace(/\\[|]|['\"]+/g, '').replace(/\\s/g, \" \").replace(/,/g, ', ').split(', ').map((ben, index) => {\r\n\r\n                                                return (\r\n                                                    <li className='longP' key={index}>{ben}</li>\r\n\r\n                                                )\r\n                                            })\r\n\r\n                                        }\r\n                                        <li className='longP'> Experiencia: {data.minRequirements.minExp}</li>\r\n                                        <li className='longP'> Estudios: {data.minRequirements.minStudies}</li>\r\n                                        <li className='longP'>{data.minRequirements.minReqDescription}</li>\r\n                                    </div> : null\r\n                            }\r\n\r\n                        </div>\r\n                        <div className='mt-3'>\r\n                            <h4 className='h4-offDetails'>Conocimientos clave</h4>\r\n                            {\r\n                                data.keyKnowledge !== undefined ?\r\n                                    <div className='mb-3'>\r\n                                        {\r\n\r\n                                            data.keyKnowledge.keyKnowledge.toString().replace(/\\[|]|['\"]+/g, '').replace(/\\s/g, \" \").replace(/,/g, ', ').split(', ').map((ben, index) => {\r\n\r\n                                                return (\r\n                                                    <li className='longP' key={index}>{ben}</li>\r\n\r\n                                                )\r\n                                            })\r\n\r\n                                        }\r\n\r\n                                    </div> : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </section>\r\n                : <p>No hay ofertas para mostrar</p>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getCompanyData } from '../../api/users';\r\nimport '../../CSS/candidates.css';\r\n\r\nexport const Candidates = (props) => {\r\n\r\n    const [postedOffers, setPostedOffers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const any = async () => {\r\n            getCompanyData(props.match.params.companyId).then(apiRes => {\r\n                console.log(apiRes.data)\r\n                setPostedOffers(apiRes.data.user.postedOffers);\r\n\r\n            });\r\n\r\n        }\r\n        any()\r\n    }, [props.match.params.companyId]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='div-wrapper'>\r\n\r\n            <div>\r\n                <h3 className='offersh3 mt-3'>Candidatos</h3>\r\n                {\r\n                    postedOffers.length > 0 ?\r\n                        postedOffers.map((data) => {\r\n                            return data.recommendedTimes.map((candidate, index) => {\r\n                                \r\n                                return (\r\n                                    <div className='card candidates-card mx-auto' key={index}>\r\n                                        <p className='p-signup'>{candidate.recommendedFirstName} {candidate.recommendedLastName}</p>\r\n                                        <p className='p-signup'>Aplicado el {candidate.createdAt.substring(0, 10)}</p>\r\n                                        <button type=\"submit\" className='btn-moreinfo'><i className=\"fas fa-plus-circle\"></i>INFO</button>\r\n                                    </div>\r\n                                )\r\n                            });\r\n                        })\r\n                        : <p>No hay candidatos en esta oferta</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthState } from \"./context/auth/authState\";\r\nimport { AnonRoute } from \"./components/routes/AnonRoute\";\r\nimport { PrivateRoute } from \"./components/routes/PrivateRoute\";\r\nimport { Route } from \"react-router-dom\";\r\nimport tokenAuth from './config/token';\r\nimport Home from './pages/Home';\r\nimport {PreLogin} from './pages/PreLogin';\r\nimport {Login} from \"./pages/UserPages/Login\";\r\nimport {Signup} from \"./pages/UserPages/Signup\";\r\nimport {SignUpMssg} from './pages/UserPages/SignUpMssg';\r\nimport ConfirmationToken from './pages/UserPages/ConfirmationToken';\r\nimport {UserCompleteProfile } from \"./pages/UserPages/UserCompleteProfile\";\r\nimport {UserDashboard} from './pages/UserPages/UserDashboard';\r\nimport {UserEditProfile} from './pages/UserPages/UserEditProfile'\r\nimport {CompanySignup} from './pages/CompanyPages/CompanySignup';\r\nimport {CompanySignUpMssg} from './pages/CompanyPages/CompanySignUpMssg'\r\nimport CompanyConfirmationToken from './pages/CompanyPages/CompanyConfirmationToken';\r\nimport {CompanyLogin} from './pages/CompanyPages/CompanyLogin';\r\nimport {CompanyCompleteProfile} from './pages/CompanyPages/CompanyCompleteProfile';\r\nimport {CompanyDashboard} from './pages/CompanyPages/CompanyDashboard';\r\nimport {CompanyEditProfile} from './pages/CompanyPages/CompanyEditProfile';\r\nimport { PostJobOffer } from \"./pages/Offers/PostJobOffer\";\r\nimport {OffersDashboard} from './pages/Offers/OffersDashboard';\r\nimport {OfferDetails} from './pages/Offers/OfferDetails';\r\nimport {Recommendations} from './pages/UserPages/Recommendations';\r\nimport { SendRecommendation } from \"./pages/UserPages/SendRecommendation\";\r\nimport {CompanyOffers} from './pages/Offers/CompanyOffers';\r\nimport { SelecProcess } from \"./pages/CompanyPages/SelecProcess\";\r\nimport {Candidates} from './pages/CompanyPages/Candidates';\r\n\r\nconst token = localStorage.getItem('token');\r\nif(token) tokenAuth(token)\r\n\r\nexport const App = () => {\r\n  \r\n  return (\r\n    <Router>\r\n      <AuthState>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <AnonRoute exact path=\"/auth/user/signup\" component={Signup} />  \r\n            <AnonRoute exact path='/auth/user/token-sent' component ={SignUpMssg}/> \r\n            <AnonRoute exact path='/auth/login' component={PreLogin}/>\r\n            <AnonRoute exact path=\"/auth/user/login\" component={Login} />   \r\n            <AnonRoute exact path=\"/auth/confirmation/:userId/:userToken/:isCompany\" component={ConfirmationToken} />  \r\n            <AnonRoute exact path=\"/auth/user/:userId/:isCompany/complete-profile\" component={UserCompleteProfile}/>\r\n            <AnonRoute exact path=\"/auth-co/confirmation/:companyId/:companyToken\" component={CompanyConfirmationToken} />  \r\n            <PrivateRoute exact path='/user/:userId/dashboard' component={UserDashboard}/>\r\n            <PrivateRoute exact path='/recommend/:userId/dashboard' component={Recommendations}/>\r\n            <PrivateRoute exact path='/recommend/:companyId/:offerId/:userId' component={SendRecommendation}/>\r\n            <PrivateRoute exact path='/user/:userId/edit-profile' component={UserEditProfile}/>\r\n            <AnonRoute exact path=\"/auth-co/company/signup\" component={CompanySignup} />  \r\n            <AnonRoute exact path='/auth-co/company/token-sent' component ={CompanySignUpMssg}/> \r\n            <AnonRoute exact path=\"/auth-co/company/login\" component={CompanyLogin} /> \r\n            <AnonRoute exact path='/auth-co/company/:companyId/complete-profile' component={CompanyCompleteProfile}/>\r\n            <PrivateRoute exact path='/company/:companyId/dashboard' component={CompanyDashboard}/> \r\n            <PrivateRoute exact path='/company/:companyId/edit-profile' component={CompanyEditProfile}/>\r\n            <PrivateRoute exact path='/company/:companyId/:offerId/my-processes' component={SelecProcess}/>\r\n            <PrivateRoute exact path='/offers/:companyId/post-job-offer' component={PostJobOffer}/>   \r\n            <PrivateRoute exact path = '/offers/dashboard' component={OffersDashboard}/>\r\n            <PrivateRoute exact path ='/offers/getData/:companyId' component={CompanyOffers}/>\r\n            <PrivateRoute exact path='/offer-details/:offerId' component={OfferDetails}/>\r\n            <PrivateRoute exact path='/company/:companyId/:offerId/candidates' component={Candidates}/>\r\n          </Switch>\r\n      </AuthState>\r\n    </Router>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}